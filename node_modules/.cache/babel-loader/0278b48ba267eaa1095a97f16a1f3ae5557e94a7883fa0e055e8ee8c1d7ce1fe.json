{"ast":null,"code":"var _jsxFileName = \"C:\\\\Misc\\\\Documents\\\\Career\\\\FinTech\\\\BlockChain\\\\FrontEnd\\\\buildspace-dao-starter\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useAddress, ConnectWallet, Web3Button, useContract, useNFTBalance } from '@thirdweb-dev/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const address = useAddress();\n  console.log(\"👋 Address:\", address);\n  const editionDropAddress = process.env.EDITION_DROP_ADDRESS;\n  const {\n    contract: editionDrop\n  } = useContract(editionDropAddress, \"edition-drop\");\n  const {\n    contract: token\n  } = useContract(process.env.TOKEN_ADDRESS, 'token');\n\n  // Hook to check if the user has our NFT\n  const {\n    data: nftBalance\n  } = useNFTBalance(editionDrop, address, \"0\");\n  const [memberTokenAmounts, setMemberTokenAmounts] = useState([]);\n  const [memberAddresses, setMemberAddresses] = useState([]);\n  const hasClaimedNFT = useMemo(() => {}, [nftBalance]);\n  const shortenAddress = str => {\n    return str.substring(0, 6) + '...' + str.substring(str.length - 4);\n  };\n  useEffect(() => {\n    if (!hasClaimedNFT) {\n      return;\n    }\n    const getAllAddresses = async () => {\n      try {\n        const memberAddresses = process.env.MEMBERS.split(',');\n        setMemberAddresses(memberAddresses);\n        console.log('🚀 Members addresses', memberAddresses);\n      } catch (error) {\n        console.error('failed to get member list', error);\n      }\n    };\n    getAllAddresses();\n  }, [hasClaimedNFT, memberAddresses]);\n  useEffect(() => {\n    if (!hasClaimedNFT) {\n      return;\n    }\n    const getAllBalances = async () => {\n      try {\n        const amounts = await (token === null || token === void 0 ? void 0 : token.history.getAllHolderBalances());\n        setMemberTokenAmounts(amounts);\n        console.log('👜 Amounts', amounts);\n      } catch (error) {\n        console.error('failed to get member balances', error);\n      }\n    };\n    getAllBalances();\n  }, [hasClaimedNFT, token === null || token === void 0 ? void 0 : token.history]);\n  const memberList = useMemo(() => {\n    return memberAddresses.map(address => {\n      const member = memberTokenAmounts === null || memberTokenAmounts === void 0 ? void 0 : memberTokenAmounts.find(({\n        holder\n      }) => holder === address);\n      return {\n        address,\n        tokenAmount: (member === null || member === void 0 ? void 0 : member.balance.displayValue) || '0'\n      };\n    });\n  }, [memberAddresses, memberTokenAmounts]);\n  if (!address) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"landing\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to DemonSlayerDAO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-hero\",\n        children: /*#__PURE__*/_jsxDEV(ConnectWallet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n  if (hasClaimedNFT) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"member-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDF6ADAO Member Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Congratulations on being a member\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Member List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Token Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: memberList.map(member => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: shortenAddress(member.address)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: member.tokenAmount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 23\n                  }, this)]\n                }, member.address, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mint-nft\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mint your free \\uD83C\\uDF6ADAO Membership NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-hero\",\n      children: /*#__PURE__*/_jsxDEV(Web3Button, {\n        contractAddress: \"0x8ed15E768DF13eD6808dc1220Bc94b11bFaC31f9\",\n        action: contract => {\n          contract.erc1155.claim(0, 1);\n        },\n        onSuccess: () => {\n          alert(`🌊 Successfully Minted! Check it out on OpenSea: https://testnets.opensea.io/assets/${editionDropAddress}/0`);\n        },\n        onError: error => {\n          console.log(\"Failed to mint NFT\", error);\n        },\n        children: \"Mint your NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YAXYL8863PywyMVtxnEHywT6KOU=\", false, function () {\n  return [useAddress, useContract, useContract, useNFTBalance];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useAddress","ConnectWallet","Web3Button","useContract","useNFTBalance","jsxDEV","_jsxDEV","App","_s","address","console","log","editionDropAddress","process","env","EDITION_DROP_ADDRESS","contract","editionDrop","token","TOKEN_ADDRESS","data","nftBalance","memberTokenAmounts","setMemberTokenAmounts","memberAddresses","setMemberAddresses","hasClaimedNFT","shortenAddress","str","substring","length","getAllAddresses","MEMBERS","split","error","getAllBalances","amounts","history","getAllHolderBalances","memberList","map","member","find","holder","tokenAmount","balance","displayValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","contractAddress","action","erc1155","claim","onSuccess","alert","onError","_c","$RefreshReg$"],"sources":["C:/Misc/Documents/Career/FinTech/BlockChain/FrontEnd/buildspace-dao-starter/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useAddress, ConnectWallet, Web3Button, useContract, useNFTBalance } from '@thirdweb-dev/react';\r\n\r\nconst App = () => {\r\n  const address = useAddress();\r\n  console.log(\"👋 Address:\", address);\r\n\r\n  const editionDropAddress = process.env.EDITION_DROP_ADDRESS;\r\n  const { contract: editionDrop } = useContract(editionDropAddress, \"edition-drop\");\r\n\r\n  const { contract: token } = useContract(process.env.TOKEN_ADDRESS, 'token');\r\n\r\n  // Hook to check if the user has our NFT\r\n  const { data: nftBalance } = useNFTBalance(editionDrop, address, \"0\");\r\n\r\n  const [memberTokenAmounts, setMemberTokenAmounts] = useState([]);\r\n  const [memberAddresses, setMemberAddresses] = useState([]);\r\n\r\n  const hasClaimedNFT = useMemo(() => {  \r\n\r\n  }, [nftBalance]);\r\n\r\n  const shortenAddress = (str) => {\r\n    return str.substring(0, 6) + '...' + str.substring(str.length - 4);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!hasClaimedNFT) {\r\n      return;\r\n    }\r\n    const getAllAddresses = async () => {\r\n      try {\r\n        const memberAddresses = process.env.MEMBERS.split(',');\r\n        setMemberAddresses(memberAddresses);\r\n        console.log('🚀 Members addresses', memberAddresses);\r\n      } catch (error) {\r\n        console.error('failed to get member list', error);\r\n      }\r\n    };\r\n    getAllAddresses();\r\n  }, [hasClaimedNFT, memberAddresses]);\r\n\r\n  useEffect(() => {\r\n    if (!hasClaimedNFT) {\r\n      return;\r\n    }\r\n    \r\n    const getAllBalances = async () => {\r\n      try {\r\n        const amounts = await token?.history.getAllHolderBalances();\r\n        setMemberTokenAmounts(amounts);\r\n        console.log('👜 Amounts', amounts);\r\n      } catch (error) {\r\n        console.error('failed to get member balances', error);\r\n      }\r\n    };\r\n    getAllBalances();\r\n  }, [hasClaimedNFT, token?.history]);\r\n\r\n  const memberList = useMemo(() => {\r\n    return memberAddresses.map((address) => {\r\n      const member = memberTokenAmounts?.find(({ holder }) => holder === address);\r\n  \r\n      return {\r\n        address,\r\n        tokenAmount: member?.balance.displayValue || '0',\r\n      };\r\n    });\r\n  }, [memberAddresses, memberTokenAmounts]);\r\n\r\n  if (!address) {\r\n    return (\r\n      <div className=\"landing\">\r\n        <h1>Welcome to DemonSlayerDAO</h1>\r\n        <div className=\"btn-hero\">\r\n          <ConnectWallet />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (hasClaimedNFT) {\r\n    return (\r\n      <div className=\"member-page\">\r\n        <h1>🍪DAO Member Page</h1>\r\n        <p>Congratulations on being a member</p>\r\n        <div>\r\n          <div>\r\n            <h2>Member List</h2>\r\n            <table className=\"card\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Address</th>\r\n                  <th>Token Amount</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {memberList.map((member) => {\r\n                  return (\r\n                    <tr key={member.address}>\r\n                      <td>{shortenAddress(member.address)}</td>\r\n                      <td>{member.tokenAmount}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"mint-nft\">\r\n      <h1>Mint your free 🍪DAO Membership NFT</h1>\r\n      <div className=\"btn-hero\">\r\n        <Web3Button \r\n          contractAddress='0x8ed15E768DF13eD6808dc1220Bc94b11bFaC31f9'\r\n          action={contract => {\r\n            contract.erc1155.claim(0, 1)\r\n          }}\r\n          onSuccess={() => {\r\n            alert(`🌊 Successfully Minted! Check it out on OpenSea: https://testnets.opensea.io/assets/${editionDropAddress}/0`);\r\n          }}\r\n          onError={error => {\r\n            console.log(\"Failed to mint NFT\", error);\r\n          }}\r\n        >\r\n          Mint your NFT \r\n        </Web3Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}