{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateEip3770Address = exports.validateEthereumAddress = exports.validateEip3770NetworkPrefix = exports.isValidEip3770NetworkPrefix = exports.getEip3770NetworkPrefixFromChainId = exports.parseEip3770Address = void 0;\nconst web3_utils_1 = require(\"web3-utils\");\nconst config_1 = require(\"./config\");\nfunction parseEip3770Address(fullAddress) {\n  const parts = fullAddress.split(':');\n  const address = parts.length > 1 ? parts[1] : parts[0];\n  const prefix = parts.length > 1 ? parts[0] : '';\n  return {\n    prefix,\n    address\n  };\n}\nexports.parseEip3770Address = parseEip3770Address;\nfunction getEip3770NetworkPrefixFromChainId(chainId) {\n  const network = config_1.networks.find(network => chainId === network.chainId);\n  if (!network) {\n    throw new Error('No network prefix supported for the current chainId');\n  }\n  return network.shortName;\n}\nexports.getEip3770NetworkPrefixFromChainId = getEip3770NetworkPrefixFromChainId;\nfunction isValidEip3770NetworkPrefix(prefix) {\n  return config_1.networks.some(_ref => {\n    let {\n      shortName\n    } = _ref;\n    return shortName === prefix;\n  });\n}\nexports.isValidEip3770NetworkPrefix = isValidEip3770NetworkPrefix;\nfunction validateEip3770NetworkPrefix(prefix, currentChainId) {\n  const isCurrentNetworkPrefix = prefix === getEip3770NetworkPrefixFromChainId(currentChainId);\n  if (!isValidEip3770NetworkPrefix(prefix) || !isCurrentNetworkPrefix) {\n    throw new Error('The network prefix must match the current network');\n  }\n}\nexports.validateEip3770NetworkPrefix = validateEip3770NetworkPrefix;\nfunction validateEthereumAddress(address) {\n  const isValidAddress = (0, web3_utils_1.isHexStrict)(address) && (0, web3_utils_1.isAddress)(address);\n  if (!isValidAddress) {\n    throw new Error(\"Invalid Ethereum address \".concat(address));\n  }\n}\nexports.validateEthereumAddress = validateEthereumAddress;\nfunction validateEip3770Address(fullAddress, currentChainId) {\n  const {\n    address,\n    prefix\n  } = parseEip3770Address(fullAddress);\n  validateEthereumAddress(address);\n  if (prefix) {\n    validateEip3770NetworkPrefix(prefix, currentChainId);\n  }\n  return {\n    address,\n    prefix\n  };\n}\nexports.validateEip3770Address = validateEip3770Address;","map":{"version":3,"names":["web3_utils_1","require","config_1","parseEip3770Address","fullAddress","parts","split","address","length","prefix","exports","getEip3770NetworkPrefixFromChainId","chainId","network","networks","find","Error","shortName","isValidEip3770NetworkPrefix","some","_ref","validateEip3770NetworkPrefix","currentChainId","isCurrentNetworkPrefix","validateEthereumAddress","isValidAddress","isHexStrict","isAddress","concat","validateEip3770Address"],"sources":["../../../src/eip-3770/index.ts"],"sourcesContent":[null],"mappings":";;;;;;AACA,MAAAA,YAAA,GAAAC,OAAA;AACA,MAAAC,QAAA,GAAAD,OAAA;AAEA,SAAgBE,mBAAmBA,CAACC,WAAmB;EACrD,MAAMC,KAAK,GAAGD,WAAW,CAACE,KAAK,CAAC,GAAG,CAAC;EACpC,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,GAAG,CAAC,GAAGH,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC;EACtD,MAAMI,MAAM,GAAGJ,KAAK,CAACG,MAAM,GAAG,CAAC,GAAGH,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE;EAC/C,OAAO;IAAEI,MAAM;IAAEF;EAAO,CAAE;AAC5B;AALAG,OAAA,CAAAP,mBAAA,GAAAA,mBAAA;AAOA,SAAgBQ,kCAAkCA,CAACC,OAAe;EAChE,MAAMC,OAAO,GAAGX,QAAA,CAAAY,QAAQ,CAACC,IAAI,CAAEF,OAAO,IAAKD,OAAO,KAAKC,OAAO,CAACD,OAAO,CAAC;EACvE,IAAI,CAACC,OAAO,EAAE;IACZ,MAAM,IAAIG,KAAK,CAAC,qDAAqD,CAAC;;EAExE,OAAOH,OAAO,CAACI,SAAS;AAC1B;AANAP,OAAA,CAAAC,kCAAA,GAAAA,kCAAA;AAQA,SAAgBO,2BAA2BA,CAACT,MAAc;EACxD,OAAOP,QAAA,CAAAY,QAAQ,CAACK,IAAI,CAACC,IAAA;IAAA,IAAC;MAAEH;IAAS,CAAE,GAAAG,IAAA;IAAA,OAAKH,SAAS,KAAKR,MAAM;EAAA,EAAC;AAC/D;AAFAC,OAAA,CAAAQ,2BAAA,GAAAA,2BAAA;AAIA,SAAgBG,4BAA4BA,CAACZ,MAAc,EAAEa,cAAsB;EACjF,MAAMC,sBAAsB,GAAGd,MAAM,KAAKE,kCAAkC,CAACW,cAAc,CAAC;EAC5F,IAAI,CAACJ,2BAA2B,CAACT,MAAM,CAAC,IAAI,CAACc,sBAAsB,EAAE;IACnE,MAAM,IAAIP,KAAK,CAAC,mDAAmD,CAAC;;AAExE;AALAN,OAAA,CAAAW,4BAAA,GAAAA,4BAAA;AAOA,SAAgBG,uBAAuBA,CAACjB,OAAe;EACrD,MAAMkB,cAAc,GAAG,IAAAzB,YAAA,CAAA0B,WAAW,EAACnB,OAAO,CAAC,IAAI,IAAAP,YAAA,CAAA2B,SAAS,EAACpB,OAAO,CAAC;EACjE,IAAI,CAACkB,cAAc,EAAE;IACnB,MAAM,IAAIT,KAAK,6BAAAY,MAAA,CAA6BrB,OAAO,CAAE,CAAC;;AAE1D;AALAG,OAAA,CAAAc,uBAAA,GAAAA,uBAAA;AAOA,SAAgBK,sBAAsBA,CACpCzB,WAAmB,EACnBkB,cAAsB;EAEtB,MAAM;IAAEf,OAAO;IAAEE;EAAM,CAAE,GAAGN,mBAAmB,CAACC,WAAW,CAAC;EAC5DoB,uBAAuB,CAACjB,OAAO,CAAC;EAChC,IAAIE,MAAM,EAAE;IACVY,4BAA4B,CAACZ,MAAM,EAAEa,cAAc,CAAC;;EAEtD,OAAO;IAAEf,OAAO;IAAEE;EAAM,CAAE;AAC5B;AAVAC,OAAA,CAAAmB,sBAAA,GAAAA,sBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}