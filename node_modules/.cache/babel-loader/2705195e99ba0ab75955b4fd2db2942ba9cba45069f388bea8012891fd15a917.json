{"ast":null,"code":"import { a9 as BigNumberTransformSchema, ab as AddressOrEnsSchema, a7 as BigNumberSchema, a8 as BigNumberishSchema, bQ as hasMatchingAbi, e as AbiSchema, cs as getCreate2FactoryAddress, cC as computeDeploymentInfo, cq as isContractDeployed, cu as getInitBytecodeWithSalt } from './contract-publisher-1ff1fe07.browser.esm.js';\nimport { z } from 'zod';\nimport { A as AmountSchema, C as CommonNFTOutput, b as CommonNFTInput, N as NFTInputOrUriSchema } from './QueryParams-39bcad7a.browser.esm.js';\nimport { utils, BigNumber } from 'ethers';\nimport invariant from 'tiny-invariant';\nimport { GENERATED_ABI } from '@thirdweb-dev/generated-abis';\nconst PropertiesInput = /* @__PURE__ */(() => z.object({}).catchall(z.union([BigNumberTransformSchema, z.unknown()])))();\n\n/**\n * @internal\n */\nconst OptionalPropertiesInput = /* @__PURE__ */(() => z.union([z.array(PropertiesInput), PropertiesInput]).optional())();\n\n/**\n * @internal\n */\nconst TokenMintInputSchema = /* @__PURE__ */z.object({\n  toAddress: AddressOrEnsSchema,\n  amount: AmountSchema\n});\n\n/**\n * @public\n */\n\n/**\n * @internal\n */\nconst EditionMetadataOutputSchema = /* @__PURE__ */z.object({\n  supply: BigNumberSchema,\n  metadata: CommonNFTOutput\n});\n\n/**\n * @internal\n */\nconst EditionMetadataWithOwnerOutputSchema = /* @__PURE__ */(() => EditionMetadataOutputSchema.extend({\n  owner: z.string(),\n  quantityOwned: BigNumberSchema\n}))();\n\n/**\n * @internal\n */\nconst EditionMetadataInputSchema = /* @__PURE__ */z.object({\n  supply: BigNumberishSchema,\n  metadata: CommonNFTInput\n});\n\n/**\n * @internal\n */\nconst EditionMetadataInputOrUriSchema = /* @__PURE__ */z.object({\n  supply: BigNumberishSchema,\n  metadata: NFTInputOrUriSchema\n});\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\nlet ProposalState = /*#__PURE__*/function (ProposalState) {\n  ProposalState[ProposalState[\"Pending\"] = 0] = \"Pending\";\n  ProposalState[ProposalState[\"Active\"] = 1] = \"Active\";\n  ProposalState[ProposalState[\"Canceled\"] = 2] = \"Canceled\";\n  ProposalState[ProposalState[\"Defeated\"] = 3] = \"Defeated\";\n  ProposalState[ProposalState[\"Succeeded\"] = 4] = \"Succeeded\";\n  ProposalState[ProposalState[\"Queued\"] = 5] = \"Queued\";\n  ProposalState[ProposalState[\"Expired\"] = 6] = \"Expired\";\n  ProposalState[ProposalState[\"Executed\"] = 7] = \"Executed\";\n  return ProposalState;\n}({});\n\n/**\n * @internal\n * @param contractWrapper\n * @param abi\n * @returns\n */\nfunction matchesPrebuiltAbi(contractWrapper, abi) {\n  return hasMatchingAbi(AbiSchema.parse(contractWrapper.abi || []), [abi]);\n}\nfunction toEther(amount) {\n  return utils.formatEther(amount);\n}\nfunction toUnits(amount, decimals) {\n  return utils.parseUnits(AmountSchema.parse(amount), decimals);\n}\nfunction toDisplayValue(amount, decimals) {\n  return utils.formatUnits(amount, decimals);\n}\n\n/**\n *\n * @internal\n * @param provider\n * @param storage\n * @param create2Factory\n */\nasync function computeNativeTokenAddress(provider, storage, create2Factory, clientId, secretKey) {\n  if (!create2Factory || create2Factory === \"\") {\n    create2Factory = await getCreate2FactoryAddress(provider);\n  }\n  return (await computeDeploymentInfo(\"infra\", provider, storage, create2Factory, {\n    contractName: \"WETH9\"\n  }, clientId, secretKey)).transaction.predictedAddress;\n}\n\n/**\n * Deploy a contract at a deterministic address, using Create2 method\n * Address depends on the Create2 factory address.\n *\n * @public\n *\n * @param type signer\n * @param bytecode\n * @param encodedArgs\n * @param create2FactoryAddress\n */\nasync function deployContractDeterministicRaw(signer, bytecode, encodedArgs, create2FactoryAddress, options, predictedAddress) {\n  let gasLimit = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 7000000;\n  // Check if the implementation contract is already deployed\n  invariant(signer.provider, \"Provider required\");\n  const contractDeployed = predictedAddress ? await isContractDeployed(predictedAddress, signer.provider) : false;\n  if (!contractDeployed) {\n    console.debug(`deploying contract via create2 factory at: ${predictedAddress}`);\n    const initBytecodeWithSalt = getInitBytecodeWithSalt(bytecode, encodedArgs);\n    const tx = {\n      to: create2FactoryAddress,\n      data: initBytecodeWithSalt\n    };\n    try {\n      await signer.estimateGas(tx);\n    } catch (e) {\n      console.debug(\"error estimating gas while deploying prebuilt: \", e);\n      tx.gasLimit = BigNumber.from(gasLimit);\n    }\n    await (await signer.sendTransaction(tx)).wait();\n  }\n}\nfunction getCachedAbiForContract(address) {\n  if (address in GENERATED_ABI) {\n    return GENERATED_ABI[address];\n  }\n  return undefined;\n}\nexport { EditionMetadataOutputSchema as E, OptionalPropertiesInput as O, ProposalState as P, TokenMintInputSchema as T, EditionMetadataWithOwnerOutputSchema as a, EditionMetadataInputSchema as b, EditionMetadataInputOrUriSchema as c, toUnits as d, toDisplayValue as e, computeNativeTokenAddress as f, getCachedAbiForContract as g, deployContractDeterministicRaw as h, matchesPrebuiltAbi as m, toEther as t };","map":{"version":3,"names":["a9","BigNumberTransformSchema","ab","AddressOrEnsSchema","a7","BigNumberSchema","a8","BigNumberishSchema","bQ","hasMatchingAbi","e","AbiSchema","cs","getCreate2FactoryAddress","cC","computeDeploymentInfo","cq","isContractDeployed","cu","getInitBytecodeWithSalt","z","A","AmountSchema","C","CommonNFTOutput","b","CommonNFTInput","N","NFTInputOrUriSchema","utils","BigNumber","invariant","GENERATED_ABI","PropertiesInput","object","catchall","union","unknown","OptionalPropertiesInput","array","optional","TokenMintInputSchema","toAddress","amount","EditionMetadataOutputSchema","supply","metadata","EditionMetadataWithOwnerOutputSchema","extend","owner","string","quantityOwned","EditionMetadataInputSchema","EditionMetadataInputOrUriSchema","ProposalState","matchesPrebuiltAbi","contractWrapper","abi","parse","toEther","formatEther","toUnits","decimals","parseUnits","toDisplayValue","formatUnits","computeNativeTokenAddress","provider","storage","create2Factory","clientId","secretKey","contractName","transaction","predictedAddress","deployContractDeterministicRaw","signer","bytecode","encodedArgs","create2FactoryAddress","options","gasLimit","arguments","length","undefined","contractDeployed","console","debug","initBytecodeWithSalt","tx","to","data","estimateGas","from","sendTransaction","wait","getCachedAbiForContract","address","E","O","P","T","a","c","d","f","g","h","m","t"],"sources":["C:/Misc/Documents/Career/FinTech/BlockChain/FrontEnd/buildspace-dao-starter/node_modules/@thirdweb-dev/sdk/dist/abi-008b9fe7.browser.esm.js"],"sourcesContent":["import { a9 as BigNumberTransformSchema, ab as AddressOrEnsSchema, a7 as BigNumberSchema, a8 as BigNumberishSchema, bQ as hasMatchingAbi, e as AbiSchema, cs as getCreate2FactoryAddress, cC as computeDeploymentInfo, cq as isContractDeployed, cu as getInitBytecodeWithSalt } from './contract-publisher-1ff1fe07.browser.esm.js';\nimport { z } from 'zod';\nimport { A as AmountSchema, C as CommonNFTOutput, b as CommonNFTInput, N as NFTInputOrUriSchema } from './QueryParams-39bcad7a.browser.esm.js';\nimport { utils, BigNumber } from 'ethers';\nimport invariant from 'tiny-invariant';\nimport { GENERATED_ABI } from '@thirdweb-dev/generated-abis';\n\nconst PropertiesInput = /* @__PURE__ */(() => z.object({}).catchall(z.union([BigNumberTransformSchema, z.unknown()])))();\n\n/**\n * @internal\n */\nconst OptionalPropertiesInput = /* @__PURE__ */(() => z.union([z.array(PropertiesInput), PropertiesInput]).optional())();\n\n/**\n * @internal\n */\nconst TokenMintInputSchema = /* @__PURE__ */z.object({\n  toAddress: AddressOrEnsSchema,\n  amount: AmountSchema\n});\n\n/**\n * @public\n */\n\n/**\n * @internal\n */\nconst EditionMetadataOutputSchema = /* @__PURE__ */z.object({\n  supply: BigNumberSchema,\n  metadata: CommonNFTOutput\n});\n\n/**\n * @internal\n */\nconst EditionMetadataWithOwnerOutputSchema = /* @__PURE__ */(() => EditionMetadataOutputSchema.extend({\n  owner: z.string(),\n  quantityOwned: BigNumberSchema\n}))();\n\n/**\n * @internal\n */\nconst EditionMetadataInputSchema = /* @__PURE__ */z.object({\n  supply: BigNumberishSchema,\n  metadata: CommonNFTInput\n});\n\n/**\n * @internal\n */\nconst EditionMetadataInputOrUriSchema = /* @__PURE__ */z.object({\n  supply: BigNumberishSchema,\n  metadata: NFTInputOrUriSchema\n});\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\nlet ProposalState = /*#__PURE__*/function (ProposalState) {\n  ProposalState[ProposalState[\"Pending\"] = 0] = \"Pending\";\n  ProposalState[ProposalState[\"Active\"] = 1] = \"Active\";\n  ProposalState[ProposalState[\"Canceled\"] = 2] = \"Canceled\";\n  ProposalState[ProposalState[\"Defeated\"] = 3] = \"Defeated\";\n  ProposalState[ProposalState[\"Succeeded\"] = 4] = \"Succeeded\";\n  ProposalState[ProposalState[\"Queued\"] = 5] = \"Queued\";\n  ProposalState[ProposalState[\"Expired\"] = 6] = \"Expired\";\n  ProposalState[ProposalState[\"Executed\"] = 7] = \"Executed\";\n  return ProposalState;\n}({});\n\n/**\n * @internal\n * @param contractWrapper\n * @param abi\n * @returns\n */\nfunction matchesPrebuiltAbi(contractWrapper, abi) {\n  return hasMatchingAbi(AbiSchema.parse(contractWrapper.abi || []), [abi]);\n}\n\nfunction toEther(amount) {\n  return utils.formatEther(amount);\n}\n\nfunction toUnits(amount, decimals) {\n  return utils.parseUnits(AmountSchema.parse(amount), decimals);\n}\n\nfunction toDisplayValue(amount, decimals) {\n  return utils.formatUnits(amount, decimals);\n}\n\n/**\n *\n * @internal\n * @param provider\n * @param storage\n * @param create2Factory\n */\nasync function computeNativeTokenAddress(provider, storage, create2Factory, clientId, secretKey) {\n  if (!create2Factory || create2Factory === \"\") {\n    create2Factory = await getCreate2FactoryAddress(provider);\n  }\n  return (await computeDeploymentInfo(\"infra\", provider, storage, create2Factory, {\n    contractName: \"WETH9\"\n  }, clientId, secretKey)).transaction.predictedAddress;\n}\n\n/**\n * Deploy a contract at a deterministic address, using Create2 method\n * Address depends on the Create2 factory address.\n *\n * @public\n *\n * @param type signer\n * @param bytecode\n * @param encodedArgs\n * @param create2FactoryAddress\n */\nasync function deployContractDeterministicRaw(signer, bytecode, encodedArgs, create2FactoryAddress, options, predictedAddress) {\n  let gasLimit = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 7000000;\n  // Check if the implementation contract is already deployed\n  invariant(signer.provider, \"Provider required\");\n  const contractDeployed = predictedAddress ? await isContractDeployed(predictedAddress, signer.provider) : false;\n  if (!contractDeployed) {\n    console.debug(`deploying contract via create2 factory at: ${predictedAddress}`);\n    const initBytecodeWithSalt = getInitBytecodeWithSalt(bytecode, encodedArgs);\n    const tx = {\n      to: create2FactoryAddress,\n      data: initBytecodeWithSalt\n    };\n    try {\n      await signer.estimateGas(tx);\n    } catch (e) {\n      console.debug(\"error estimating gas while deploying prebuilt: \", e);\n      tx.gasLimit = BigNumber.from(gasLimit);\n    }\n    await (await signer.sendTransaction(tx)).wait();\n  }\n}\n\nfunction getCachedAbiForContract(address) {\n  if (address in GENERATED_ABI) {\n    return GENERATED_ABI[address];\n  }\n  return undefined;\n}\n\nexport { EditionMetadataOutputSchema as E, OptionalPropertiesInput as O, ProposalState as P, TokenMintInputSchema as T, EditionMetadataWithOwnerOutputSchema as a, EditionMetadataInputSchema as b, EditionMetadataInputOrUriSchema as c, toUnits as d, toDisplayValue as e, computeNativeTokenAddress as f, getCachedAbiForContract as g, deployContractDeterministicRaw as h, matchesPrebuiltAbi as m, toEther as t };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}