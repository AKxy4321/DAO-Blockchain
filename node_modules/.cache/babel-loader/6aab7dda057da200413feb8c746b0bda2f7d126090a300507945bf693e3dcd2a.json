{"ast":null,"code":"import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, b as _classPrivateFieldGet, a as _classPrivateFieldSet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { w as walletIds } from '../../../../dist/walletIds-a64268ca.browser.esm.js';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-bc88b2b6.browser.esm.js';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport { U as UserRejectedRequestError, C as ChainNotConfiguredError, A as AddChainError, S as SwitchChainError } from '../../../../dist/errors-d961f852.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\nvar _client = /*#__PURE__*/new WeakMap();\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _isUserRejectedRequestError = /*#__PURE__*/new WeakSet();\nclass CoinbaseWalletConnector extends WagmiConnector {\n  constructor(_ref) {\n    let {\n      chains,\n      options\n    } = _ref;\n    super({\n      chains,\n      options: {\n        reloadOnDisconnect: false,\n        ...options\n      }\n    });\n    _classPrivateMethodInitSpec(this, _isUserRejectedRequestError);\n    _defineProperty(this, \"id\", walletIds.coinbase);\n    _defineProperty(this, \"name\", \"Coinbase Wallet\");\n    _defineProperty(this, \"ready\", true);\n    _classPrivateFieldInitSpec(this, _client, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n  }\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      this.setupListeners();\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.enable();\n      const account = utils.getAddress(accounts[0]);\n      // Switch to chain if provided\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        try {\n          const chain = await this.switchChain(chainId);\n          id = chain.chainId;\n          unsupported = this.isChainUnsupported(id);\n        } catch (e) {\n          console.error(\"Connected but failed to switch to desired chain \".concat(chainId), e);\n        }\n      }\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/(user closed modal|accounts received is empty)/i.test(error.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    if (!_classPrivateFieldGet(this, _provider)) {\n      return;\n    }\n    const provider = await this.getProvider();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    provider.disconnect();\n    provider.close();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    if (accounts.length === 0) {\n      throw new Error(\"No accounts found\");\n    }\n    // return checksum address\n    return utils.getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    if (!_classPrivateFieldGet(this, _provider)) {\n      var _classPrivateFieldGet2;\n      let CoinbaseWalletSDK = (await import('@coinbase/wallet-sdk')).default;\n      // Workaround for Vite dev import errors\n      // https://github.com/vitejs/vite/issues/7112\n      if (typeof CoinbaseWalletSDK !== \"function\" &&\n      // @ts-expect-error This import error is not visible to TypeScript\n      typeof CoinbaseWalletSDK.default === \"function\") {\n        CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n      }\n      _classPrivateFieldSet(this, _client, new CoinbaseWalletSDK(this.options));\n      const walletExtensionChainId = (_classPrivateFieldGet2 = _classPrivateFieldGet(this, _client).walletExtension) === null || _classPrivateFieldGet2 === void 0 ? void 0 : _classPrivateFieldGet2.getChainId();\n      const chain = this.chains.find(chain_ => this.options.chainId ? chain_.chainId === this.options.chainId : chain_.chainId === walletExtensionChainId) || this.chains[0];\n      const chainId = this.options.chainId || (chain === null || chain === void 0 ? void 0 : chain.chainId);\n      const jsonRpcUrl = this.options.jsonRpcUrl || (chain === null || chain === void 0 ? void 0 : chain.rpc[0]);\n      _classPrivateFieldSet(this, _provider, _classPrivateFieldGet(this, _client).makeWeb3Provider(jsonRpcUrl, chainId));\n    }\n    return _classPrivateFieldGet(this, _provider);\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = utils.hexValue(chainId);\n    try {\n      var _this$chains$find;\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: id\n        }]\n      });\n      return (_this$chains$find = this.chains.find(x => x.chainId === chainId)) !== null && _this$chains$find !== void 0 ? _this$chains$find : {\n        chainId: chainId,\n        name: \"Chain \".concat(id),\n        slug: \"\".concat(id),\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        testnet: false,\n        chain: \"ethereum\",\n        shortName: \"eth\"\n      };\n    } catch (error) {\n      const chain = this.chains.find(x => x.chainId === chainId);\n      if (!chain) {\n        throw new ChainNotConfiguredError({\n          chainId,\n          connectorId: this.id\n        });\n      }\n\n      // Indicates chain is not added to provider\n      if (error.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: getValidPublicRPCUrl(chain),\n              // no client id on purpose here\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, addError)) {\n            throw new UserRejectedRequestError(addError);\n          }\n          throw new AddChainError();\n        }\n      }\n      if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    provider.on(\"accountsChanged\", this.onAccountsChanged);\n    provider.on(\"chainChanged\", this.onChainChanged);\n    provider.on(\"disconnect\", this.onDisconnect);\n  }\n  async getQrUrl() {\n    await this.getProvider();\n    if (!_classPrivateFieldGet(this, _client)) {\n      throw new Error(\"Coinbase Wallet SDK not initialized\");\n    }\n    return _classPrivateFieldGet(this, _client).getQrUrl();\n  }\n}\nfunction _isUserRejectedRequestError2(error) {\n  return /(user rejected)/i.test(error.message);\n}\nexport { CoinbaseWalletConnector };","map":{"version":3,"names":["_","_classPrivateMethodInitSpec","a","_classPrivateMethodGet","_classPrivateFieldInitSpec","b","_classPrivateFieldGet","_classPrivateFieldSet","_defineProperty","utils","providers","w","walletIds","g","getValidPublicRPCUrl","W","WagmiConnector","n","normalizeChainId","U","UserRejectedRequestError","C","ChainNotConfiguredError","A","AddChainError","S","SwitchChainError","_client","WeakMap","_provider","_isUserRejectedRequestError","WeakSet","CoinbaseWalletConnector","constructor","_ref","chains","options","reloadOnDisconnect","coinbase","writable","value","accounts","length","emit","account","getAddress","chainId","id","unsupported","isChainUnsupported","chain","connect","arguments","undefined","provider","getProvider","setupListeners","type","enable","getChainId","switchChain","e","console","error","concat","Web3Provider","test","message","disconnect","removeListener","onAccountsChanged","onChainChanged","onDisconnect","close","getAccount","request","method","Error","_classPrivateFieldGet2","CoinbaseWalletSDK","default","walletExtensionChainId","walletExtension","find","chain_","jsonRpcUrl","rpc","makeWeb3Provider","getSigner","Promise","all","isAuthorized","hexValue","_this$chains$find","params","x","name","slug","nativeCurrency","decimals","symbol","testnet","shortName","connectorId","code","chainName","rpcUrls","blockExplorerUrls","getBlockExplorerUrls","addError","_isUserRejectedRequestError2","call","on","getQrUrl"],"sources":["C:/Misc/Documents/Career/FinTech/BlockChain/FrontEnd/buildspace-dao-starter/node_modules/@thirdweb-dev/react/node_modules/@thirdweb-dev/wallets/evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.browser.esm.js"],"sourcesContent":["import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, b as _classPrivateFieldGet, a as _classPrivateFieldSet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { w as walletIds } from '../../../../dist/walletIds-a64268ca.browser.esm.js';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-bc88b2b6.browser.esm.js';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport { U as UserRejectedRequestError, C as ChainNotConfiguredError, A as AddChainError, S as SwitchChainError } from '../../../../dist/errors-d961f852.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nvar _client = /*#__PURE__*/new WeakMap();\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _isUserRejectedRequestError = /*#__PURE__*/new WeakSet();\nclass CoinbaseWalletConnector extends WagmiConnector {\n  constructor(_ref) {\n    let {\n      chains,\n      options\n    } = _ref;\n    super({\n      chains,\n      options: {\n        reloadOnDisconnect: false,\n        ...options\n      }\n    });\n    _classPrivateMethodInitSpec(this, _isUserRejectedRequestError);\n    _defineProperty(this, \"id\", walletIds.coinbase);\n    _defineProperty(this, \"name\", \"Coinbase Wallet\");\n    _defineProperty(this, \"ready\", true);\n    _classPrivateFieldInitSpec(this, _client, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n  }\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      this.setupListeners();\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.enable();\n      const account = utils.getAddress(accounts[0]);\n      // Switch to chain if provided\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        try {\n          const chain = await this.switchChain(chainId);\n          id = chain.chainId;\n          unsupported = this.isChainUnsupported(id);\n        } catch (e) {\n          console.error(`Connected but failed to switch to desired chain ${chainId}`, e);\n        }\n      }\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/(user closed modal|accounts received is empty)/i.test(error.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    if (!_classPrivateFieldGet(this, _provider)) {\n      return;\n    }\n    const provider = await this.getProvider();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    provider.disconnect();\n    provider.close();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    if (accounts.length === 0) {\n      throw new Error(\"No accounts found\");\n    }\n    // return checksum address\n    return utils.getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    if (!_classPrivateFieldGet(this, _provider)) {\n      let CoinbaseWalletSDK = (await import('@coinbase/wallet-sdk')).default;\n      // Workaround for Vite dev import errors\n      // https://github.com/vitejs/vite/issues/7112\n      if (typeof CoinbaseWalletSDK !== \"function\" &&\n      // @ts-expect-error This import error is not visible to TypeScript\n      typeof CoinbaseWalletSDK.default === \"function\") {\n        CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n      }\n      _classPrivateFieldSet(this, _client, new CoinbaseWalletSDK(this.options));\n      const walletExtensionChainId = _classPrivateFieldGet(this, _client).walletExtension?.getChainId();\n      const chain = this.chains.find(chain_ => this.options.chainId ? chain_.chainId === this.options.chainId : chain_.chainId === walletExtensionChainId) || this.chains[0];\n      const chainId = this.options.chainId || chain?.chainId;\n      const jsonRpcUrl = this.options.jsonRpcUrl || chain?.rpc[0];\n      _classPrivateFieldSet(this, _provider, _classPrivateFieldGet(this, _client).makeWeb3Provider(jsonRpcUrl, chainId));\n    }\n    return _classPrivateFieldGet(this, _provider);\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = utils.hexValue(chainId);\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: id\n        }]\n      });\n      return this.chains.find(x => x.chainId === chainId) ?? {\n        chainId: chainId,\n        name: `Chain ${id}`,\n        slug: `${id}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        testnet: false,\n        chain: \"ethereum\",\n        shortName: \"eth\"\n      };\n    } catch (error) {\n      const chain = this.chains.find(x => x.chainId === chainId);\n      if (!chain) {\n        throw new ChainNotConfiguredError({\n          chainId,\n          connectorId: this.id\n        });\n      }\n\n      // Indicates chain is not added to provider\n      if (error.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: getValidPublicRPCUrl(chain),\n              // no client id on purpose here\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, addError)) {\n            throw new UserRejectedRequestError(addError);\n          }\n          throw new AddChainError();\n        }\n      }\n      if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    provider.on(\"accountsChanged\", this.onAccountsChanged);\n    provider.on(\"chainChanged\", this.onChainChanged);\n    provider.on(\"disconnect\", this.onDisconnect);\n  }\n  async getQrUrl() {\n    await this.getProvider();\n    if (!_classPrivateFieldGet(this, _client)) {\n      throw new Error(\"Coinbase Wallet SDK not initialized\");\n    }\n    return _classPrivateFieldGet(this, _client).getQrUrl();\n  }\n}\nfunction _isUserRejectedRequestError2(error) {\n  return /(user rejected)/i.test(error.message);\n}\n\nexport { CoinbaseWalletConnector };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}