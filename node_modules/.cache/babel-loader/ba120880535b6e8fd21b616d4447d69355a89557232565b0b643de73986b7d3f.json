{"ast":null,"code":"import { Celo, CeloAlfajoresTestnet, CeloBaklavaTestnet, getChainByChainId } from '@thirdweb-dev/chains';\nimport { C as Connector } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { PaymasterAPI, calcPreVerificationGas } from '@account-abstraction/sdk';\nimport { ethers, utils, Signer, providers, BigNumber } from 'ethers';\nimport fetch from 'cross-fetch';\nimport { i as isTwUrl } from '../../../../dist/url-bc88b2b6.browser.esm.js';\nimport { EntryPoint__factory } from '@account-abstraction/contracts';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { deepHexlify, packUserOp } from '@account-abstraction/utils';\nimport { getDynamicFeeData, ThirdwebSDK, LOCAL_NODE_PKEY, getChainProvider } from '@thirdweb-dev/sdk';\nimport 'eventemitter3';\nfunction toJSON(op) {\n  return ethers.utils.resolveProperties(op).then(userOp => Object.keys(userOp).map(key => {\n    let val = userOp[key];\n    if (typeof val !== \"string\" || !val.startsWith(\"0x\")) {\n      val = ethers.utils.hexValue(val);\n    }\n    return [key, val];\n  }).reduce((set, _ref) => {\n    let [k, v] = _ref;\n    return {\n      ...set,\n      [k]: v\n    };\n  }, {}));\n}\n\n// v0.6 userOpHash calculation\nasync function getUserOpHashV06(userOp, entryPoint, chainId) {\n  const op = await utils.resolveProperties(userOp);\n  const hashedUserOp = {\n    sender: op.sender,\n    nonce: op.nonce,\n    initCodeHash: utils.keccak256(op.initCode),\n    callDataHash: utils.keccak256(op.callData),\n    callGasLimit: op.callGasLimit,\n    verificationGasLimit: op.verificationGasLimit,\n    preVerificationGas: op.preVerificationGas,\n    maxFeePerGas: op.maxFeePerGas,\n    maxPriorityFeePerGas: op.maxPriorityFeePerGas,\n    paymasterAndDataHash: utils.keccak256(op.paymasterAndData)\n  };\n  const userOpType = {\n    components: [{\n      type: \"address\",\n      name: \"sender\"\n    }, {\n      type: \"uint256\",\n      name: \"nonce\"\n    }, {\n      type: \"bytes32\",\n      name: \"initCodeHash\"\n    }, {\n      type: \"bytes32\",\n      name: \"callDataHash\"\n    }, {\n      type: \"uint256\",\n      name: \"callGasLimit\"\n    }, {\n      type: \"uint256\",\n      name: \"verificationGasLimit\"\n    }, {\n      type: \"uint256\",\n      name: \"preVerificationGas\"\n    }, {\n      type: \"uint256\",\n      name: \"maxFeePerGas\"\n    }, {\n      type: \"uint256\",\n      name: \"maxPriorityFeePerGas\"\n    }, {\n      type: \"bytes32\",\n      name: \"paymasterAndDataHash\"\n    }],\n    name: \"hashedUserOp\",\n    type: \"tuple\"\n  };\n  const encoded = utils.defaultAbiCoder.encode([userOpType], [{\n    ...hashedUserOp\n  }]);\n  // remove leading word (total length) and trailing word (zero-length signature)\n\n  const userOpHash = utils.keccak256(encoded);\n  const enc = utils.defaultAbiCoder.encode([\"bytes32\", \"address\", \"uint256\"], [userOpHash, entryPoint, chainId]);\n  return utils.keccak256(enc);\n}\nconst SIG_SIZE = 65;\nconst DUMMY_PAYMASTER_AND_DATA = \"0x0101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000001010101010100000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\";\nclass VerifyingPaymasterAPI extends PaymasterAPI {\n  constructor(paymasterUrl, entryPoint, clientId, secretKey) {\n    super();\n    this.paymasterUrl = paymasterUrl;\n    this.entryPoint = entryPoint;\n    this.clientId = clientId;\n    this.secretKey = secretKey;\n  }\n  async getPaymasterAndData(userOp) {\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    if (isTwUrl(this.paymasterUrl)) {\n      if (this.secretKey && this.clientId) {\n        throw new Error(\"Cannot use both secret key and client ID. Please use secretKey for server-side applications and clientId for client-side applications.\");\n      }\n      if (this.secretKey) {\n        headers[\"x-secret-key\"] = this.secretKey;\n      } else if (this.clientId) {\n        headers[\"x-client-id\"] = this.clientId;\n        if (typeof globalThis !== \"undefined\" && \"APP_BUNDLE_ID\" in globalThis) {\n          headers[\"x-bundle-id\"] = globalThis.APP_BUNDLE_ID;\n        }\n      }\n\n      // Dashboard token.\n      if (typeof globalThis !== \"undefined\" && \"TW_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = \"Bearer \".concat(globalThis.TW_AUTH_TOKEN);\n      }\n\n      // CLI token.\n      if (typeof globalThis !== \"undefined\" && \"TW_CLI_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_CLI_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = \"Bearer \".concat(globalThis.TW_CLI_AUTH_TOKEN);\n        headers[\"x-authorize-wallet\"] = \"true\";\n      }\n    }\n\n    // Ask the paymaster to sign the transaction and return a valid paymasterAndData value.\n    const response = await fetch(this.paymasterUrl, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify({\n        jsonrpc: \"2.0\",\n        id: 1,\n        method: \"pm_sponsorUserOperation\",\n        params: [await toJSON(userOp), {\n          entryPoint: this.entryPoint\n        }]\n      })\n    });\n    const res = await response.json();\n    if (!response.ok) {\n      const error = res.error || response.statusText;\n      const code = res.code || \"UNKNOWN\";\n      throw new Error(\"Paymaster error: \".concat(error, \"\\nStatus: \").concat(response.status, \"\\nCode: \").concat(code));\n    }\n    if (res.result) {\n      const result = res.result.paymasterAndData || res.result;\n      return result.toString();\n    } else {\n      throw new Error(\"Paymaster returned no result from \".concat(this.paymasterUrl));\n    }\n  }\n}\nconst getVerifyingPaymaster = (paymasterUrl, entryPoint, clientId, secretKey) => new VerifyingPaymasterAPI(paymasterUrl, entryPoint, clientId, secretKey);\n\n/**\n * This class encapsulates Ethers.js listener function and necessary UserOperation details to\n * discover a TransactionReceipt for the operation.\n *\n * TODO refactor this to a simple event listener on the entry point\n */\nclass UserOperationEventListener {\n  constructor(resolve, reject, entryPoint, sender, userOpHash, nonce, timeout) {\n    this.resolve = resolve;\n    this.reject = reject;\n    this.entryPoint = entryPoint;\n    this.sender = sender;\n    this.userOpHash = userOpHash;\n    this.nonce = nonce;\n    this.timeout = timeout;\n    _defineProperty(this, \"resolved\", false);\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    this.boundLisener = this.listenerCallback.bind(this);\n  }\n  start() {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    const filter = this.entryPoint.filters.UserOperationEvent(this.userOpHash);\n    // listener takes time... first query directly:\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    setTimeout(async () => {\n      const res = await this.entryPoint.queryFilter(filter, \"latest\");\n      if (res.length > 0) {\n        void this.listenerCallback(res[0]);\n      } else {\n        this.entryPoint.once(filter, this.boundLisener);\n      }\n    }, 100);\n  }\n  stop() {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    this.entryPoint.off(\"UserOperationEvent\", this.boundLisener);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async listenerCallback() {\n    for (var _len = arguments.length, param = new Array(_len), _key = 0; _key < _len; _key++) {\n      param[_key] = arguments[_key];\n    }\n    // TODO clean this up..\n    // eslint-disable-next-line prefer-rest-params\n    const event = arguments[arguments.length - 1];\n    if (!event.args) {\n      console.error(\"got event without args\", event);\n      return;\n    }\n    // TODO: can this happen? we register to event by userOpHash..\n    if (event.args.userOpHash !== this.userOpHash) {\n      var _this$nonce;\n      console.log(\"== event with wrong userOpHash: sender/nonce: event.\".concat(event.args.sender, \"@\").concat(event.args.nonce.toString(), \"!= userOp.\").concat(this.sender, \"@\").concat(parseInt((_this$nonce = this.nonce) === null || _this$nonce === void 0 ? void 0 : _this$nonce.toString())));\n      return;\n    }\n    const transactionReceipt = await event.getTransactionReceipt();\n\n    // before returning the receipt, update the status from the event.\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (!event.args.success) {\n      await this.extractFailureReason(transactionReceipt);\n    }\n    this.stop();\n    this.resolve(transactionReceipt);\n    this.resolved = true;\n  }\n  async extractFailureReason(receipt) {\n    receipt.status = 0;\n    const revertReasonEvents = await this.entryPoint.queryFilter(this.entryPoint.filters.UserOperationRevertReason(this.userOpHash, this.sender), receipt.blockHash);\n    if (revertReasonEvents[0]) {\n      let message = revertReasonEvents[0].args.revertReason;\n      if (message.startsWith(\"0x08c379a0\")) {\n        // Error(string)\n        message = utils.defaultAbiCoder.decode([\"string\"], \"0x\" + message.substring(10)).toString();\n      }\n      this.reject(new Error(\"UserOp failed with reason: \".concat(message)));\n    }\n  }\n}\nclass ERC4337EthersSigner extends Signer {\n  // TODO: we have 'erc4337provider', remove shared dependencies or avoid two-way reference\n  constructor(config, originalSigner, erc4337provider, httpRpcClient, smartAccountAPI) {\n    super();\n    utils.defineReadOnly(this, \"provider\", erc4337provider);\n    this.config = config;\n    this.originalSigner = originalSigner;\n    this.erc4337provider = erc4337provider;\n    this.httpRpcClient = httpRpcClient;\n    this.smartAccountAPI = smartAccountAPI;\n  }\n  // This one is called by Contract. It signs the request and passes in to Provider to be sent.\n  async sendTransaction(transaction) {\n    var _tx$data;\n    let batched = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const tx = await ethers.utils.resolveProperties(transaction);\n    await this.verifyAllNecessaryFields(tx);\n    const userOperation = await this.smartAccountAPI.createSignedUserOp({\n      target: tx.to || \"\",\n      data: ((_tx$data = tx.data) === null || _tx$data === void 0 ? void 0 : _tx$data.toString()) || \"0x\",\n      value: tx.value,\n      gasLimit: tx.gasLimit\n    }, batched);\n    const transactionResponse = await this.erc4337provider.constructUserOpTransactionResponse(userOperation);\n    try {\n      await this.httpRpcClient.sendUserOpToBundler(userOperation);\n    } catch (error) {\n      throw this.unwrapError(error);\n    }\n    // TODO: handle errors - transaction that is \"rejected\" by bundler is _not likely_ to ever resolve its \"wait()\"\n    return transactionResponse;\n  }\n  unwrapError(errorIn) {\n    try {\n      let errorMsg = \"Unknown Error\";\n      if (errorIn.error) {\n        errorMsg = \"The bundler has failed to include UserOperation in a batch: \".concat(errorIn.error);\n      } else if (errorIn.body && typeof errorIn.body === \"string\") {\n        var _errorBody$error, _errorBody$error2, _failedOpMessage;\n        const errorBody = JSON.parse(errorIn.body);\n        const errorStatus = errorIn.status || \"UNKNOWN\";\n        const errorCode = (errorBody === null || errorBody === void 0 ? void 0 : errorBody.code) || \"UNKNOWN\";\n        let failedOpMessage = (errorBody === null || errorBody === void 0 || (_errorBody$error = errorBody.error) === null || _errorBody$error === void 0 ? void 0 : _errorBody$error.message) || (errorBody === null || errorBody === void 0 || (_errorBody$error2 = errorBody.error) === null || _errorBody$error2 === void 0 ? void 0 : _errorBody$error2.data) || (errorBody === null || errorBody === void 0 ? void 0 : errorBody.error) || errorIn.reason;\n        if ((_failedOpMessage = failedOpMessage) !== null && _failedOpMessage !== void 0 && _failedOpMessage.includes(\"FailedOp\")) {\n          let paymasterInfo = \"\";\n          // TODO: better error extraction methods will be needed\n          const matched = failedOpMessage.match(/FailedOp\\((.*)\\)/);\n          if (matched) {\n            const split = matched[1].split(\",\");\n            paymasterInfo = \"(paymaster address: \".concat(split[1], \")\");\n            failedOpMessage = split[2];\n          }\n          errorMsg = \"The bundler has failed to include UserOperation in a batch: \".concat(failedOpMessage, \" \").concat(paymasterInfo);\n        } else {\n          errorMsg = \"RPC error: \".concat(failedOpMessage, \"\\nStatus: \").concat(errorStatus, \"\\nCode: \").concat(errorCode);\n        }\n      }\n      const error = new Error(errorMsg);\n      error.stack = errorIn.stack;\n      return error;\n    } catch (error) {}\n    return errorIn;\n  }\n  async verifyAllNecessaryFields(transactionRequest) {\n    if (!transactionRequest.to) {\n      throw new Error(\"Missing call target\");\n    }\n    if (!transactionRequest.data && !transactionRequest.value) {\n      // TBD: banning no-op UserOps seems to make sense on provider level\n      throw new Error(\"Missing call data or value\");\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  connect(provider) {\n    throw new Error(\"changing providers is not supported\");\n  }\n  async getAddress() {\n    if (!this.address) {\n      this.address = await this.erc4337provider.getSenderAccountAddress();\n    }\n    return this.address;\n  }\n  async signMessage(message) {\n    const isNotDeployed = await this.smartAccountAPI.checkAccountPhantom();\n    if (isNotDeployed) {\n      console.log(\"Account contract not deployed yet. Deploying account before signing message\");\n      const tx = await this.sendTransaction({\n        to: await this.getAddress(),\n        data: \"0x\"\n      });\n      await tx.wait();\n    }\n    return await this.originalSigner.signMessage(message);\n  }\n  async signTransaction(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transaction) {\n    throw new Error(\"not implemented\");\n  }\n}\nclass ERC4337EthersProvider extends providers.BaseProvider {\n  constructor(chainId, config, originalSigner, originalProvider, httpRpcClient, entryPoint, smartAccountAPI) {\n    super({\n      name: \"ERC-4337 Custom Network\",\n      chainId\n    });\n    this.chainId = chainId;\n    this.config = config;\n    this.originalSigner = originalSigner;\n    this.originalProvider = originalProvider;\n    this.httpRpcClient = httpRpcClient;\n    this.entryPoint = entryPoint;\n    this.smartAccountAPI = smartAccountAPI;\n    this.signer = new ERC4337EthersSigner(config, originalSigner, this, httpRpcClient, smartAccountAPI);\n  }\n\n  /**\n   * finish intializing the provider.\n   * MUST be called after construction, before using the provider.\n   */\n  async init() {\n    // await this.httpRpcClient.validateChainId()\n    this.initializedBlockNumber = await this.originalProvider.getBlockNumber();\n    await this.smartAccountAPI.init();\n    // await this.signer.init()\n    return this;\n  }\n  getSigner() {\n    return this.signer;\n  }\n  async perform(method, params) {\n    if (method === \"sendTransaction\" || method === \"getTransactionReceipt\") {\n      // TODO: do we need 'perform' method to be available at all?\n      // there is nobody out there to use it for ERC-4337 methods yet, we have nothing to override in fact.\n      throw new Error(\"Should not get here. Investigate.\");\n    }\n    if (method === \"estimateGas\") {\n      // hijack this to estimate gas from the entrypoint instead\n      const {\n        callGasLimit\n      } = await this.smartAccountAPI.encodeUserOpCallDataAndGasLimit({\n        target: params.transaction.to,\n        data: params.transaction.data,\n        value: params.transaction.value,\n        gasLimit: params.transaction.gasLimit\n      }, false // TODO check this\n      );\n\n      return callGasLimit;\n    }\n    return await this.originalProvider.perform(method, params);\n  }\n  async getTransaction(transactionHash) {\n    // TODO\n    return await super.getTransaction(transactionHash);\n  }\n  async getTransactionReceipt(transactionHash) {\n    const userOpHash = await transactionHash;\n    const sender = await this.getSenderAccountAddress();\n    return await new Promise((resolve, reject) => {\n      new UserOperationEventListener(resolve, reject, this.entryPoint, sender, userOpHash).start();\n    });\n  }\n  async getSenderAccountAddress() {\n    return await this.smartAccountAPI.getAccountAddress();\n  }\n  async waitForTransaction(transactionHash, confirmations, timeout) {\n    const sender = await this.getSenderAccountAddress();\n    return await new Promise((resolve, reject) => {\n      const listener = new UserOperationEventListener(resolve, reject, this.entryPoint, sender, transactionHash, undefined, timeout);\n      listener.start();\n    });\n  }\n\n  // fabricate a response in a format usable by ethers users...\n  async constructUserOpTransactionResponse(userOp1) {\n    const userOp = await utils.resolveProperties(userOp1);\n    const userOpHash = await this.smartAccountAPI.getUserOpHash(userOp);\n    const waitForUserOp = async () => await new Promise((resolve, reject) => {\n      new UserOperationEventListener(resolve, reject, this.entryPoint, userOp.sender, userOpHash, userOp.nonce).start();\n    });\n    return {\n      hash: userOpHash,\n      confirmations: 0,\n      from: userOp.sender,\n      nonce: BigNumber.from(userOp.nonce).toNumber(),\n      gasLimit: BigNumber.from(userOp.callGasLimit),\n      // ??\n      value: BigNumber.from(0),\n      data: utils.hexValue(userOp.callData),\n      // should extract the actual called method from this \"execFromEntryPoint()\" call\n      chainId: this.chainId,\n      wait: async confirmations => {\n        const transactionReceipt = await waitForUserOp();\n        if (userOp.initCode.length !== 0) {\n          // checking if the wallet has been deployed by the transaction; it must be if we are here\n          await this.smartAccountAPI.checkAccountPhantom();\n        }\n        return transactionReceipt;\n      }\n    };\n  }\n  async detectNetwork() {\n    return this.originalProvider.detectNetwork();\n  }\n}\nvar pkg = {\n  name: \"@thirdweb-dev/wallets\",\n  version: \"1.3.5\",\n  main: \"dist/thirdweb-dev-wallets.cjs.js\",\n  module: \"dist/thirdweb-dev-wallets.esm.js\",\n  types: \"dist/thirdweb-dev-wallets.cjs.d.ts\",\n  browser: {\n    \"./dist/thirdweb-dev-wallets.esm.js\": \"./dist/thirdweb-dev-wallets.browser.esm.js\"\n  },\n  exports: {\n    \".\": {\n      module: {\n        browser: \"./dist/thirdweb-dev-wallets.browser.esm.js\",\n        \"default\": \"./dist/thirdweb-dev-wallets.esm.js\"\n      },\n      \"default\": \"./dist/thirdweb-dev-wallets.cjs.js\"\n    },\n    \"./evm\": {\n      module: {\n        browser: \"./evm/dist/thirdweb-dev-wallets-evm.browser.esm.js\",\n        \"default\": \"./evm/dist/thirdweb-dev-wallets-evm.esm.js\"\n      },\n      \"default\": \"./evm/dist/thirdweb-dev-wallets-evm.cjs.js\"\n    },\n    \"./solana\": {\n      module: {\n        browser: \"./solana/dist/thirdweb-dev-wallets-solana.browser.esm.js\",\n        \"default\": \"./solana/dist/thirdweb-dev-wallets-solana.esm.js\"\n      },\n      \"default\": \"./solana/dist/thirdweb-dev-wallets-solana.cjs.js\"\n    },\n    \"./evm/wallets/base\": {\n      module: {\n        browser: \"./evm/wallets/base/dist/thirdweb-dev-wallets-evm-wallets-base.browser.esm.js\",\n        \"default\": \"./evm/wallets/base/dist/thirdweb-dev-wallets-evm-wallets-base.esm.js\"\n      },\n      \"default\": \"./evm/wallets/base/dist/thirdweb-dev-wallets-evm-wallets-base.cjs.js\"\n    },\n    \"./evm/wallets/safe\": {\n      module: {\n        browser: \"./evm/wallets/safe/dist/thirdweb-dev-wallets-evm-wallets-safe.browser.esm.js\",\n        \"default\": \"./evm/wallets/safe/dist/thirdweb-dev-wallets-evm-wallets-safe.esm.js\"\n      },\n      \"default\": \"./evm/wallets/safe/dist/thirdweb-dev-wallets-evm-wallets-safe.cjs.js\"\n    },\n    \"./evm/wallets/frame\": {\n      module: {\n        browser: \"./evm/wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.browser.esm.js\",\n        \"default\": \"./evm/wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.esm.js\"\n      },\n      \"default\": \"./evm/wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.cjs.js\"\n    },\n    \"./evm/wallets/magic\": {\n      module: {\n        browser: \"./evm/wallets/magic/dist/thirdweb-dev-wallets-evm-wallets-magic.browser.esm.js\",\n        \"default\": \"./evm/wallets/magic/dist/thirdweb-dev-wallets-evm-wallets-magic.esm.js\"\n      },\n      \"default\": \"./evm/wallets/magic/dist/thirdweb-dev-wallets-evm-wallets-magic.cjs.js\"\n    },\n    \"./evm/wallets/trust\": {\n      module: {\n        browser: \"./evm/wallets/trust/dist/thirdweb-dev-wallets-evm-wallets-trust.browser.esm.js\",\n        \"default\": \"./evm/wallets/trust/dist/thirdweb-dev-wallets-evm-wallets-trust.esm.js\"\n      },\n      \"default\": \"./evm/wallets/trust/dist/thirdweb-dev-wallets-evm-wallets-trust.cjs.js\"\n    },\n    \"./evm/wallets/blocto\": {\n      module: {\n        browser: \"./evm/wallets/blocto/dist/thirdweb-dev-wallets-evm-wallets-blocto.browser.esm.js\",\n        \"default\": \"./evm/wallets/blocto/dist/thirdweb-dev-wallets-evm-wallets-blocto.esm.js\"\n      },\n      \"default\": \"./evm/wallets/blocto/dist/thirdweb-dev-wallets-evm-wallets-blocto.cjs.js\"\n    },\n    \"./evm/wallets/ethers\": {\n      module: {\n        browser: \"./evm/wallets/ethers/dist/thirdweb-dev-wallets-evm-wallets-ethers.browser.esm.js\",\n        \"default\": \"./evm/wallets/ethers/dist/thirdweb-dev-wallets-evm-wallets-ethers.esm.js\"\n      },\n      \"default\": \"./evm/wallets/ethers/dist/thirdweb-dev-wallets-evm-wallets-ethers.cjs.js\"\n    },\n    \"./evm/wallets/signer\": {\n      module: {\n        browser: \"./evm/wallets/signer/dist/thirdweb-dev-wallets-evm-wallets-signer.browser.esm.js\",\n        \"default\": \"./evm/wallets/signer/dist/thirdweb-dev-wallets-evm-wallets-signer.esm.js\"\n      },\n      \"default\": \"./evm/wallets/signer/dist/thirdweb-dev-wallets-evm-wallets-signer.cjs.js\"\n    },\n    \"./evm/wallets/zerion\": {\n      module: {\n        browser: \"./evm/wallets/zerion/dist/thirdweb-dev-wallets-evm-wallets-zerion.browser.esm.js\",\n        \"default\": \"./evm/wallets/zerion/dist/thirdweb-dev-wallets-evm-wallets-zerion.esm.js\"\n      },\n      \"default\": \"./evm/wallets/zerion/dist/thirdweb-dev-wallets-evm-wallets-zerion.cjs.js\"\n    },\n    \"./evm/wallets/aws-kms\": {\n      module: {\n        browser: \"./evm/wallets/aws-kms/dist/thirdweb-dev-wallets-evm-wallets-aws-kms.browser.esm.js\",\n        \"default\": \"./evm/wallets/aws-kms/dist/thirdweb-dev-wallets-evm-wallets-aws-kms.esm.js\"\n      },\n      \"default\": \"./evm/wallets/aws-kms/dist/thirdweb-dev-wallets-evm-wallets-aws-kms.cjs.js\"\n    },\n    \"./evm/wallets/gcp-kms\": {\n      module: {\n        browser: \"./evm/wallets/gcp-kms/dist/thirdweb-dev-wallets-evm-wallets-gcp-kms.browser.esm.js\",\n        \"default\": \"./evm/wallets/gcp-kms/dist/thirdweb-dev-wallets-evm-wallets-gcp-kms.esm.js\"\n      },\n      \"default\": \"./evm/wallets/gcp-kms/dist/thirdweb-dev-wallets-evm-wallets-gcp-kms.cjs.js\"\n    },\n    \"./evm/wallets/phantom\": {\n      module: {\n        browser: \"./evm/wallets/phantom/dist/thirdweb-dev-wallets-evm-wallets-phantom.browser.esm.js\",\n        \"default\": \"./evm/wallets/phantom/dist/thirdweb-dev-wallets-evm-wallets-phantom.esm.js\"\n      },\n      \"default\": \"./evm/wallets/phantom/dist/thirdweb-dev-wallets-evm-wallets-phantom.cjs.js\"\n    },\n    \"./solana/wallets/base\": {\n      module: {\n        browser: \"./solana/wallets/base/dist/thirdweb-dev-wallets-solana-wallets-base.browser.esm.js\",\n        \"default\": \"./solana/wallets/base/dist/thirdweb-dev-wallets-solana-wallets-base.esm.js\"\n      },\n      \"default\": \"./solana/wallets/base/dist/thirdweb-dev-wallets-solana-wallets-base.cjs.js\"\n    },\n    \"./evm/wallets/abstract\": {\n      module: {\n        browser: \"./evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js\",\n        \"default\": \"./evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.esm.js\"\n      },\n      \"default\": \"./evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.cjs.js\"\n    },\n    \"./evm/wallets/injected\": {\n      module: {\n        browser: \"./evm/wallets/injected/dist/thirdweb-dev-wallets-evm-wallets-injected.browser.esm.js\",\n        \"default\": \"./evm/wallets/injected/dist/thirdweb-dev-wallets-evm-wallets-injected.esm.js\"\n      },\n      \"default\": \"./evm/wallets/injected/dist/thirdweb-dev-wallets-evm-wallets-injected.cjs.js\"\n    },\n    \"./evm/wallets/metamask\": {\n      module: {\n        browser: \"./evm/wallets/metamask/dist/thirdweb-dev-wallets-evm-wallets-metamask.browser.esm.js\",\n        \"default\": \"./evm/wallets/metamask/dist/thirdweb-dev-wallets-evm-wallets-metamask.esm.js\"\n      },\n      \"default\": \"./evm/wallets/metamask/dist/thirdweb-dev-wallets-evm-wallets-metamask.cjs.js\"\n    },\n    \"./solana/wallets/signer\": {\n      module: {\n        browser: \"./solana/wallets/signer/dist/thirdweb-dev-wallets-solana-wallets-signer.browser.esm.js\",\n        \"default\": \"./solana/wallets/signer/dist/thirdweb-dev-wallets-solana-wallets-signer.esm.js\"\n      },\n      \"default\": \"./solana/wallets/signer/dist/thirdweb-dev-wallets-solana-wallets-signer.cjs.js\"\n    },\n    \"./solana/wallets/keypair\": {\n      module: {\n        browser: \"./solana/wallets/keypair/dist/thirdweb-dev-wallets-solana-wallets-keypair.browser.esm.js\",\n        \"default\": \"./solana/wallets/keypair/dist/thirdweb-dev-wallets-solana-wallets-keypair.esm.js\"\n      },\n      \"default\": \"./solana/wallets/keypair/dist/thirdweb-dev-wallets-solana-wallets-keypair.cjs.js\"\n    },\n    \"./evm/wallets/private-key\": {\n      module: {\n        browser: \"./evm/wallets/private-key/dist/thirdweb-dev-wallets-evm-wallets-private-key.browser.esm.js\",\n        \"default\": \"./evm/wallets/private-key/dist/thirdweb-dev-wallets-evm-wallets-private-key.esm.js\"\n      },\n      \"default\": \"./evm/wallets/private-key/dist/thirdweb-dev-wallets-evm-wallets-private-key.cjs.js\"\n    },\n    \"./evm/wallets/local-wallet\": {\n      module: {\n        browser: \"./evm/wallets/local-wallet/dist/thirdweb-dev-wallets-evm-wallets-local-wallet.browser.esm.js\",\n        \"default\": \"./evm/wallets/local-wallet/dist/thirdweb-dev-wallets-evm-wallets-local-wallet.esm.js\"\n      },\n      \"default\": \"./evm/wallets/local-wallet/dist/thirdweb-dev-wallets-evm-wallets-local-wallet.cjs.js\"\n    },\n    \"./evm/wallets/paper-wallet\": {\n      module: {\n        browser: \"./evm/wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.browser.esm.js\",\n        \"default\": \"./evm/wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.esm.js\"\n      },\n      \"default\": \"./evm/wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.cjs.js\"\n    },\n    \"./evm/wallets/smart-wallet\": {\n      module: {\n        browser: \"./evm/wallets/smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-smart-wallet.browser.esm.js\",\n        \"default\": \"./evm/wallets/smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-smart-wallet.esm.js\"\n      },\n      \"default\": \"./evm/wallets/smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-smart-wallet.cjs.js\"\n    },\n    \"./evm/connectors/safe\": {\n      module: {\n        browser: \"./evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.browser.esm.js\",\n        \"default\": \"./evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.esm.js\"\n      },\n      \"default\": \"./evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.cjs.js\"\n    },\n    \"./evm/connectors/frame\": {\n      module: {\n        browser: \"./evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.browser.esm.js\",\n        \"default\": \"./evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.esm.js\"\n      },\n      \"default\": \"./evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.cjs.js\"\n    },\n    \"./evm/connectors/magic\": {\n      module: {\n        browser: \"./evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.browser.esm.js\",\n        \"default\": \"./evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.esm.js\"\n      },\n      \"default\": \"./evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.cjs.js\"\n    },\n    \"./evm/connectors/paper\": {\n      module: {\n        browser: \"./evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.browser.esm.js\",\n        \"default\": \"./evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.esm.js\"\n      },\n      \"default\": \"./evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.cjs.js\"\n    },\n    \"./evm/connectors/trust\": {\n      module: {\n        browser: \"./evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.browser.esm.js\",\n        \"default\": \"./evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.esm.js\"\n      },\n      \"default\": \"./evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.cjs.js\"\n    },\n    \"./evm/wallets/rainbow-wallet\": {\n      module: {\n        browser: \"./evm/wallets/rainbow-wallet/dist/thirdweb-dev-wallets-evm-wallets-rainbow-wallet.browser.esm.js\",\n        \"default\": \"./evm/wallets/rainbow-wallet/dist/thirdweb-dev-wallets-evm-wallets-rainbow-wallet.esm.js\"\n      },\n      \"default\": \"./evm/wallets/rainbow-wallet/dist/thirdweb-dev-wallets-evm-wallets-rainbow-wallet.cjs.js\"\n    },\n    \"./evm/wallets/wallet-connect\": {\n      module: {\n        browser: \"./evm/wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.browser.esm.js\",\n        \"default\": \"./evm/wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.esm.js\"\n      },\n      \"default\": \"./evm/wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.cjs.js\"\n    },\n    \"./solana/wallets/private-key\": {\n      module: {\n        browser: \"./solana/wallets/private-key/dist/thirdweb-dev-wallets-solana-wallets-private-key.browser.esm.js\",\n        \"default\": \"./solana/wallets/private-key/dist/thirdweb-dev-wallets-solana-wallets-private-key.esm.js\"\n      },\n      \"default\": \"./solana/wallets/private-key/dist/thirdweb-dev-wallets-solana-wallets-private-key.cjs.js\"\n    },\n    \"./evm/connectors/blocto\": {\n      module: {\n        browser: \"./evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.browser.esm.js\",\n        \"default\": \"./evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.esm.js\"\n      },\n      \"default\": \"./evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.cjs.js\"\n    },\n    \"./evm/connectors/signer\": {\n      module: {\n        browser: \"./evm/connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.browser.esm.js\",\n        \"default\": \"./evm/connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.esm.js\"\n      },\n      \"default\": \"./evm/connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.cjs.js\"\n    },\n    \"./evm/connectors/zerion\": {\n      module: {\n        browser: \"./evm/connectors/zerion/dist/thirdweb-dev-wallets-evm-connectors-zerion.browser.esm.js\",\n        \"default\": \"./evm/connectors/zerion/dist/thirdweb-dev-wallets-evm-connectors-zerion.esm.js\"\n      },\n      \"default\": \"./evm/connectors/zerion/dist/thirdweb-dev-wallets-evm-connectors-zerion.cjs.js\"\n    },\n    \"./evm/wallets/coinbase-wallet\": {\n      module: {\n        browser: \"./evm/wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.browser.esm.js\",\n        \"default\": \"./evm/wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.esm.js\"\n      },\n      \"default\": \"./evm/wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.cjs.js\"\n    },\n    \"./evm/wallets/embedded-wallet\": {\n      module: {\n        browser: \"./evm/wallets/embedded-wallet/dist/thirdweb-dev-wallets-evm-wallets-embedded-wallet.browser.esm.js\",\n        \"default\": \"./evm/wallets/embedded-wallet/dist/thirdweb-dev-wallets-evm-wallets-embedded-wallet.esm.js\"\n      },\n      \"default\": \"./evm/wallets/embedded-wallet/dist/thirdweb-dev-wallets-evm-wallets-embedded-wallet.cjs.js\"\n    },\n    \"./evm/connectors/phantom\": {\n      module: {\n        browser: \"./evm/connectors/phantom/dist/thirdweb-dev-wallets-evm-connectors-phantom.browser.esm.js\",\n        \"default\": \"./evm/connectors/phantom/dist/thirdweb-dev-wallets-evm-connectors-phantom.esm.js\"\n      },\n      \"default\": \"./evm/connectors/phantom/dist/thirdweb-dev-wallets-evm-connectors-phantom.cjs.js\"\n    },\n    \"./evm/connectors/rainbow\": {\n      module: {\n        browser: \"./evm/connectors/rainbow/dist/thirdweb-dev-wallets-evm-connectors-rainbow.browser.esm.js\",\n        \"default\": \"./evm/connectors/rainbow/dist/thirdweb-dev-wallets-evm-connectors-rainbow.esm.js\"\n      },\n      \"default\": \"./evm/connectors/rainbow/dist/thirdweb-dev-wallets-evm-connectors-rainbow.cjs.js\"\n    },\n    \"./evm/connectors/injected\": {\n      module: {\n        browser: \"./evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js\",\n        \"default\": \"./evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.esm.js\"\n      },\n      \"default\": \"./evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.cjs.js\"\n    },\n    \"./evm/connectors/metamask\": {\n      module: {\n        browser: \"./evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.browser.esm.js\",\n        \"default\": \"./evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.esm.js\"\n      },\n      \"default\": \"./evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.cjs.js\"\n    },\n    \"./evm/wallets/local-wallet-node\": {\n      module: {\n        browser: \"./evm/wallets/local-wallet-node/dist/thirdweb-dev-wallets-evm-wallets-local-wallet-node.browser.esm.js\",\n        \"default\": \"./evm/wallets/local-wallet-node/dist/thirdweb-dev-wallets-evm-wallets-local-wallet-node.esm.js\"\n      },\n      \"default\": \"./evm/wallets/local-wallet-node/dist/thirdweb-dev-wallets-evm-wallets-local-wallet-node.cjs.js\"\n    },\n    \"./evm/wallets/wallet-connect-v1\": {\n      module: {\n        browser: \"./evm/wallets/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect-v1.browser.esm.js\",\n        \"default\": \"./evm/wallets/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect-v1.esm.js\"\n      },\n      \"default\": \"./evm/wallets/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect-v1.cjs.js\"\n    },\n    \"./evm/wallets/aws-secrets-manager\": {\n      module: {\n        browser: \"./evm/wallets/aws-secrets-manager/dist/thirdweb-dev-wallets-evm-wallets-aws-secrets-manager.browser.esm.js\",\n        \"default\": \"./evm/wallets/aws-secrets-manager/dist/thirdweb-dev-wallets-evm-wallets-aws-secrets-manager.esm.js\"\n      },\n      \"default\": \"./evm/wallets/aws-secrets-manager/dist/thirdweb-dev-wallets-evm-wallets-aws-secrets-manager.cjs.js\"\n    },\n    \"./evm/connectors/local-wallet\": {\n      module: {\n        browser: \"./evm/connectors/local-wallet/dist/thirdweb-dev-wallets-evm-connectors-local-wallet.browser.esm.js\",\n        \"default\": \"./evm/connectors/local-wallet/dist/thirdweb-dev-wallets-evm-connectors-local-wallet.esm.js\"\n      },\n      \"default\": \"./evm/connectors/local-wallet/dist/thirdweb-dev-wallets-evm-connectors-local-wallet.cjs.js\"\n    },\n    \"./evm/connectors/smart-wallet\": {\n      module: {\n        browser: \"./evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.browser.esm.js\",\n        \"default\": \"./evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.esm.js\"\n      },\n      \"default\": \"./evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.cjs.js\"\n    },\n    \"./evm/connectors/wallet-connect\": {\n      module: {\n        browser: \"./evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.browser.esm.js\",\n        \"default\": \"./evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.esm.js\"\n      },\n      \"default\": \"./evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.cjs.js\"\n    },\n    \"./evm/connectors/coinbase-wallet\": {\n      module: {\n        browser: \"./evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.browser.esm.js\",\n        \"default\": \"./evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.esm.js\"\n      },\n      \"default\": \"./evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.cjs.js\"\n    },\n    \"./evm/connectors/embedded-wallet\": {\n      module: {\n        browser: \"./evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.browser.esm.js\",\n        \"default\": \"./evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.esm.js\"\n      },\n      \"default\": \"./evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.cjs.js\"\n    },\n    \"./evm/connectors/wallet-connect-v1\": {\n      module: {\n        browser: \"./evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.browser.esm.js\",\n        \"default\": \"./evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.esm.js\"\n      },\n      \"default\": \"./evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.cjs.js\"\n    },\n    \"./evm/connectors/embedded-wallet/implementations\": {\n      module: {\n        browser: \"./evm/connectors/embedded-wallet/implementations/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet-implementations.browser.esm.js\",\n        \"default\": \"./evm/connectors/embedded-wallet/implementations/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet-implementations.esm.js\"\n      },\n      \"default\": \"./evm/connectors/embedded-wallet/implementations/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet-implementations.cjs.js\"\n    },\n    \"./package.json\": \"./package.json\"\n  },\n  repository: \"https://github.com/thirdweb-dev/js/tree/main/packages/wallets\",\n  license: \"Apache-2.0\",\n  bugs: {\n    url: \"https://github.com/thirdweb-dev/js/issues\"\n  },\n  author: \"thirdweb eng <eng@thirdweb.com>\",\n  files: [\"dist/\", \"evm/\", \"solana/\"],\n  preconstruct: {\n    entrypoints: [\"index.ts\", \"evm/index.ts\", \"evm/connectors/*/index.ts\", \"evm/connectors/embedded-wallet/implementations/index.ts\", \"evm/wallets/**\", \"solana/index.ts\", \"solana/wallets/**\"],\n    exports: {\n      envConditions: [\"browser\"]\n    }\n  },\n  sideEffects: false,\n  dependencies: {\n    \"@account-abstraction/contracts\": \"^0.5.0\",\n    \"@account-abstraction/sdk\": \"^0.5.0\",\n    \"@account-abstraction/utils\": \"^0.5.0\",\n    \"@blocto/sdk\": \"^0.5.4\",\n    \"@coinbase/wallet-sdk\": \"^3.7.1\",\n    \"@magic-ext/connect\": \"^6.7.2\",\n    \"@magic-ext/oauth\": \"^7.6.2\",\n    \"@magic-sdk/provider\": \"^13.6.2\",\n    \"@paperxyz/embedded-wallet-service-sdk\": \"^1.2.4\",\n    \"@paperxyz/sdk-common-utilities\": \"^0.1.0\",\n    \"@safe-global/safe-core-sdk\": \"^3.3.4\",\n    \"@safe-global/safe-ethers-adapters\": \"0.1.0-alpha.17\",\n    \"@safe-global/safe-ethers-lib\": \"^1.9.4\",\n    \"@thirdweb-dev/chains\": \"workspace:*\",\n    \"@thirdweb-dev/contracts-js\": \"workspace:*\",\n    \"@thirdweb-dev/sdk\": \"workspace:*\",\n    \"@walletconnect/core\": \"^2.9.1\",\n    \"@walletconnect/ethereum-provider\": \"^2.9.1\",\n    \"@walletconnect/jsonrpc-utils\": \"^1.0.8\",\n    \"@walletconnect/modal\": \"^2.6.1\",\n    \"@walletconnect/types\": \"^2.9.1\",\n    \"@walletconnect/utils\": \"^2.9.1\",\n    \"@walletconnect/web3wallet\": \"^1.8.7\",\n    buffer: \"^6.0.3\",\n    \"cross-fetch\": \"^3.1.8\",\n    \"crypto-js\": \"^4.1.1\",\n    \"eth-provider\": \"^0.13.6\",\n    eventemitter3: \"^5.0.1\",\n    \"magic-sdk\": \"^13.6.2\",\n    \"web3-core\": \"1.5.2\"\n  },\n  peerDependencies: {\n    \"@aws-sdk/client-secrets-manager\": \"^3.256.0\",\n    \"@noble/ed25519\": \"^1.7.1\",\n    \"@solana/web3.js\": \"^1.73.0\",\n    bs58: \"^5.0.0\",\n    ethers: \"^5.7.2\",\n    \"ethers-aws-kms-signer\": \"^1.3.2\",\n    \"ethers-gcp-kms-signer\": \"^1.1.6\",\n    tweetnacl: \"^1.0.3\"\n  },\n  peerDependenciesMeta: {\n    tweetnacl: {\n      optional: true\n    },\n    \"@aws-sdk/client-secrets-manager\": {\n      optional: true\n    },\n    \"ethers-aws-kms-signer\": {\n      optional: true\n    },\n    \"@noble/ed25519\": {\n      optional: true\n    },\n    \"@solana/web3.js\": {\n      optional: true\n    },\n    bs58: {\n      optional: true\n    },\n    ethers: {\n      optional: true\n    }\n  },\n  devDependencies: {\n    \"@aws-sdk/client-secrets-manager\": \"^3.378.0\",\n    \"@babel/plugin-proposal-class-properties\": \"7.18.6\",\n    \"@babel/plugin-transform-flow-strip-types\": \"^7.22.5\",\n    \"@babel/plugin-transform-private-methods\": \"7.22.5\",\n    \"@noble/ed25519\": \"^1.7.1\",\n    \"@preconstruct/cli\": \"2.7.0\",\n    \"@solana/web3.js\": \"^1.62.0\",\n    \"@thirdweb-dev/tsconfig\": \"workspace:*\",\n    \"@types/crypto-js\": \"^4.1.1\",\n    abitype: \"^0.2.5\",\n    \"babel-plugin-transform-inline-environment-variables\": \"^0.4.4\",\n    bs58: \"^5.0.0\",\n    \"cross-env\": \"^7.0.3\",\n    \"eslint-config-thirdweb\": \"workspace:*\",\n    \"eslint-plugin-better-tree-shaking\": \"0.0.3\",\n    \"ethereum-provider\": \"^0.7.7\",\n    ethers: \"^5.7.2\",\n    \"ethers-aws-kms-signer\": \"^1.3.2\",\n    \"ethers-gcp-kms-signer\": \"^1.1.6\",\n    tweetnacl: \"^1.0.3\",\n    typescript: \"^5.1.6\"\n  },\n  scripts: {\n    format: \"prettier --write 'src/**/*'\",\n    lint: \"eslint src/\",\n    fix: \"eslint src/ --fix\",\n    clean: \"rm -rf dist/\",\n    build: \"tsc && cross-env THIRDWEB_EWS_SDK_VERSION=$npm_package_version preconstruct build\",\n    \"preconstruct:fix\": \"preconstruct fix\",\n    push: \"yalc push\"\n  }\n};\nclass HttpRpcClient {\n  constructor(bundlerUrl, entryPointAddress, chainId, clientId, secretKey) {\n    this.bundlerUrl = bundlerUrl;\n    this.entryPointAddress = entryPointAddress;\n    this.chainId = chainId;\n    const headers = {};\n    if (isTwUrl(this.bundlerUrl)) {\n      const bundleId = typeof globalThis !== \"undefined\" && \"APP_BUNDLE_ID\" in globalThis ? globalThis.APP_BUNDLE_ID : undefined;\n      if (secretKey) {\n        headers[\"x-secret-key\"] = secretKey;\n      } else if (clientId) {\n        headers[\"x-client-id\"] = clientId;\n        if (bundleId) {\n          headers[\"x-bundle-id\"] = bundleId;\n        }\n      }\n\n      // Dashboard token\n      if (typeof globalThis !== \"undefined\" && \"TW_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = \"Bearer \".concat(globalThis.TW_AUTH_TOKEN);\n      }\n\n      // CLI token\n      if (typeof globalThis !== \"undefined\" && \"TW_CLI_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_CLI_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = \"Bearer \".concat(globalThis.TW_CLI_AUTH_TOKEN);\n        headers[\"x-authorize-wallet\"] = \"true\";\n      }\n      headers[\"x-sdk-version\"] = pkg.version;\n      headers[\"x-sdk-name\"] = pkg.name;\n      headers[\"x-sdk-platform\"] = bundleId ? \"react-native\" : window.bridge !== undefined ? \"webGL\" : \"browser\";\n    }\n    this.userOpJsonRpcProvider = new providers.JsonRpcProvider({\n      url: this.bundlerUrl,\n      headers\n    }, {\n      name: \"Connected bundler network\",\n      chainId\n    });\n    this.initializing = this.validateChainId();\n  }\n  async validateChainId() {\n    // validate chainId is in sync with expected chainid\n    const chain = await this.userOpJsonRpcProvider.send(\"eth_chainId\", []);\n    const bundlerChain = parseInt(chain);\n    if (bundlerChain !== this.chainId) {\n      throw new Error(\"bundler \".concat(this.bundlerUrl, \" is on chainId \").concat(bundlerChain, \", but provider is on chainId \").concat(this.chainId));\n    }\n  }\n\n  /**\n   * send a UserOperation to the bundler\n   * @param userOp1\n   * @return userOpHash the id of this operation, for getUserOperationTransaction\n   */\n  async sendUserOpToBundler(userOp1) {\n    await this.initializing;\n    const hexifiedUserOp = deepHexlify(await utils.resolveProperties(userOp1));\n    const jsonRequestData = [hexifiedUserOp, this.entryPointAddress];\n    await this.printUserOperation(\"eth_sendUserOperation\", jsonRequestData);\n    return await this.userOpJsonRpcProvider.send(\"eth_sendUserOperation\", [hexifiedUserOp, this.entryPointAddress]);\n  }\n  async estimateUserOpGas(userOp1) {\n    await this.initializing;\n    const hexifiedUserOp = deepHexlify(await utils.resolveProperties(userOp1));\n    const jsonRequestData = [hexifiedUserOp, this.entryPointAddress];\n    await this.printUserOperation(\"eth_estimateUserOperationGas\", jsonRequestData);\n    return await this.userOpJsonRpcProvider.send(\"eth_estimateUserOperationGas\", [hexifiedUserOp, this.entryPointAddress]);\n  }\n  async printUserOperation(method, _ref) {\n    {\n      return;\n    }\n  }\n}\n\n/**\n * wrap an existing provider to tunnel requests through Account Abstraction.\n * @param originalProvider the normal provider\n * @param config see ClientConfig for more info\n * @param originalSigner use this signer as the owner. of this wallet. By default, use the provider's signer\n */\nasync function create4337Provider(config, accountApi, originalProvider) {\n  const entryPoint = EntryPoint__factory.connect(config.entryPointAddress, originalProvider);\n  const chainId = (await originalProvider.getNetwork()).chainId;\n  const httpRpcClient = new HttpRpcClient(config.bundlerUrl, config.entryPointAddress, chainId, config.clientId, config.secretKey);\n  return await new ERC4337EthersProvider(chainId, config, config.localSigner, originalProvider, httpRpcClient, entryPoint, accountApi).init();\n}\nconst ENTRYPOINT_ADDRESS = \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\"; // v0.6\n\nconst ACCOUNT_CORE_ABI = [{\n  type: \"constructor\",\n  name: \"\",\n  inputs: [{\n    type: \"address\",\n    name: \"_entrypoint\",\n    internalType: \"contract IEntryPoint\"\n  }, {\n    type: \"address\",\n    name: \"_factory\",\n    internalType: \"address\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"event\",\n  name: \"AdminUpdated\",\n  inputs: [{\n    type: \"address\",\n    name: \"signer\",\n    indexed: true,\n    internalType: \"address\"\n  }, {\n    type: \"bool\",\n    name: \"isAdmin\",\n    indexed: false,\n    internalType: \"bool\"\n  }],\n  outputs: [],\n  anonymous: false\n}, {\n  type: \"event\",\n  name: \"ContractURIUpdated\",\n  inputs: [{\n    type: \"string\",\n    name: \"prevURI\",\n    indexed: false,\n    internalType: \"string\"\n  }, {\n    type: \"string\",\n    name: \"newURI\",\n    indexed: false,\n    internalType: \"string\"\n  }],\n  outputs: [],\n  anonymous: false\n}, {\n  type: \"event\",\n  name: \"Initialized\",\n  inputs: [{\n    type: \"uint8\",\n    name: \"version\",\n    indexed: false,\n    internalType: \"uint8\"\n  }],\n  outputs: [],\n  anonymous: false\n}, {\n  type: \"event\",\n  name: \"SignerPermissionsUpdated\",\n  inputs: [{\n    type: \"address\",\n    name: \"authorizingSigner\",\n    indexed: true,\n    internalType: \"address\"\n  }, {\n    type: \"address\",\n    name: \"targetSigner\",\n    indexed: true,\n    internalType: \"address\"\n  }, {\n    type: \"tuple\",\n    name: \"permissions\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"bytes32\",\n      name: \"uid\",\n      internalType: \"bytes32\"\n    }],\n    indexed: false,\n    internalType: \"struct IAccountPermissions.SignerPermissionRequest\"\n  }],\n  outputs: [],\n  anonymous: false\n}, {\n  type: \"function\",\n  name: \"addDeposit\",\n  inputs: [],\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  name: \"contractURI\",\n  inputs: [],\n  outputs: [{\n    type: \"string\",\n    name: \"\",\n    internalType: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"entryPoint\",\n  inputs: [],\n  outputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"contract IEntryPoint\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"execute\",\n  inputs: [{\n    type: \"address\",\n    name: \"_target\",\n    internalType: \"address\"\n  }, {\n    type: \"uint256\",\n    name: \"_value\",\n    internalType: \"uint256\"\n  }, {\n    type: \"bytes\",\n    name: \"_calldata\",\n    internalType: \"bytes\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"executeBatch\",\n  inputs: [{\n    type: \"address[]\",\n    name: \"_target\",\n    internalType: \"address[]\"\n  }, {\n    type: \"uint256[]\",\n    name: \"_value\",\n    internalType: \"uint256[]\"\n  }, {\n    type: \"bytes[]\",\n    name: \"_calldata\",\n    internalType: \"bytes[]\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"factory\",\n  inputs: [],\n  outputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getAllActiveSigners\",\n  inputs: [],\n  outputs: [{\n    type: \"tuple[]\",\n    name: \"signers\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"startTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"endTimestamp\",\n      internalType: \"uint128\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissions[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getAllAdmins\",\n  inputs: [],\n  outputs: [{\n    type: \"address[]\",\n    name: \"\",\n    internalType: \"address[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getAllSigners\",\n  inputs: [],\n  outputs: [{\n    type: \"tuple[]\",\n    name: \"signers\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"startTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"endTimestamp\",\n      internalType: \"uint128\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissions[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getDeposit\",\n  inputs: [],\n  outputs: [{\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getNonce\",\n  inputs: [],\n  outputs: [{\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getPermissionsForSigner\",\n  inputs: [{\n    type: \"address\",\n    name: \"signer\",\n    internalType: \"address\"\n  }],\n  outputs: [{\n    type: \"tuple\",\n    name: \"\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"startTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"endTimestamp\",\n      internalType: \"uint128\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissions\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"initialize\",\n  inputs: [{\n    type: \"address\",\n    name: \"_defaultAdmin\",\n    internalType: \"address\"\n  }, {\n    type: \"bytes\",\n    name: \"\",\n    internalType: \"bytes\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"isActiveSigner\",\n  inputs: [{\n    type: \"address\",\n    name: \"signer\",\n    internalType: \"address\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"isAdmin\",\n  inputs: [{\n    type: \"address\",\n    name: \"_account\",\n    internalType: \"address\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"isValidSignature\",\n  inputs: [{\n    type: \"bytes32\",\n    name: \"_hash\",\n    internalType: \"bytes32\"\n  }, {\n    type: \"bytes\",\n    name: \"_signature\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bytes4\",\n    name: \"magicValue\",\n    internalType: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"isValidSigner\",\n  inputs: [{\n    type: \"address\",\n    name: \"_signer\",\n    internalType: \"address\"\n  }, {\n    type: \"tuple\",\n    name: \"_userOp\",\n    components: [{\n      type: \"address\",\n      name: \"sender\",\n      internalType: \"address\"\n    }, {\n      type: \"uint256\",\n      name: \"nonce\",\n      internalType: \"uint256\"\n    }, {\n      type: \"bytes\",\n      name: \"initCode\",\n      internalType: \"bytes\"\n    }, {\n      type: \"bytes\",\n      name: \"callData\",\n      internalType: \"bytes\"\n    }, {\n      type: \"uint256\",\n      name: \"callGasLimit\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"verificationGasLimit\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"preVerificationGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"maxFeePerGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"maxPriorityFeePerGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"bytes\",\n      name: \"paymasterAndData\",\n      internalType: \"bytes\"\n    }, {\n      type: \"bytes\",\n      name: \"signature\",\n      internalType: \"bytes\"\n    }],\n    internalType: \"struct UserOperation\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"multicall\",\n  inputs: [{\n    type: \"bytes[]\",\n    name: \"data\",\n    internalType: \"bytes[]\"\n  }],\n  outputs: [{\n    type: \"bytes[]\",\n    name: \"results\",\n    internalType: \"bytes[]\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"onERC1155BatchReceived\",\n  inputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"uint256[]\",\n    name: \"\",\n    internalType: \"uint256[]\"\n  }, {\n    type: \"uint256[]\",\n    name: \"\",\n    internalType: \"uint256[]\"\n  }, {\n    type: \"bytes\",\n    name: \"\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bytes4\",\n    name: \"\",\n    internalType: \"bytes4\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"onERC1155Received\",\n  inputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }, {\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }, {\n    type: \"bytes\",\n    name: \"\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bytes4\",\n    name: \"\",\n    internalType: \"bytes4\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"onERC721Received\",\n  inputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }, {\n    type: \"bytes\",\n    name: \"\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bytes4\",\n    name: \"\",\n    internalType: \"bytes4\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"setAdmin\",\n  inputs: [{\n    type: \"address\",\n    name: \"_account\",\n    internalType: \"address\"\n  }, {\n    type: \"bool\",\n    name: \"_isAdmin\",\n    internalType: \"bool\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"setContractURI\",\n  inputs: [{\n    type: \"string\",\n    name: \"_uri\",\n    internalType: \"string\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"setPermissionsForSigner\",\n  inputs: [{\n    type: \"tuple\",\n    name: \"_req\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"bytes32\",\n      name: \"uid\",\n      internalType: \"bytes32\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissionRequest\"\n  }, {\n    type: \"bytes\",\n    name: \"_signature\",\n    internalType: \"bytes\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"supportsInterface\",\n  inputs: [{\n    type: \"bytes4\",\n    name: \"interfaceId\",\n    internalType: \"bytes4\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"validateUserOp\",\n  inputs: [{\n    type: \"tuple\",\n    name: \"userOp\",\n    components: [{\n      type: \"address\",\n      name: \"sender\",\n      internalType: \"address\"\n    }, {\n      type: \"uint256\",\n      name: \"nonce\",\n      internalType: \"uint256\"\n    }, {\n      type: \"bytes\",\n      name: \"initCode\",\n      internalType: \"bytes\"\n    }, {\n      type: \"bytes\",\n      name: \"callData\",\n      internalType: \"bytes\"\n    }, {\n      type: \"uint256\",\n      name: \"callGasLimit\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"verificationGasLimit\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"preVerificationGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"maxFeePerGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"maxPriorityFeePerGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"bytes\",\n      name: \"paymasterAndData\",\n      internalType: \"bytes\"\n    }, {\n      type: \"bytes\",\n      name: \"signature\",\n      internalType: \"bytes\"\n    }],\n    internalType: \"struct UserOperation\"\n  }, {\n    type: \"bytes32\",\n    name: \"userOpHash\",\n    internalType: \"bytes32\"\n  }, {\n    type: \"uint256\",\n    name: \"missingAccountFunds\",\n    internalType: \"uint256\"\n  }],\n  outputs: [{\n    type: \"uint256\",\n    name: \"validationData\",\n    internalType: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"verifySignerPermissionRequest\",\n  inputs: [{\n    type: \"tuple\",\n    name: \"req\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"bytes32\",\n      name: \"uid\",\n      internalType: \"bytes32\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissionRequest\"\n  }, {\n    type: \"bytes\",\n    name: \"signature\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"success\",\n    internalType: \"bool\"\n  }, {\n    type: \"address\",\n    name: \"signer\",\n    internalType: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"withdrawDepositTo\",\n  inputs: [{\n    type: \"address\",\n    name: \"withdrawAddress\",\n    internalType: \"address payable\"\n  }, {\n    type: \"uint256\",\n    name: \"amount\",\n    internalType: \"uint256\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"receive\",\n  name: \"\",\n  inputs: [],\n  outputs: [],\n  stateMutability: \"payable\"\n}];\n\n/**\n * Base class for all Smart Wallet ERC-4337 Clients to implement.\n * Subclass should inherit 5 methods to support a specific wallet contract:\n *\n * - getAccountInitCode - return the value to put into the \"initCode\" field, if the account is not yet deployed. should create the account instance using a factory contract.\n * - getNonce - return current account's nonce value\n * - encodeExecute - encode the call from entryPoint through our account to the target contract.\n * - signUserOpHash - sign the hash of a UserOp.\n *\n * The user can use the following APIs:\n * - createUnsignedUserOp - given \"target\" and \"calldata\", fill userOp to perform that operation from the account.\n * - createSignedUserOp - helper to call the above createUnsignedUserOp, and then extract the userOpHash and sign it\n */\nclass BaseAccountAPI {\n  // entryPoint connected to \"zero\" address. allowed to make static calls (e.g. to getSenderAddress)\n\n  /**\n   * base constructor.\n   * subclass SHOULD add parameters that define the owner (signer) of this wallet\n   */\n  constructor(params) {\n    _defineProperty(this, \"isPhantom\", true);\n    this.provider = params.provider;\n    this.overheads = params.overheads;\n    this.entryPointAddress = params.entryPointAddress;\n    this.accountAddress = params.accountAddress;\n    this.paymasterAPI = params.paymasterAPI;\n\n    // factory \"connect\" define the contract address. the contract \"connect\" defines the \"from\" address.\n    this.entryPointView = EntryPoint__factory.connect(params.entryPointAddress, params.provider).connect(ethers.constants.AddressZero);\n  }\n  async init() {\n    if ((await this.provider.getCode(this.entryPointAddress)) === \"0x\") {\n      throw new Error(\"entryPoint not deployed at \".concat(this.entryPointAddress));\n    }\n    await this.getAccountAddress();\n    return this;\n  }\n\n  /**\n   * return the value to put into the \"initCode\" field, if the contract is not yet deployed.\n   * this value holds the \"factory\" address, followed by this account's information\n   */\n\n  /**\n   * return current account's nonce.\n   */\n\n  /**\n   * encode the call from entryPoint through our account to the target contract.\n   * @param target\n   * @param value\n   * @param data\n   */\n\n  /**\n   * sign a userOp's hash (userOpHash).\n   * @param userOpHash\n   */\n\n  /**\n   * check if the contract is already deployed.\n   */\n  async checkAccountPhantom() {\n    if (!this.isPhantom) {\n      // already deployed. no need to check anymore.\n      return this.isPhantom;\n    }\n    const senderAddressCode = await this.provider.getCode(this.getAccountAddress());\n    if (senderAddressCode.length > 2) {\n      this.isPhantom = false;\n    }\n    return this.isPhantom;\n  }\n\n  /**\n   * calculate the account address even before it is deployed\n   */\n  async getCounterFactualAddress() {\n    const initCode = this.getAccountInitCode();\n    // use entryPoint to query account address (factory can provide a helper method to do the same, but\n    // this method attempts to be generic\n    try {\n      await this.entryPointView.callStatic.getSenderAddress(initCode);\n    } catch (e) {\n      return e.errorArgs.sender;\n    }\n    throw new Error(\"must handle revert\");\n  }\n\n  /**\n   * return initCode value to into the UserOp.\n   * (either deployment code, or empty hex if contract already deployed)\n   */\n  async getInitCode() {\n    if (await this.checkAccountPhantom()) {\n      return await this.getAccountInitCode();\n    }\n    return \"0x\";\n  }\n\n  /**\n   * return maximum gas used for verification.\n   * NOTE: createUnsignedUserOp will add to this value the cost of creation, if the contract is not yet created.\n   */\n  async getVerificationGasLimit() {\n    return 100000;\n  }\n\n  /**\n   * should cover cost of putting calldata on-chain, and some overhead.\n   * actual overhead depends on the expected bundle size\n   */\n  async getPreVerificationGas(userOp) {\n    const p = await utils.resolveProperties(userOp);\n    return calcPreVerificationGas(p, this.overheads);\n  }\n\n  /**\n   * ABI-encode a user operation. used for calldata cost estimation\n   */\n  packUserOp(userOp) {\n    return packUserOp(userOp, false);\n  }\n  async encodeUserOpCallDataAndGasLimit(detailsForUserOp, batched) {\n    var _parseNumber;\n    function parseNumber(a) {\n      if (!a || a === \"\") {\n        return null;\n      }\n      return BigNumber.from(a.toString());\n    }\n    const value = (_parseNumber = parseNumber(detailsForUserOp.value)) !== null && _parseNumber !== void 0 ? _parseNumber : BigNumber.from(0);\n    const callData = batched ? detailsForUserOp.data : await this.encodeExecute(detailsForUserOp.target, value, detailsForUserOp.data);\n    let callGasLimit;\n    const isPhantom = await this.checkAccountPhantom();\n    if (isPhantom) {\n      // when the account is not deployed yet, we simulate the call to the target contract directly\n      callGasLimit = await this.provider.estimateGas({\n        from: this.getAccountAddress(),\n        to: detailsForUserOp.target,\n        data: detailsForUserOp.data\n      });\n      // add 20% overhead for entrypoint checks\n      callGasLimit = callGasLimit.mul(120).div(100);\n      // if the estimation is too low, we use a fixed value of 500k\n      if (callGasLimit.lt(30000)) {\n        callGasLimit = BigNumber.from(500000);\n      }\n    } else {\n      var _parseNumber2;\n      callGasLimit = (_parseNumber2 = parseNumber(detailsForUserOp.gasLimit)) !== null && _parseNumber2 !== void 0 ? _parseNumber2 : await this.provider.estimateGas({\n        from: this.entryPointAddress,\n        to: this.getAccountAddress(),\n        data: callData\n      });\n    }\n    return {\n      callData,\n      callGasLimit\n    };\n  }\n\n  /**\n   * return userOpHash for signing.\n   * This value matches entryPoint.getUserOpHash (calculated off-chain, to avoid a view call)\n   * @param userOp userOperation, (signature field ignored)\n   */\n  async getUserOpHash(userOp) {\n    const chainId = await this.provider.getNetwork().then(net => net.chainId);\n    return getUserOpHashV06(userOp, this.entryPointAddress, chainId);\n  }\n\n  /**\n   * return the account's address.\n   * this value is valid even before deploying the contract.\n   */\n  async getAccountAddress() {\n    if (!this.senderAddress) {\n      if (this.accountAddress) {\n        this.senderAddress = this.accountAddress;\n      } else {\n        this.senderAddress = await this.getCounterFactualAddress();\n      }\n    }\n    return this.senderAddress;\n  }\n  async estimateCreationGas(initCode) {\n    if (!initCode || initCode === \"0x\") {\n      return 0;\n    }\n    const deployerAddress = initCode.substring(0, 42);\n    const deployerCallData = \"0x\" + initCode.substring(42);\n    return await this.provider.estimateGas({\n      to: deployerAddress,\n      data: deployerCallData\n    });\n  }\n\n  /**\n   * create a UserOperation, filling all details (except signature)\n   * - if account is not yet created, add initCode to deploy it.\n   * - if gas or nonce are missing, read them from the chain (note that we can't fill gaslimit before the account is created)\n   * @param info\n   */\n  async createUnsignedUserOp(info, batched) {\n    var _info$nonce;\n    const {\n      callData,\n      callGasLimit\n    } = await this.encodeUserOpCallDataAndGasLimit(info, batched);\n    const initCode = await this.getInitCode();\n    const initGas = await this.estimateCreationGas(initCode);\n    const verificationGasLimit = BigNumber.from(await this.getVerificationGasLimit()).add(initGas);\n    let {\n      maxFeePerGas,\n      maxPriorityFeePerGas\n    } = info;\n    if (!maxFeePerGas || !maxPriorityFeePerGas) {\n      const feeData = await getDynamicFeeData(this.provider);\n      if (!maxPriorityFeePerGas) {\n        var _feeData$maxPriorityF;\n        maxPriorityFeePerGas = (_feeData$maxPriorityF = feeData.maxPriorityFeePerGas) !== null && _feeData$maxPriorityF !== void 0 ? _feeData$maxPriorityF : undefined;\n      }\n      if (!maxFeePerGas) {\n        var _feeData$maxFeePerGas;\n        maxFeePerGas = (_feeData$maxFeePerGas = feeData.maxFeePerGas) !== null && _feeData$maxFeePerGas !== void 0 ? _feeData$maxFeePerGas : undefined;\n        const network = await this.provider.getNetwork();\n        const chainId = network.chainId;\n        if (chainId === Celo.chainId || chainId === CeloAlfajoresTestnet.chainId || chainId === CeloBaklavaTestnet.chainId) {\n          maxPriorityFeePerGas = maxFeePerGas;\n        }\n      }\n    }\n    const partialUserOp = {\n      sender: this.getAccountAddress(),\n      nonce: (_info$nonce = info.nonce) !== null && _info$nonce !== void 0 ? _info$nonce : this.getNonce(),\n      initCode,\n      callData,\n      callGasLimit,\n      verificationGasLimit,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      paymasterAndData: \"0x\"\n    };\n    let paymasterAndData;\n    let userOp = partialUserOp;\n    if (this.paymasterAPI) {\n      // fill (partial) preVerificationGas (all except the cost of the generated paymasterAndData)\n      try {\n        // userOp.preVerificationGas contains a promise that will resolve to an error.\n        await ethers.utils.resolveProperties(userOp);\n        // eslint-disable-next-line no-empty\n      } catch (_) {}\n      const pmOp = {\n        sender: userOp.sender,\n        nonce: userOp.nonce,\n        initCode: userOp.initCode,\n        callData: userOp.callData,\n        callGasLimit: userOp.callGasLimit,\n        verificationGasLimit: userOp.verificationGasLimit,\n        maxFeePerGas: userOp.maxFeePerGas,\n        maxPriorityFeePerGas: userOp.maxPriorityFeePerGas,\n        // A dummy value here is required in order to calculate a correct preVerificationGas value.\n        paymasterAndData: DUMMY_PAYMASTER_AND_DATA,\n        signature: ethers.utils.hexlify(Buffer.alloc(SIG_SIZE, 1))\n      };\n      userOp = await ethers.utils.resolveProperties(pmOp);\n      const preVerificationGas = calcPreVerificationGas(userOp);\n      userOp.preVerificationGas = preVerificationGas;\n      paymasterAndData = await this.paymasterAPI.getPaymasterAndData(userOp);\n      if (paymasterAndData === \"0x\") {\n        paymasterAndData = undefined;\n      }\n    }\n    if (paymasterAndData) {\n      userOp.paymasterAndData = paymasterAndData;\n      return {\n        ...userOp,\n        signature: \"\"\n      };\n    } else {\n      const modifiedOp = {\n        ...userOp,\n        paymasterAndData: \"0x\"\n      };\n      modifiedOp.preVerificationGas = await this.getPreVerificationGas(modifiedOp);\n      return {\n        ...modifiedOp,\n        signature: \"\"\n      };\n    }\n  }\n\n  /**\n   * Sign the filled userOp.\n   * @param userOp the UserOperation to sign (with signature field ignored)\n   */\n  async signUserOp(userOp) {\n    const userOpHash = await this.getUserOpHash(userOp);\n    const signature = this.signUserOpHash(userOpHash);\n    return {\n      ...userOp,\n      signature\n    };\n  }\n\n  /**\n   * helper method: create and sign a user operation.\n   * @param info transaction details for the userOp\n   */\n  async createSignedUserOp(info, batched) {\n    return await this.signUserOp(await this.createUnsignedUserOp(info, batched));\n  }\n\n  /**\n   * get the transaction that has this userOpHash mined, or null if not found\n   * @param userOpHash returned by sendUserOpToBundler (or by getUserOpHash..)\n   * @param timeout stop waiting after this timeout\n   * @param interval time to wait between polls.\n   * @return the transactionHash this userOp was mined, or null if not found.\n   */\n  async getUserOpReceipt(userOpHash) {\n    let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30000;\n    let interval = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5000;\n    const endtime = Date.now() + timeout;\n    while (Date.now() < endtime) {\n      const events = await this.entryPointView.queryFilter(this.entryPointView.filters.UserOperationEvent(userOpHash));\n      if (events[0]) {\n        return events[0].transactionHash;\n      }\n      await new Promise(resolve => setTimeout(resolve, interval));\n    }\n    return null;\n  }\n}\nclass AccountAPI extends BaseAccountAPI {\n  constructor(params, originalProvider) {\n    super({\n      ...params,\n      provider: originalProvider\n    });\n    this.params = params;\n    // Technically dont need the signer here, but we need to encode/estimate gas with it so a signer is required\n    // We don't want to use the localSigner directly since it might be connected to another chain\n    // so we just use the public hardhat pkey instead\n    this.sdk = ThirdwebSDK.fromPrivateKey(LOCAL_NODE_PKEY, params.chain, {\n      clientId: params.clientId,\n      secretKey: params.secretKey\n    });\n  }\n  async getChainId() {\n    return await this.provider.getNetwork().then(n => n.chainId);\n  }\n  async getAccountContract() {\n    if (!this.accountContract) {\n      var _this$params$accountI;\n      if ((_this$params$accountI = this.params.accountInfo) !== null && _this$params$accountI !== void 0 && _this$params$accountI.abi) {\n        this.accountContract = await this.sdk.getContract(await this.getAccountAddress(), this.params.accountInfo.abi);\n      } else {\n        this.accountContract = await this.sdk.getContract(await this.getAccountAddress(), ACCOUNT_CORE_ABI);\n      }\n    }\n    return this.accountContract;\n  }\n  async getAccountInitCode() {\n    const factory = await this.getFactoryContract();\n    console.log(\"Deploying smart wallet via factory\");\n    const localSigner = await this.params.localSigner.getAddress();\n    const tx = await this.params.factoryInfo.createAccount(factory, localSigner);\n    try {\n      console.log(\"Cost to deploy smart wallet: \", (await tx.estimateGasCost()).ether, \"ETH\");\n    } catch (e) {\n      console.error(\"Cost to deploy smart wallet: unknown\", e);\n    }\n    return utils.hexConcat([factory.getAddress(), tx.encode()]);\n  }\n  async getFactoryContract() {\n    var _this$params$factoryI;\n    if (this.factoryContract) {\n      return this.factoryContract;\n    }\n    if ((_this$params$factoryI = this.params.factoryInfo) !== null && _this$params$factoryI !== void 0 && _this$params$factoryI.abi) {\n      this.factoryContract = await this.sdk.getContract(this.params.factoryAddress, this.params.factoryInfo.abi);\n    } else {\n      this.factoryContract = await this.sdk.getContract(this.params.factoryAddress);\n    }\n    return this.factoryContract;\n  }\n  async getCounterFactualAddress() {\n    if (this.params.accountAddress) {\n      return this.params.accountAddress;\n    }\n    const factory = await this.getFactoryContract();\n    const localSigner = await this.params.localSigner.getAddress();\n    return this.params.factoryInfo.getAccountAddress(factory, localSigner);\n  }\n  async getNonce() {\n    if (await this.checkAccountPhantom()) {\n      return BigNumber.from(0);\n    }\n    const accountContract = await this.getAccountContract();\n    return this.params.accountInfo.getNonce(accountContract);\n  }\n  async encodeExecute(target, value, data) {\n    const accountContract = await this.getAccountContract();\n    const tx = await this.params.accountInfo.execute(accountContract, target, value, data);\n    return tx.encode();\n  }\n  async encodeExecuteBatch(targets, values, datas) {\n    const accountContract = await this.getAccountContract();\n    const tx = await accountContract.prepare(\"executeBatch\", [targets, values, datas]);\n    return tx.encode();\n  }\n  async signUserOpHash(userOpHash) {\n    return await this.params.localSigner.signMessage(utils.arrayify(userOpHash));\n  }\n  async isAcountDeployed() {\n    return !(await this.checkAccountPhantom());\n  }\n}\nclass SmartWalletConnector extends Connector {\n  constructor(config) {\n    super();\n    this.config = config;\n  }\n  async initialize(params) {\n    const config = this.config;\n    const originalProvider = getChainProvider(config.chain, {\n      clientId: config.clientId,\n      secretKey: config.secretKey\n    });\n    const chainSlug = await this.getChainSlug(config.chain, originalProvider);\n    const bundlerUrl = this.config.bundlerUrl || \"https://\".concat(chainSlug, \".bundler.thirdweb.com\");\n    const paymasterUrl = this.config.paymasterUrl || \"https://\".concat(chainSlug, \".bundler.thirdweb.com\");\n    const entryPointAddress = config.entryPointAddress || ENTRYPOINT_ADDRESS;\n    const localSigner = await params.personalWallet.getSigner();\n    const providerConfig = {\n      chain: config.chain,\n      localSigner,\n      entryPointAddress,\n      bundlerUrl,\n      paymasterAPI: this.config.gasless ? this.config.paymasterAPI ? this.config.paymasterAPI : getVerifyingPaymaster(paymasterUrl, entryPointAddress, this.config.clientId, this.config.secretKey) : undefined,\n      factoryAddress: config.factoryAddress,\n      accountAddress: params.accountAddress,\n      factoryInfo: config.factoryInfo || this.defaultFactoryInfo(),\n      accountInfo: config.accountInfo || this.defaultAccountInfo(),\n      clientId: config.clientId,\n      secretKey: config.secretKey\n    };\n    this.personalWallet = params.personalWallet;\n    const accountApi = new AccountAPI(providerConfig, originalProvider);\n    this.aaProvider = await create4337Provider(providerConfig, accountApi, originalProvider);\n    this.accountApi = accountApi;\n  }\n  async connect(connectionArgs) {\n    await this.initialize(connectionArgs);\n    return await this.getAddress();\n  }\n  getProvider() {\n    if (!this.aaProvider) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    return Promise.resolve(this.aaProvider);\n  }\n  async getSigner() {\n    if (!this.aaProvider) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    return Promise.resolve(this.aaProvider.getSigner());\n  }\n  async getAddress() {\n    const signer = await this.getSigner();\n    return signer.getAddress();\n  }\n  async isConnected() {\n    try {\n      const address = await this.getAddress();\n      return !!address;\n    } catch (e) {\n      return false;\n    }\n  }\n  async disconnect() {\n    this.personalWallet = undefined;\n    this.aaProvider = undefined;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  async switchChain(chainId) {\n    // TODO implement chain switching\n    const provider = await this.getProvider();\n    const currentChainId = (await provider.getNetwork()).chainId;\n    if (currentChainId !== chainId) {\n      // only throw if actually trying to switch chains\n      throw new Error(\"Not supported.\");\n    }\n  }\n  setupListeners() {\n    return Promise.resolve();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateChains(chains) {}\n\n  /**\n   * Check whether the connected signer can execute a given transaction using the smart wallet.\n   * @param transaction the transaction to execute using the smart wallet.\n   * @returns whether the connected signer can execute the transaction using the smart wallet.\n   */\n  async hasPermissionToExecute(transaction) {\n    var _await$accountContrac;\n    const accountContract = await this.getAccountContract();\n    const signer = await this.getSigner();\n    const signerAddress = await signer.getAddress();\n    const restrictions = (_await$accountContrac = (await accountContract.account.getAllSigners()).filter(item => ethers.utils.getAddress(item.signer) === ethers.utils.getAddress(signerAddress))[0]) === null || _await$accountContrac === void 0 ? void 0 : _await$accountContrac.permissions;\n    if (!restrictions) {\n      return false;\n    }\n    return restrictions.approvedCallTargets.includes(transaction.getTarget());\n  }\n\n  /**\n   * Execute a single transaction\n   * @param transactions\n   * @returns the transaction receipt\n   */\n  async execute(transaction) {\n    const signer = await this.getSigner();\n    const tx = await signer.sendTransaction({\n      to: transaction.getTarget(),\n      data: transaction.encode(),\n      value: await transaction.getValue()\n    });\n    const receipt = await tx.wait();\n    return {\n      receipt\n    };\n  }\n\n  /**\n   * Execute multiple transactions in a single batch\n   * @param transactions\n   * @returns the transaction receipt\n   */\n  async executeBatch(transactions) {\n    if (!this.accountApi) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    const signer = await this.getSigner();\n    const targets = transactions.map(tx => tx.getTarget());\n    const data = transactions.map(tx => tx.encode());\n    const values = transactions.map(() => BigNumber.from(0)); // TODO check if we can handle multiple values\n    const callData = await this.accountApi.encodeExecuteBatch(targets, values, data);\n    const tx = await signer.sendTransaction({\n      to: await signer.getAddress(),\n      data: callData,\n      value: 0\n    }, true // batched tx flag\n    );\n\n    const receipt = await tx.wait();\n    return {\n      receipt\n    };\n  }\n\n  /**\n   * Manually deploy the smart wallet contract. If already deployed this will throw an error.\n   * Note that this is not necessary as the smart wallet will be deployed automatically on the first transaction the user makes.\n   * @returns the transaction receipt\n   */\n  async deploy() {\n    if (!this.accountApi) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    if (await this.accountApi.isAcountDeployed()) {\n      throw new Error(\"Smart wallet already deployed\");\n    }\n    const signer = await this.getSigner();\n    const tx = await signer.sendTransaction({\n      to: await signer.getAddress(),\n      data: \"0x\"\n    }, true // batched tx flag to avoid hitting the Router fallback method\n    );\n\n    const receipt = await tx.wait();\n    return {\n      receipt\n    };\n  }\n\n  /**\n   * Check if the smart wallet contract is deployed\n   * @returns true if the smart wallet contract is deployed\n   */\n  async isDeployed() {\n    if (!this.accountApi) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    return await this.accountApi.isAcountDeployed();\n  }\n  async deployIfNeeded() {\n    const isDeployed = await this.isDeployed();\n    if (!isDeployed) {\n      await this.deploy();\n    }\n  }\n  async grantPermissions(target, permissions) {\n    await this.deployIfNeeded();\n    const accountContract = await this.getAccountContract();\n    return accountContract.account.grantPermissions(target, permissions);\n  }\n  async revokePermissions(target) {\n    await this.deployIfNeeded();\n    const accountContract = await this.getAccountContract();\n    return accountContract.account.revokeAccess(target);\n  }\n  async addAdmin(target) {\n    await this.deployIfNeeded();\n    const accountContract = await this.getAccountContract();\n    return accountContract.account.grantAdminPermissions(target);\n  }\n  async removeAdmin(target) {\n    await this.deployIfNeeded();\n    const accountContract = await this.getAccountContract();\n    return accountContract.account.revokeAdminPermissions(target);\n  }\n  async getAllActiveSigners() {\n    const isDeployed = await this.isDeployed();\n    if (isDeployed) {\n      const accountContract = await this.getAccountContract();\n      return accountContract.account.getAllAdminsAndSigners();\n    } else {\n      var _this$personalWallet;\n      const personalWallet = await ((_this$personalWallet = this.personalWallet) === null || _this$personalWallet === void 0 ? void 0 : _this$personalWallet.getSigner());\n      if (!personalWallet) {\n        throw new Error(\"Personal wallet not connected\");\n      }\n      return [{\n        isAdmin: true,\n        signer: await personalWallet.getAddress(),\n        permissions: {\n          startDate: new Date(0),\n          expirationDate: new Date(0),\n          nativeTokenLimitPerTransaction: BigNumber.from(0),\n          approvedCallTargets: []\n        }\n      }];\n    }\n  }\n\n  /**\n   * Get the underlying account contract of the smart wallet.\n   * @returns the account contract of the smart wallet.\n   */\n  async getAccountContract() {\n    var _this$config$accountI;\n    const isDeployed = await this.isDeployed();\n    if (!isDeployed) {\n      throw new Error(\"Account contract is not deployed yet. You can deploy it manually using SmartWallet.deploy(), or by executing a transaction from this wallet.\");\n    }\n    // getting a new instance everytime\n    // to avoid caching issues pre/post deployment\n    const sdk = ThirdwebSDK.fromSigner(await this.getSigner(), this.config.chain, {\n      clientId: this.config.clientId,\n      secretKey: this.config.secretKey\n    });\n    if ((_this$config$accountI = this.config.accountInfo) !== null && _this$config$accountI !== void 0 && _this$config$accountI.abi) {\n      return sdk.getContract(await this.getAddress(), this.config.accountInfo.abi);\n    } else {\n      return sdk.getContract(await this.getAddress());\n    }\n  }\n\n  /**\n   * Get the underlying account factory contract of the smart wallet.\n   * @returns the account factory contract.\n   */\n  async getFactoryContract() {\n    var _this$config$factoryI;\n    const sdk = ThirdwebSDK.fromSigner(await this.getSigner(), this.config.chain, {\n      clientId: this.config.clientId,\n      secretKey: this.config.secretKey\n    });\n    if ((_this$config$factoryI = this.config.factoryInfo) !== null && _this$config$factoryI !== void 0 && _this$config$factoryI.abi) {\n      return sdk.getContract(this.config.factoryAddress, this.config.factoryInfo.abi);\n    }\n    return sdk.getContract(this.config.factoryAddress);\n  }\n  defaultFactoryInfo() {\n    return {\n      createAccount: async (factory, owner) => {\n        return factory.prepare(\"createAccount\", [owner, ethers.utils.toUtf8Bytes(\"\")]);\n      },\n      getAccountAddress: async (factory, owner) => {\n        try {\n          return await factory.call(\"getAddress\", [owner, ethers.utils.toUtf8Bytes(\"\")]);\n        } catch (e) {\n          console.log(\"Falling back to old factory\");\n          // TODO remove after a few versions\n          return factory.call(\"getAddress\", [owner]);\n        }\n      }\n    };\n  }\n  defaultAccountInfo() {\n    return {\n      execute: async (account, target, value, data) => {\n        return account.prepare(\"execute\", [target, value, data]);\n      },\n      getNonce: async account => {\n        return account.call(\"getNonce\", []);\n      }\n    };\n  }\n  async getChainSlug(chainOrRpc, provider) {\n    if (typeof chainOrRpc === \"object\") {\n      return chainOrRpc.slug;\n    }\n    if (typeof chainOrRpc === \"number\") {\n      const chain = getChainByChainId(chainOrRpc);\n      return chain.slug;\n    }\n    if (typeof chainOrRpc === \"string\") {\n      if (chainOrRpc.startsWith(\"http\") || chainOrRpc.startsWith(\"ws\")) {\n        // if it's a url, try to get the chain id from the provider\n        const chainId = (await provider.getNetwork()).chainId;\n        const chain = getChainByChainId(chainId);\n        return chain.slug;\n      }\n      // otherwise its the network name\n      return chainOrRpc;\n    } else {\n      throw new Error(\"Invalid network: \".concat(chainOrRpc));\n    }\n  }\n}\nexport { SmartWalletConnector };","map":{"version":3,"names":["Celo","CeloAlfajoresTestnet","CeloBaklavaTestnet","getChainByChainId","C","Connector","PaymasterAPI","calcPreVerificationGas","ethers","utils","Signer","providers","BigNumber","fetch","i","isTwUrl","EntryPoint__factory","_","_defineProperty","deepHexlify","packUserOp","getDynamicFeeData","ThirdwebSDK","LOCAL_NODE_PKEY","getChainProvider","toJSON","op","resolveProperties","then","userOp","Object","keys","map","key","val","startsWith","hexValue","reduce","set","_ref","k","v","getUserOpHashV06","entryPoint","chainId","hashedUserOp","sender","nonce","initCodeHash","keccak256","initCode","callDataHash","callData","callGasLimit","verificationGasLimit","preVerificationGas","maxFeePerGas","maxPriorityFeePerGas","paymasterAndDataHash","paymasterAndData","userOpType","components","type","name","encoded","defaultAbiCoder","encode","userOpHash","enc","SIG_SIZE","DUMMY_PAYMASTER_AND_DATA","VerifyingPaymasterAPI","constructor","paymasterUrl","clientId","secretKey","getPaymasterAndData","headers","Error","globalThis","APP_BUNDLE_ID","TW_AUTH_TOKEN","concat","TW_CLI_AUTH_TOKEN","response","method","body","JSON","stringify","jsonrpc","id","params","res","json","ok","error","statusText","code","status","result","toString","getVerifyingPaymaster","UserOperationEventListener","resolve","reject","timeout","boundLisener","listenerCallback","bind","start","filter","filters","UserOperationEvent","setTimeout","queryFilter","length","once","stop","off","_len","arguments","param","Array","_key","event","args","console","_this$nonce","log","parseInt","transactionReceipt","getTransactionReceipt","success","extractFailureReason","resolved","receipt","revertReasonEvents","UserOperationRevertReason","blockHash","message","revertReason","decode","substring","ERC4337EthersSigner","config","originalSigner","erc4337provider","httpRpcClient","smartAccountAPI","defineReadOnly","sendTransaction","transaction","_tx$data","batched","undefined","tx","verifyAllNecessaryFields","userOperation","createSignedUserOp","target","to","data","value","gasLimit","transactionResponse","constructUserOpTransactionResponse","sendUserOpToBundler","unwrapError","errorIn","errorMsg","_errorBody$error","_errorBody$error2","_failedOpMessage","errorBody","parse","errorStatus","errorCode","failedOpMessage","reason","includes","paymasterInfo","matched","match","split","stack","transactionRequest","connect","provider","getAddress","address","getSenderAccountAddress","signMessage","isNotDeployed","checkAccountPhantom","wait","signTransaction","ERC4337EthersProvider","BaseProvider","originalProvider","signer","init","initializedBlockNumber","getBlockNumber","getSigner","perform","encodeUserOpCallDataAndGasLimit","getTransaction","transactionHash","Promise","getAccountAddress","waitForTransaction","confirmations","listener","userOp1","getUserOpHash","waitForUserOp","hash","from","toNumber","detectNetwork","pkg","version","main","module","types","browser","exports","repository","license","bugs","url","author","files","preconstruct","entrypoints","envConditions","sideEffects","dependencies","buffer","eventemitter3","peerDependencies","bs58","tweetnacl","peerDependenciesMeta","optional","devDependencies","abitype","typescript","scripts","format","lint","fix","clean","build","push","HttpRpcClient","bundlerUrl","entryPointAddress","bundleId","window","bridge","userOpJsonRpcProvider","JsonRpcProvider","initializing","validateChainId","chain","send","bundlerChain","hexifiedUserOp","jsonRequestData","printUserOperation","estimateUserOpGas","create4337Provider","accountApi","getNetwork","localSigner","ENTRYPOINT_ADDRESS","ACCOUNT_CORE_ABI","inputs","internalType","outputs","stateMutability","indexed","anonymous","BaseAccountAPI","overheads","accountAddress","paymasterAPI","entryPointView","constants","AddressZero","getCode","isPhantom","senderAddressCode","getCounterFactualAddress","getAccountInitCode","callStatic","getSenderAddress","e","errorArgs","getInitCode","getVerificationGasLimit","getPreVerificationGas","p","detailsForUserOp","_parseNumber","parseNumber","a","encodeExecute","estimateGas","mul","div","lt","_parseNumber2","net","senderAddress","estimateCreationGas","deployerAddress","deployerCallData","createUnsignedUserOp","info","_info$nonce","initGas","add","feeData","_feeData$maxPriorityF","_feeData$maxFeePerGas","network","partialUserOp","getNonce","pmOp","signature","hexlify","Buffer","alloc","modifiedOp","signUserOp","signUserOpHash","getUserOpReceipt","interval","endtime","Date","now","events","AccountAPI","sdk","fromPrivateKey","getChainId","n","getAccountContract","accountContract","_this$params$accountI","accountInfo","abi","getContract","factory","getFactoryContract","factoryInfo","createAccount","estimateGasCost","ether","hexConcat","_this$params$factoryI","factoryContract","factoryAddress","execute","encodeExecuteBatch","targets","values","datas","prepare","arrayify","isAcountDeployed","SmartWalletConnector","initialize","chainSlug","getChainSlug","personalWallet","providerConfig","gasless","defaultFactoryInfo","defaultAccountInfo","aaProvider","connectionArgs","getProvider","isConnected","disconnect","switchChain","currentChainId","setupListeners","updateChains","chains","hasPermissionToExecute","_await$accountContrac","signerAddress","restrictions","account","getAllSigners","item","permissions","approvedCallTargets","getTarget","getValue","executeBatch","transactions","deploy","isDeployed","deployIfNeeded","grantPermissions","revokePermissions","revokeAccess","addAdmin","grantAdminPermissions","removeAdmin","revokeAdminPermissions","getAllActiveSigners","getAllAdminsAndSigners","_this$personalWallet","isAdmin","startDate","expirationDate","nativeTokenLimitPerTransaction","_this$config$accountI","fromSigner","_this$config$factoryI","owner","toUtf8Bytes","call","chainOrRpc","slug"],"sources":["C:/Misc/Documents/Career/FinTech/BlockChain/FrontEnd/buildspace-dao-starter/node_modules/@thirdweb-dev/react/node_modules/@thirdweb-dev/wallets/evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.browser.esm.js"],"sourcesContent":["import { Celo, CeloAlfajoresTestnet, CeloBaklavaTestnet, getChainByChainId } from '@thirdweb-dev/chains';\nimport { C as Connector } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { PaymasterAPI, calcPreVerificationGas } from '@account-abstraction/sdk';\nimport { ethers, utils, Signer, providers, BigNumber } from 'ethers';\nimport fetch from 'cross-fetch';\nimport { i as isTwUrl } from '../../../../dist/url-bc88b2b6.browser.esm.js';\nimport { EntryPoint__factory } from '@account-abstraction/contracts';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { deepHexlify, packUserOp } from '@account-abstraction/utils';\nimport { getDynamicFeeData, ThirdwebSDK, LOCAL_NODE_PKEY, getChainProvider } from '@thirdweb-dev/sdk';\nimport 'eventemitter3';\n\nfunction toJSON(op) {\n  return ethers.utils.resolveProperties(op).then(userOp => Object.keys(userOp).map(key => {\n    let val = userOp[key];\n    if (typeof val !== \"string\" || !val.startsWith(\"0x\")) {\n      val = ethers.utils.hexValue(val);\n    }\n    return [key, val];\n  }).reduce((set, _ref) => {\n    let [k, v] = _ref;\n    return {\n      ...set,\n      [k]: v\n    };\n  }, {}));\n}\n\n// v0.6 userOpHash calculation\nasync function getUserOpHashV06(userOp, entryPoint, chainId) {\n  const op = await utils.resolveProperties(userOp);\n  const hashedUserOp = {\n    sender: op.sender,\n    nonce: op.nonce,\n    initCodeHash: utils.keccak256(op.initCode),\n    callDataHash: utils.keccak256(op.callData),\n    callGasLimit: op.callGasLimit,\n    verificationGasLimit: op.verificationGasLimit,\n    preVerificationGas: op.preVerificationGas,\n    maxFeePerGas: op.maxFeePerGas,\n    maxPriorityFeePerGas: op.maxPriorityFeePerGas,\n    paymasterAndDataHash: utils.keccak256(op.paymasterAndData)\n  };\n  const userOpType = {\n    components: [{\n      type: \"address\",\n      name: \"sender\"\n    }, {\n      type: \"uint256\",\n      name: \"nonce\"\n    }, {\n      type: \"bytes32\",\n      name: \"initCodeHash\"\n    }, {\n      type: \"bytes32\",\n      name: \"callDataHash\"\n    }, {\n      type: \"uint256\",\n      name: \"callGasLimit\"\n    }, {\n      type: \"uint256\",\n      name: \"verificationGasLimit\"\n    }, {\n      type: \"uint256\",\n      name: \"preVerificationGas\"\n    }, {\n      type: \"uint256\",\n      name: \"maxFeePerGas\"\n    }, {\n      type: \"uint256\",\n      name: \"maxPriorityFeePerGas\"\n    }, {\n      type: \"bytes32\",\n      name: \"paymasterAndDataHash\"\n    }],\n    name: \"hashedUserOp\",\n    type: \"tuple\"\n  };\n  const encoded = utils.defaultAbiCoder.encode([userOpType], [{\n    ...hashedUserOp\n  }]);\n  // remove leading word (total length) and trailing word (zero-length signature)\n\n  const userOpHash = utils.keccak256(encoded);\n  const enc = utils.defaultAbiCoder.encode([\"bytes32\", \"address\", \"uint256\"], [userOpHash, entryPoint, chainId]);\n  return utils.keccak256(enc);\n}\n\nconst SIG_SIZE = 65;\nconst DUMMY_PAYMASTER_AND_DATA = \"0x0101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000001010101010100000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\";\nclass VerifyingPaymasterAPI extends PaymasterAPI {\n  constructor(paymasterUrl, entryPoint, clientId, secretKey) {\n    super();\n    this.paymasterUrl = paymasterUrl;\n    this.entryPoint = entryPoint;\n    this.clientId = clientId;\n    this.secretKey = secretKey;\n  }\n  async getPaymasterAndData(userOp) {\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    if (isTwUrl(this.paymasterUrl)) {\n      if (this.secretKey && this.clientId) {\n        throw new Error(\"Cannot use both secret key and client ID. Please use secretKey for server-side applications and clientId for client-side applications.\");\n      }\n      if (this.secretKey) {\n        headers[\"x-secret-key\"] = this.secretKey;\n      } else if (this.clientId) {\n        headers[\"x-client-id\"] = this.clientId;\n        if (typeof globalThis !== \"undefined\" && \"APP_BUNDLE_ID\" in globalThis) {\n          headers[\"x-bundle-id\"] = globalThis.APP_BUNDLE_ID;\n        }\n      }\n\n      // Dashboard token.\n      if (typeof globalThis !== \"undefined\" && \"TW_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = `Bearer ${globalThis.TW_AUTH_TOKEN}`;\n      }\n\n      // CLI token.\n      if (typeof globalThis !== \"undefined\" && \"TW_CLI_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_CLI_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = `Bearer ${globalThis.TW_CLI_AUTH_TOKEN}`;\n        headers[\"x-authorize-wallet\"] = \"true\";\n      }\n    }\n\n    // Ask the paymaster to sign the transaction and return a valid paymasterAndData value.\n    const response = await fetch(this.paymasterUrl, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify({\n        jsonrpc: \"2.0\",\n        id: 1,\n        method: \"pm_sponsorUserOperation\",\n        params: [await toJSON(userOp), {\n          entryPoint: this.entryPoint\n        }]\n      })\n    });\n    const res = await response.json();\n    if (!response.ok) {\n      const error = res.error || response.statusText;\n      const code = res.code || \"UNKNOWN\";\n      throw new Error(`Paymaster error: ${error}\nStatus: ${response.status}\nCode: ${code}`);\n    }\n    if (res.result) {\n      const result = res.result.paymasterAndData || res.result;\n      return result.toString();\n    } else {\n      throw new Error(`Paymaster returned no result from ${this.paymasterUrl}`);\n    }\n  }\n}\nconst getVerifyingPaymaster = (paymasterUrl, entryPoint, clientId, secretKey) => new VerifyingPaymasterAPI(paymasterUrl, entryPoint, clientId, secretKey);\n\n/**\n * This class encapsulates Ethers.js listener function and necessary UserOperation details to\n * discover a TransactionReceipt for the operation.\n *\n * TODO refactor this to a simple event listener on the entry point\n */\nclass UserOperationEventListener {\n  constructor(resolve, reject, entryPoint, sender, userOpHash, nonce, timeout) {\n    this.resolve = resolve;\n    this.reject = reject;\n    this.entryPoint = entryPoint;\n    this.sender = sender;\n    this.userOpHash = userOpHash;\n    this.nonce = nonce;\n    this.timeout = timeout;\n    _defineProperty(this, \"resolved\", false);\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    this.boundLisener = this.listenerCallback.bind(this);\n  }\n  start() {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    const filter = this.entryPoint.filters.UserOperationEvent(this.userOpHash);\n    // listener takes time... first query directly:\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    setTimeout(async () => {\n      const res = await this.entryPoint.queryFilter(filter, \"latest\");\n      if (res.length > 0) {\n        void this.listenerCallback(res[0]);\n      } else {\n        this.entryPoint.once(filter, this.boundLisener);\n      }\n    }, 100);\n  }\n  stop() {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    this.entryPoint.off(\"UserOperationEvent\", this.boundLisener);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async listenerCallback() {\n    for (var _len = arguments.length, param = new Array(_len), _key = 0; _key < _len; _key++) {\n      param[_key] = arguments[_key];\n    }\n    // TODO clean this up..\n    // eslint-disable-next-line prefer-rest-params\n    const event = arguments[arguments.length - 1];\n    if (!event.args) {\n      console.error(\"got event without args\", event);\n      return;\n    }\n    // TODO: can this happen? we register to event by userOpHash..\n    if (event.args.userOpHash !== this.userOpHash) {\n      console.log(`== event with wrong userOpHash: sender/nonce: event.${event.args.sender}@${event.args.nonce.toString()}!= userOp.${this.sender}@${parseInt(this.nonce?.toString())}`);\n      return;\n    }\n    const transactionReceipt = await event.getTransactionReceipt();\n\n    // before returning the receipt, update the status from the event.\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (!event.args.success) {\n      await this.extractFailureReason(transactionReceipt);\n    }\n    this.stop();\n    this.resolve(transactionReceipt);\n    this.resolved = true;\n  }\n  async extractFailureReason(receipt) {\n    receipt.status = 0;\n    const revertReasonEvents = await this.entryPoint.queryFilter(this.entryPoint.filters.UserOperationRevertReason(this.userOpHash, this.sender), receipt.blockHash);\n    if (revertReasonEvents[0]) {\n      let message = revertReasonEvents[0].args.revertReason;\n      if (message.startsWith(\"0x08c379a0\")) {\n        // Error(string)\n        message = utils.defaultAbiCoder.decode([\"string\"], \"0x\" + message.substring(10)).toString();\n      }\n      this.reject(new Error(`UserOp failed with reason: ${message}`));\n    }\n  }\n}\n\nclass ERC4337EthersSigner extends Signer {\n  // TODO: we have 'erc4337provider', remove shared dependencies or avoid two-way reference\n  constructor(config, originalSigner, erc4337provider, httpRpcClient, smartAccountAPI) {\n    super();\n    utils.defineReadOnly(this, \"provider\", erc4337provider);\n    this.config = config;\n    this.originalSigner = originalSigner;\n    this.erc4337provider = erc4337provider;\n    this.httpRpcClient = httpRpcClient;\n    this.smartAccountAPI = smartAccountAPI;\n  }\n  // This one is called by Contract. It signs the request and passes in to Provider to be sent.\n  async sendTransaction(transaction) {\n    let batched = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const tx = await ethers.utils.resolveProperties(transaction);\n    await this.verifyAllNecessaryFields(tx);\n    const userOperation = await this.smartAccountAPI.createSignedUserOp({\n      target: tx.to || \"\",\n      data: tx.data?.toString() || \"0x\",\n      value: tx.value,\n      gasLimit: tx.gasLimit\n    }, batched);\n    const transactionResponse = await this.erc4337provider.constructUserOpTransactionResponse(userOperation);\n    try {\n      await this.httpRpcClient.sendUserOpToBundler(userOperation);\n    } catch (error) {\n      throw this.unwrapError(error);\n    }\n    // TODO: handle errors - transaction that is \"rejected\" by bundler is _not likely_ to ever resolve its \"wait()\"\n    return transactionResponse;\n  }\n  unwrapError(errorIn) {\n    try {\n      let errorMsg = \"Unknown Error\";\n      if (errorIn.error) {\n        errorMsg = `The bundler has failed to include UserOperation in a batch: ${errorIn.error}`;\n      } else if (errorIn.body && typeof errorIn.body === \"string\") {\n        const errorBody = JSON.parse(errorIn.body);\n        const errorStatus = errorIn.status || \"UNKNOWN\";\n        const errorCode = errorBody?.code || \"UNKNOWN\";\n        let failedOpMessage = errorBody?.error?.message || errorBody?.error?.data || errorBody?.error || errorIn.reason;\n        if (failedOpMessage?.includes(\"FailedOp\")) {\n          let paymasterInfo = \"\";\n          // TODO: better error extraction methods will be needed\n          const matched = failedOpMessage.match(/FailedOp\\((.*)\\)/);\n          if (matched) {\n            const split = matched[1].split(\",\");\n            paymasterInfo = `(paymaster address: ${split[1]})`;\n            failedOpMessage = split[2];\n          }\n          errorMsg = `The bundler has failed to include UserOperation in a batch: ${failedOpMessage} ${paymasterInfo}`;\n        } else {\n          errorMsg = `RPC error: ${failedOpMessage}\nStatus: ${errorStatus}\nCode: ${errorCode}`;\n        }\n      }\n      const error = new Error(errorMsg);\n      error.stack = errorIn.stack;\n      return error;\n    } catch (error) {}\n    return errorIn;\n  }\n  async verifyAllNecessaryFields(transactionRequest) {\n    if (!transactionRequest.to) {\n      throw new Error(\"Missing call target\");\n    }\n    if (!transactionRequest.data && !transactionRequest.value) {\n      // TBD: banning no-op UserOps seems to make sense on provider level\n      throw new Error(\"Missing call data or value\");\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  connect(provider) {\n    throw new Error(\"changing providers is not supported\");\n  }\n  async getAddress() {\n    if (!this.address) {\n      this.address = await this.erc4337provider.getSenderAccountAddress();\n    }\n    return this.address;\n  }\n  async signMessage(message) {\n    const isNotDeployed = await this.smartAccountAPI.checkAccountPhantom();\n    if (isNotDeployed) {\n      console.log(\"Account contract not deployed yet. Deploying account before signing message\");\n      const tx = await this.sendTransaction({\n        to: await this.getAddress(),\n        data: \"0x\"\n      });\n      await tx.wait();\n    }\n    return await this.originalSigner.signMessage(message);\n  }\n  async signTransaction(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transaction) {\n    throw new Error(\"not implemented\");\n  }\n}\n\nclass ERC4337EthersProvider extends providers.BaseProvider {\n  constructor(chainId, config, originalSigner, originalProvider, httpRpcClient, entryPoint, smartAccountAPI) {\n    super({\n      name: \"ERC-4337 Custom Network\",\n      chainId\n    });\n    this.chainId = chainId;\n    this.config = config;\n    this.originalSigner = originalSigner;\n    this.originalProvider = originalProvider;\n    this.httpRpcClient = httpRpcClient;\n    this.entryPoint = entryPoint;\n    this.smartAccountAPI = smartAccountAPI;\n    this.signer = new ERC4337EthersSigner(config, originalSigner, this, httpRpcClient, smartAccountAPI);\n  }\n\n  /**\n   * finish intializing the provider.\n   * MUST be called after construction, before using the provider.\n   */\n  async init() {\n    // await this.httpRpcClient.validateChainId()\n    this.initializedBlockNumber = await this.originalProvider.getBlockNumber();\n    await this.smartAccountAPI.init();\n    // await this.signer.init()\n    return this;\n  }\n  getSigner() {\n    return this.signer;\n  }\n  async perform(method, params) {\n    if (method === \"sendTransaction\" || method === \"getTransactionReceipt\") {\n      // TODO: do we need 'perform' method to be available at all?\n      // there is nobody out there to use it for ERC-4337 methods yet, we have nothing to override in fact.\n      throw new Error(\"Should not get here. Investigate.\");\n    }\n    if (method === \"estimateGas\") {\n      // hijack this to estimate gas from the entrypoint instead\n      const {\n        callGasLimit\n      } = await this.smartAccountAPI.encodeUserOpCallDataAndGasLimit({\n        target: params.transaction.to,\n        data: params.transaction.data,\n        value: params.transaction.value,\n        gasLimit: params.transaction.gasLimit\n      }, false // TODO check this\n      );\n\n      return callGasLimit;\n    }\n    return await this.originalProvider.perform(method, params);\n  }\n  async getTransaction(transactionHash) {\n    // TODO\n    return await super.getTransaction(transactionHash);\n  }\n  async getTransactionReceipt(transactionHash) {\n    const userOpHash = await transactionHash;\n    const sender = await this.getSenderAccountAddress();\n    return await new Promise((resolve, reject) => {\n      new UserOperationEventListener(resolve, reject, this.entryPoint, sender, userOpHash).start();\n    });\n  }\n  async getSenderAccountAddress() {\n    return await this.smartAccountAPI.getAccountAddress();\n  }\n  async waitForTransaction(transactionHash, confirmations, timeout) {\n    const sender = await this.getSenderAccountAddress();\n    return await new Promise((resolve, reject) => {\n      const listener = new UserOperationEventListener(resolve, reject, this.entryPoint, sender, transactionHash, undefined, timeout);\n      listener.start();\n    });\n  }\n\n  // fabricate a response in a format usable by ethers users...\n  async constructUserOpTransactionResponse(userOp1) {\n    const userOp = await utils.resolveProperties(userOp1);\n    const userOpHash = await this.smartAccountAPI.getUserOpHash(userOp);\n    const waitForUserOp = async () => await new Promise((resolve, reject) => {\n      new UserOperationEventListener(resolve, reject, this.entryPoint, userOp.sender, userOpHash, userOp.nonce).start();\n    });\n    return {\n      hash: userOpHash,\n      confirmations: 0,\n      from: userOp.sender,\n      nonce: BigNumber.from(userOp.nonce).toNumber(),\n      gasLimit: BigNumber.from(userOp.callGasLimit),\n      // ??\n      value: BigNumber.from(0),\n      data: utils.hexValue(userOp.callData),\n      // should extract the actual called method from this \"execFromEntryPoint()\" call\n      chainId: this.chainId,\n      wait: async confirmations => {\n        const transactionReceipt = await waitForUserOp();\n        if (userOp.initCode.length !== 0) {\n          // checking if the wallet has been deployed by the transaction; it must be if we are here\n          await this.smartAccountAPI.checkAccountPhantom();\n        }\n        return transactionReceipt;\n      }\n    };\n  }\n  async detectNetwork() {\n    return this.originalProvider.detectNetwork();\n  }\n}\n\nvar pkg = {\n\tname: \"@thirdweb-dev/wallets\",\n\tversion: \"1.3.5\",\n\tmain: \"dist/thirdweb-dev-wallets.cjs.js\",\n\tmodule: \"dist/thirdweb-dev-wallets.esm.js\",\n\ttypes: \"dist/thirdweb-dev-wallets.cjs.d.ts\",\n\tbrowser: {\n\t\t\"./dist/thirdweb-dev-wallets.esm.js\": \"./dist/thirdweb-dev-wallets.browser.esm.js\"\n\t},\n\texports: {\n\t\t\".\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./dist/thirdweb-dev-wallets.browser.esm.js\",\n\t\t\t\t\"default\": \"./dist/thirdweb-dev-wallets.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./dist/thirdweb-dev-wallets.cjs.js\"\n\t\t},\n\t\t\"./evm\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/dist/thirdweb-dev-wallets-evm.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/dist/thirdweb-dev-wallets-evm.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/dist/thirdweb-dev-wallets-evm.cjs.js\"\n\t\t},\n\t\t\"./solana\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./solana/dist/thirdweb-dev-wallets-solana.browser.esm.js\",\n\t\t\t\t\"default\": \"./solana/dist/thirdweb-dev-wallets-solana.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./solana/dist/thirdweb-dev-wallets-solana.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/base\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/base/dist/thirdweb-dev-wallets-evm-wallets-base.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/base/dist/thirdweb-dev-wallets-evm-wallets-base.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/base/dist/thirdweb-dev-wallets-evm-wallets-base.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/safe\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/safe/dist/thirdweb-dev-wallets-evm-wallets-safe.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/safe/dist/thirdweb-dev-wallets-evm-wallets-safe.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/safe/dist/thirdweb-dev-wallets-evm-wallets-safe.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/frame\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/magic\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/magic/dist/thirdweb-dev-wallets-evm-wallets-magic.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/magic/dist/thirdweb-dev-wallets-evm-wallets-magic.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/magic/dist/thirdweb-dev-wallets-evm-wallets-magic.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/trust\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/trust/dist/thirdweb-dev-wallets-evm-wallets-trust.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/trust/dist/thirdweb-dev-wallets-evm-wallets-trust.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/trust/dist/thirdweb-dev-wallets-evm-wallets-trust.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/blocto\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/blocto/dist/thirdweb-dev-wallets-evm-wallets-blocto.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/blocto/dist/thirdweb-dev-wallets-evm-wallets-blocto.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/blocto/dist/thirdweb-dev-wallets-evm-wallets-blocto.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/ethers\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/ethers/dist/thirdweb-dev-wallets-evm-wallets-ethers.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/ethers/dist/thirdweb-dev-wallets-evm-wallets-ethers.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/ethers/dist/thirdweb-dev-wallets-evm-wallets-ethers.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/signer\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/signer/dist/thirdweb-dev-wallets-evm-wallets-signer.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/signer/dist/thirdweb-dev-wallets-evm-wallets-signer.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/signer/dist/thirdweb-dev-wallets-evm-wallets-signer.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/zerion\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/zerion/dist/thirdweb-dev-wallets-evm-wallets-zerion.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/zerion/dist/thirdweb-dev-wallets-evm-wallets-zerion.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/zerion/dist/thirdweb-dev-wallets-evm-wallets-zerion.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/aws-kms\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/aws-kms/dist/thirdweb-dev-wallets-evm-wallets-aws-kms.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/aws-kms/dist/thirdweb-dev-wallets-evm-wallets-aws-kms.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/aws-kms/dist/thirdweb-dev-wallets-evm-wallets-aws-kms.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/gcp-kms\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/gcp-kms/dist/thirdweb-dev-wallets-evm-wallets-gcp-kms.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/gcp-kms/dist/thirdweb-dev-wallets-evm-wallets-gcp-kms.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/gcp-kms/dist/thirdweb-dev-wallets-evm-wallets-gcp-kms.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/phantom\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/phantom/dist/thirdweb-dev-wallets-evm-wallets-phantom.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/phantom/dist/thirdweb-dev-wallets-evm-wallets-phantom.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/phantom/dist/thirdweb-dev-wallets-evm-wallets-phantom.cjs.js\"\n\t\t},\n\t\t\"./solana/wallets/base\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./solana/wallets/base/dist/thirdweb-dev-wallets-solana-wallets-base.browser.esm.js\",\n\t\t\t\t\"default\": \"./solana/wallets/base/dist/thirdweb-dev-wallets-solana-wallets-base.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./solana/wallets/base/dist/thirdweb-dev-wallets-solana-wallets-base.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/abstract\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/injected\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/injected/dist/thirdweb-dev-wallets-evm-wallets-injected.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/injected/dist/thirdweb-dev-wallets-evm-wallets-injected.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/injected/dist/thirdweb-dev-wallets-evm-wallets-injected.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/metamask\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/metamask/dist/thirdweb-dev-wallets-evm-wallets-metamask.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/metamask/dist/thirdweb-dev-wallets-evm-wallets-metamask.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/metamask/dist/thirdweb-dev-wallets-evm-wallets-metamask.cjs.js\"\n\t\t},\n\t\t\"./solana/wallets/signer\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./solana/wallets/signer/dist/thirdweb-dev-wallets-solana-wallets-signer.browser.esm.js\",\n\t\t\t\t\"default\": \"./solana/wallets/signer/dist/thirdweb-dev-wallets-solana-wallets-signer.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./solana/wallets/signer/dist/thirdweb-dev-wallets-solana-wallets-signer.cjs.js\"\n\t\t},\n\t\t\"./solana/wallets/keypair\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./solana/wallets/keypair/dist/thirdweb-dev-wallets-solana-wallets-keypair.browser.esm.js\",\n\t\t\t\t\"default\": \"./solana/wallets/keypair/dist/thirdweb-dev-wallets-solana-wallets-keypair.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./solana/wallets/keypair/dist/thirdweb-dev-wallets-solana-wallets-keypair.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/private-key\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/private-key/dist/thirdweb-dev-wallets-evm-wallets-private-key.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/private-key/dist/thirdweb-dev-wallets-evm-wallets-private-key.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/private-key/dist/thirdweb-dev-wallets-evm-wallets-private-key.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/local-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/local-wallet/dist/thirdweb-dev-wallets-evm-wallets-local-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/local-wallet/dist/thirdweb-dev-wallets-evm-wallets-local-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/local-wallet/dist/thirdweb-dev-wallets-evm-wallets-local-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/paper-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/smart-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-smart-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-smart-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-smart-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/safe\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/frame\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/magic\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/paper\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/trust\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/rainbow-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/rainbow-wallet/dist/thirdweb-dev-wallets-evm-wallets-rainbow-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/rainbow-wallet/dist/thirdweb-dev-wallets-evm-wallets-rainbow-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/rainbow-wallet/dist/thirdweb-dev-wallets-evm-wallets-rainbow-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/wallet-connect\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.cjs.js\"\n\t\t},\n\t\t\"./solana/wallets/private-key\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./solana/wallets/private-key/dist/thirdweb-dev-wallets-solana-wallets-private-key.browser.esm.js\",\n\t\t\t\t\"default\": \"./solana/wallets/private-key/dist/thirdweb-dev-wallets-solana-wallets-private-key.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./solana/wallets/private-key/dist/thirdweb-dev-wallets-solana-wallets-private-key.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/blocto\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/signer\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/zerion\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/zerion/dist/thirdweb-dev-wallets-evm-connectors-zerion.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/zerion/dist/thirdweb-dev-wallets-evm-connectors-zerion.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/zerion/dist/thirdweb-dev-wallets-evm-connectors-zerion.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/coinbase-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/embedded-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/embedded-wallet/dist/thirdweb-dev-wallets-evm-wallets-embedded-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/embedded-wallet/dist/thirdweb-dev-wallets-evm-wallets-embedded-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/embedded-wallet/dist/thirdweb-dev-wallets-evm-wallets-embedded-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/phantom\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/phantom/dist/thirdweb-dev-wallets-evm-connectors-phantom.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/phantom/dist/thirdweb-dev-wallets-evm-connectors-phantom.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/phantom/dist/thirdweb-dev-wallets-evm-connectors-phantom.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/rainbow\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/rainbow/dist/thirdweb-dev-wallets-evm-connectors-rainbow.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/rainbow/dist/thirdweb-dev-wallets-evm-connectors-rainbow.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/rainbow/dist/thirdweb-dev-wallets-evm-connectors-rainbow.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/injected\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/metamask\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/local-wallet-node\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/local-wallet-node/dist/thirdweb-dev-wallets-evm-wallets-local-wallet-node.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/local-wallet-node/dist/thirdweb-dev-wallets-evm-wallets-local-wallet-node.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/local-wallet-node/dist/thirdweb-dev-wallets-evm-wallets-local-wallet-node.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/wallet-connect-v1\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect-v1.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect-v1.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect-v1.cjs.js\"\n\t\t},\n\t\t\"./evm/wallets/aws-secrets-manager\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/wallets/aws-secrets-manager/dist/thirdweb-dev-wallets-evm-wallets-aws-secrets-manager.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/wallets/aws-secrets-manager/dist/thirdweb-dev-wallets-evm-wallets-aws-secrets-manager.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/wallets/aws-secrets-manager/dist/thirdweb-dev-wallets-evm-wallets-aws-secrets-manager.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/local-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/local-wallet/dist/thirdweb-dev-wallets-evm-connectors-local-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/local-wallet/dist/thirdweb-dev-wallets-evm-connectors-local-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/local-wallet/dist/thirdweb-dev-wallets-evm-connectors-local-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/smart-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/wallet-connect\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/coinbase-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/embedded-wallet\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/wallet-connect-v1\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.cjs.js\"\n\t\t},\n\t\t\"./evm/connectors/embedded-wallet/implementations\": {\n\t\t\tmodule: {\n\t\t\t\tbrowser: \"./evm/connectors/embedded-wallet/implementations/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet-implementations.browser.esm.js\",\n\t\t\t\t\"default\": \"./evm/connectors/embedded-wallet/implementations/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet-implementations.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./evm/connectors/embedded-wallet/implementations/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet-implementations.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\"\n\t},\n\trepository: \"https://github.com/thirdweb-dev/js/tree/main/packages/wallets\",\n\tlicense: \"Apache-2.0\",\n\tbugs: {\n\t\turl: \"https://github.com/thirdweb-dev/js/issues\"\n\t},\n\tauthor: \"thirdweb eng <eng@thirdweb.com>\",\n\tfiles: [\n\t\t\"dist/\",\n\t\t\"evm/\",\n\t\t\"solana/\"\n\t],\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"index.ts\",\n\t\t\t\"evm/index.ts\",\n\t\t\t\"evm/connectors/*/index.ts\",\n\t\t\t\"evm/connectors/embedded-wallet/implementations/index.ts\",\n\t\t\t\"evm/wallets/**\",\n\t\t\t\"solana/index.ts\",\n\t\t\t\"solana/wallets/**\"\n\t\t],\n\t\texports: {\n\t\t\tenvConditions: [\n\t\t\t\t\"browser\"\n\t\t\t]\n\t\t}\n\t},\n\tsideEffects: false,\n\tdependencies: {\n\t\t\"@account-abstraction/contracts\": \"^0.5.0\",\n\t\t\"@account-abstraction/sdk\": \"^0.5.0\",\n\t\t\"@account-abstraction/utils\": \"^0.5.0\",\n\t\t\"@blocto/sdk\": \"^0.5.4\",\n\t\t\"@coinbase/wallet-sdk\": \"^3.7.1\",\n\t\t\"@magic-ext/connect\": \"^6.7.2\",\n\t\t\"@magic-ext/oauth\": \"^7.6.2\",\n\t\t\"@magic-sdk/provider\": \"^13.6.2\",\n\t\t\"@paperxyz/embedded-wallet-service-sdk\": \"^1.2.4\",\n\t\t\"@paperxyz/sdk-common-utilities\": \"^0.1.0\",\n\t\t\"@safe-global/safe-core-sdk\": \"^3.3.4\",\n\t\t\"@safe-global/safe-ethers-adapters\": \"0.1.0-alpha.17\",\n\t\t\"@safe-global/safe-ethers-lib\": \"^1.9.4\",\n\t\t\"@thirdweb-dev/chains\": \"workspace:*\",\n\t\t\"@thirdweb-dev/contracts-js\": \"workspace:*\",\n\t\t\"@thirdweb-dev/sdk\": \"workspace:*\",\n\t\t\"@walletconnect/core\": \"^2.9.1\",\n\t\t\"@walletconnect/ethereum-provider\": \"^2.9.1\",\n\t\t\"@walletconnect/jsonrpc-utils\": \"^1.0.8\",\n\t\t\"@walletconnect/modal\": \"^2.6.1\",\n\t\t\"@walletconnect/types\": \"^2.9.1\",\n\t\t\"@walletconnect/utils\": \"^2.9.1\",\n\t\t\"@walletconnect/web3wallet\": \"^1.8.7\",\n\t\tbuffer: \"^6.0.3\",\n\t\t\"cross-fetch\": \"^3.1.8\",\n\t\t\"crypto-js\": \"^4.1.1\",\n\t\t\"eth-provider\": \"^0.13.6\",\n\t\teventemitter3: \"^5.0.1\",\n\t\t\"magic-sdk\": \"^13.6.2\",\n\t\t\"web3-core\": \"1.5.2\"\n\t},\n\tpeerDependencies: {\n\t\t\"@aws-sdk/client-secrets-manager\": \"^3.256.0\",\n\t\t\"@noble/ed25519\": \"^1.7.1\",\n\t\t\"@solana/web3.js\": \"^1.73.0\",\n\t\tbs58: \"^5.0.0\",\n\t\tethers: \"^5.7.2\",\n\t\t\"ethers-aws-kms-signer\": \"^1.3.2\",\n\t\t\"ethers-gcp-kms-signer\": \"^1.1.6\",\n\t\ttweetnacl: \"^1.0.3\"\n\t},\n\tpeerDependenciesMeta: {\n\t\ttweetnacl: {\n\t\t\toptional: true\n\t\t},\n\t\t\"@aws-sdk/client-secrets-manager\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"ethers-aws-kms-signer\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"@noble/ed25519\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"@solana/web3.js\": {\n\t\t\toptional: true\n\t\t},\n\t\tbs58: {\n\t\t\toptional: true\n\t\t},\n\t\tethers: {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@aws-sdk/client-secrets-manager\": \"^3.378.0\",\n\t\t\"@babel/plugin-proposal-class-properties\": \"7.18.6\",\n\t\t\"@babel/plugin-transform-flow-strip-types\": \"^7.22.5\",\n\t\t\"@babel/plugin-transform-private-methods\": \"7.22.5\",\n\t\t\"@noble/ed25519\": \"^1.7.1\",\n\t\t\"@preconstruct/cli\": \"2.7.0\",\n\t\t\"@solana/web3.js\": \"^1.62.0\",\n\t\t\"@thirdweb-dev/tsconfig\": \"workspace:*\",\n\t\t\"@types/crypto-js\": \"^4.1.1\",\n\t\tabitype: \"^0.2.5\",\n\t\t\"babel-plugin-transform-inline-environment-variables\": \"^0.4.4\",\n\t\tbs58: \"^5.0.0\",\n\t\t\"cross-env\": \"^7.0.3\",\n\t\t\"eslint-config-thirdweb\": \"workspace:*\",\n\t\t\"eslint-plugin-better-tree-shaking\": \"0.0.3\",\n\t\t\"ethereum-provider\": \"^0.7.7\",\n\t\tethers: \"^5.7.2\",\n\t\t\"ethers-aws-kms-signer\": \"^1.3.2\",\n\t\t\"ethers-gcp-kms-signer\": \"^1.1.6\",\n\t\ttweetnacl: \"^1.0.3\",\n\t\ttypescript: \"^5.1.6\"\n\t},\n\tscripts: {\n\t\tformat: \"prettier --write 'src/**/*'\",\n\t\tlint: \"eslint src/\",\n\t\tfix: \"eslint src/ --fix\",\n\t\tclean: \"rm -rf dist/\",\n\t\tbuild: \"tsc && cross-env THIRDWEB_EWS_SDK_VERSION=$npm_package_version preconstruct build\",\n\t\t\"preconstruct:fix\": \"preconstruct fix\",\n\t\tpush: \"yalc push\"\n\t}\n};\n\nclass HttpRpcClient {\n  constructor(bundlerUrl, entryPointAddress, chainId, clientId, secretKey) {\n    this.bundlerUrl = bundlerUrl;\n    this.entryPointAddress = entryPointAddress;\n    this.chainId = chainId;\n    const headers = {};\n    if (isTwUrl(this.bundlerUrl)) {\n      const bundleId = typeof globalThis !== \"undefined\" && \"APP_BUNDLE_ID\" in globalThis ? globalThis.APP_BUNDLE_ID : undefined;\n      if (secretKey) {\n        headers[\"x-secret-key\"] = secretKey;\n      } else if (clientId) {\n        headers[\"x-client-id\"] = clientId;\n        if (bundleId) {\n          headers[\"x-bundle-id\"] = bundleId;\n        }\n      }\n\n      // Dashboard token\n      if (typeof globalThis !== \"undefined\" && \"TW_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = `Bearer ${globalThis.TW_AUTH_TOKEN}`;\n      }\n\n      // CLI token\n      if (typeof globalThis !== \"undefined\" && \"TW_CLI_AUTH_TOKEN\" in globalThis && typeof globalThis.TW_CLI_AUTH_TOKEN === \"string\") {\n        headers[\"authorization\"] = `Bearer ${globalThis.TW_CLI_AUTH_TOKEN}`;\n        headers[\"x-authorize-wallet\"] = \"true\";\n      }\n      headers[\"x-sdk-version\"] = pkg.version;\n      headers[\"x-sdk-name\"] = pkg.name;\n      headers[\"x-sdk-platform\"] = bundleId ? \"react-native\" : window.bridge !== undefined ? \"webGL\" : \"browser\" ;\n    }\n    this.userOpJsonRpcProvider = new providers.JsonRpcProvider({\n      url: this.bundlerUrl,\n      headers\n    }, {\n      name: \"Connected bundler network\",\n      chainId\n    });\n    this.initializing = this.validateChainId();\n  }\n  async validateChainId() {\n    // validate chainId is in sync with expected chainid\n    const chain = await this.userOpJsonRpcProvider.send(\"eth_chainId\", []);\n    const bundlerChain = parseInt(chain);\n    if (bundlerChain !== this.chainId) {\n      throw new Error(`bundler ${this.bundlerUrl} is on chainId ${bundlerChain}, but provider is on chainId ${this.chainId}`);\n    }\n  }\n\n  /**\n   * send a UserOperation to the bundler\n   * @param userOp1\n   * @return userOpHash the id of this operation, for getUserOperationTransaction\n   */\n  async sendUserOpToBundler(userOp1) {\n    await this.initializing;\n    const hexifiedUserOp = deepHexlify(await utils.resolveProperties(userOp1));\n    const jsonRequestData = [hexifiedUserOp, this.entryPointAddress];\n    await this.printUserOperation(\"eth_sendUserOperation\", jsonRequestData);\n    return await this.userOpJsonRpcProvider.send(\"eth_sendUserOperation\", [hexifiedUserOp, this.entryPointAddress]);\n  }\n  async estimateUserOpGas(userOp1) {\n    await this.initializing;\n    const hexifiedUserOp = deepHexlify(await utils.resolveProperties(userOp1));\n    const jsonRequestData = [hexifiedUserOp, this.entryPointAddress];\n    await this.printUserOperation(\"eth_estimateUserOperationGas\", jsonRequestData);\n    return await this.userOpJsonRpcProvider.send(\"eth_estimateUserOperationGas\", [hexifiedUserOp, this.entryPointAddress]);\n  }\n  async printUserOperation(method, _ref) {\n    {\n      return;\n    }\n  }\n}\n\n/**\n * wrap an existing provider to tunnel requests through Account Abstraction.\n * @param originalProvider the normal provider\n * @param config see ClientConfig for more info\n * @param originalSigner use this signer as the owner. of this wallet. By default, use the provider's signer\n */\nasync function create4337Provider(config, accountApi, originalProvider) {\n  const entryPoint = EntryPoint__factory.connect(config.entryPointAddress, originalProvider);\n  const chainId = (await originalProvider.getNetwork()).chainId;\n  const httpRpcClient = new HttpRpcClient(config.bundlerUrl, config.entryPointAddress, chainId, config.clientId, config.secretKey);\n  return await new ERC4337EthersProvider(chainId, config, config.localSigner, originalProvider, httpRpcClient, entryPoint, accountApi).init();\n}\n\nconst ENTRYPOINT_ADDRESS = \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\"; // v0.6\n\nconst ACCOUNT_CORE_ABI = [{\n  type: \"constructor\",\n  name: \"\",\n  inputs: [{\n    type: \"address\",\n    name: \"_entrypoint\",\n    internalType: \"contract IEntryPoint\"\n  }, {\n    type: \"address\",\n    name: \"_factory\",\n    internalType: \"address\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"event\",\n  name: \"AdminUpdated\",\n  inputs: [{\n    type: \"address\",\n    name: \"signer\",\n    indexed: true,\n    internalType: \"address\"\n  }, {\n    type: \"bool\",\n    name: \"isAdmin\",\n    indexed: false,\n    internalType: \"bool\"\n  }],\n  outputs: [],\n  anonymous: false\n}, {\n  type: \"event\",\n  name: \"ContractURIUpdated\",\n  inputs: [{\n    type: \"string\",\n    name: \"prevURI\",\n    indexed: false,\n    internalType: \"string\"\n  }, {\n    type: \"string\",\n    name: \"newURI\",\n    indexed: false,\n    internalType: \"string\"\n  }],\n  outputs: [],\n  anonymous: false\n}, {\n  type: \"event\",\n  name: \"Initialized\",\n  inputs: [{\n    type: \"uint8\",\n    name: \"version\",\n    indexed: false,\n    internalType: \"uint8\"\n  }],\n  outputs: [],\n  anonymous: false\n}, {\n  type: \"event\",\n  name: \"SignerPermissionsUpdated\",\n  inputs: [{\n    type: \"address\",\n    name: \"authorizingSigner\",\n    indexed: true,\n    internalType: \"address\"\n  }, {\n    type: \"address\",\n    name: \"targetSigner\",\n    indexed: true,\n    internalType: \"address\"\n  }, {\n    type: \"tuple\",\n    name: \"permissions\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"bytes32\",\n      name: \"uid\",\n      internalType: \"bytes32\"\n    }],\n    indexed: false,\n    internalType: \"struct IAccountPermissions.SignerPermissionRequest\"\n  }],\n  outputs: [],\n  anonymous: false\n}, {\n  type: \"function\",\n  name: \"addDeposit\",\n  inputs: [],\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  name: \"contractURI\",\n  inputs: [],\n  outputs: [{\n    type: \"string\",\n    name: \"\",\n    internalType: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"entryPoint\",\n  inputs: [],\n  outputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"contract IEntryPoint\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"execute\",\n  inputs: [{\n    type: \"address\",\n    name: \"_target\",\n    internalType: \"address\"\n  }, {\n    type: \"uint256\",\n    name: \"_value\",\n    internalType: \"uint256\"\n  }, {\n    type: \"bytes\",\n    name: \"_calldata\",\n    internalType: \"bytes\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"executeBatch\",\n  inputs: [{\n    type: \"address[]\",\n    name: \"_target\",\n    internalType: \"address[]\"\n  }, {\n    type: \"uint256[]\",\n    name: \"_value\",\n    internalType: \"uint256[]\"\n  }, {\n    type: \"bytes[]\",\n    name: \"_calldata\",\n    internalType: \"bytes[]\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"factory\",\n  inputs: [],\n  outputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getAllActiveSigners\",\n  inputs: [],\n  outputs: [{\n    type: \"tuple[]\",\n    name: \"signers\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"startTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"endTimestamp\",\n      internalType: \"uint128\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissions[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getAllAdmins\",\n  inputs: [],\n  outputs: [{\n    type: \"address[]\",\n    name: \"\",\n    internalType: \"address[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getAllSigners\",\n  inputs: [],\n  outputs: [{\n    type: \"tuple[]\",\n    name: \"signers\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"startTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"endTimestamp\",\n      internalType: \"uint128\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissions[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getDeposit\",\n  inputs: [],\n  outputs: [{\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getNonce\",\n  inputs: [],\n  outputs: [{\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"getPermissionsForSigner\",\n  inputs: [{\n    type: \"address\",\n    name: \"signer\",\n    internalType: \"address\"\n  }],\n  outputs: [{\n    type: \"tuple\",\n    name: \"\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"startTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"endTimestamp\",\n      internalType: \"uint128\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissions\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"initialize\",\n  inputs: [{\n    type: \"address\",\n    name: \"_defaultAdmin\",\n    internalType: \"address\"\n  }, {\n    type: \"bytes\",\n    name: \"\",\n    internalType: \"bytes\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"isActiveSigner\",\n  inputs: [{\n    type: \"address\",\n    name: \"signer\",\n    internalType: \"address\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"isAdmin\",\n  inputs: [{\n    type: \"address\",\n    name: \"_account\",\n    internalType: \"address\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"isValidSignature\",\n  inputs: [{\n    type: \"bytes32\",\n    name: \"_hash\",\n    internalType: \"bytes32\"\n  }, {\n    type: \"bytes\",\n    name: \"_signature\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bytes4\",\n    name: \"magicValue\",\n    internalType: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"isValidSigner\",\n  inputs: [{\n    type: \"address\",\n    name: \"_signer\",\n    internalType: \"address\"\n  }, {\n    type: \"tuple\",\n    name: \"_userOp\",\n    components: [{\n      type: \"address\",\n      name: \"sender\",\n      internalType: \"address\"\n    }, {\n      type: \"uint256\",\n      name: \"nonce\",\n      internalType: \"uint256\"\n    }, {\n      type: \"bytes\",\n      name: \"initCode\",\n      internalType: \"bytes\"\n    }, {\n      type: \"bytes\",\n      name: \"callData\",\n      internalType: \"bytes\"\n    }, {\n      type: \"uint256\",\n      name: \"callGasLimit\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"verificationGasLimit\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"preVerificationGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"maxFeePerGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"maxPriorityFeePerGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"bytes\",\n      name: \"paymasterAndData\",\n      internalType: \"bytes\"\n    }, {\n      type: \"bytes\",\n      name: \"signature\",\n      internalType: \"bytes\"\n    }],\n    internalType: \"struct UserOperation\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"multicall\",\n  inputs: [{\n    type: \"bytes[]\",\n    name: \"data\",\n    internalType: \"bytes[]\"\n  }],\n  outputs: [{\n    type: \"bytes[]\",\n    name: \"results\",\n    internalType: \"bytes[]\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"onERC1155BatchReceived\",\n  inputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"uint256[]\",\n    name: \"\",\n    internalType: \"uint256[]\"\n  }, {\n    type: \"uint256[]\",\n    name: \"\",\n    internalType: \"uint256[]\"\n  }, {\n    type: \"bytes\",\n    name: \"\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bytes4\",\n    name: \"\",\n    internalType: \"bytes4\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"onERC1155Received\",\n  inputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }, {\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }, {\n    type: \"bytes\",\n    name: \"\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bytes4\",\n    name: \"\",\n    internalType: \"bytes4\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"onERC721Received\",\n  inputs: [{\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"address\",\n    name: \"\",\n    internalType: \"address\"\n  }, {\n    type: \"uint256\",\n    name: \"\",\n    internalType: \"uint256\"\n  }, {\n    type: \"bytes\",\n    name: \"\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bytes4\",\n    name: \"\",\n    internalType: \"bytes4\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"setAdmin\",\n  inputs: [{\n    type: \"address\",\n    name: \"_account\",\n    internalType: \"address\"\n  }, {\n    type: \"bool\",\n    name: \"_isAdmin\",\n    internalType: \"bool\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"setContractURI\",\n  inputs: [{\n    type: \"string\",\n    name: \"_uri\",\n    internalType: \"string\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"setPermissionsForSigner\",\n  inputs: [{\n    type: \"tuple\",\n    name: \"_req\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"bytes32\",\n      name: \"uid\",\n      internalType: \"bytes32\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissionRequest\"\n  }, {\n    type: \"bytes\",\n    name: \"_signature\",\n    internalType: \"bytes\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"supportsInterface\",\n  inputs: [{\n    type: \"bytes4\",\n    name: \"interfaceId\",\n    internalType: \"bytes4\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"\",\n    internalType: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"validateUserOp\",\n  inputs: [{\n    type: \"tuple\",\n    name: \"userOp\",\n    components: [{\n      type: \"address\",\n      name: \"sender\",\n      internalType: \"address\"\n    }, {\n      type: \"uint256\",\n      name: \"nonce\",\n      internalType: \"uint256\"\n    }, {\n      type: \"bytes\",\n      name: \"initCode\",\n      internalType: \"bytes\"\n    }, {\n      type: \"bytes\",\n      name: \"callData\",\n      internalType: \"bytes\"\n    }, {\n      type: \"uint256\",\n      name: \"callGasLimit\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"verificationGasLimit\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"preVerificationGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"maxFeePerGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint256\",\n      name: \"maxPriorityFeePerGas\",\n      internalType: \"uint256\"\n    }, {\n      type: \"bytes\",\n      name: \"paymasterAndData\",\n      internalType: \"bytes\"\n    }, {\n      type: \"bytes\",\n      name: \"signature\",\n      internalType: \"bytes\"\n    }],\n    internalType: \"struct UserOperation\"\n  }, {\n    type: \"bytes32\",\n    name: \"userOpHash\",\n    internalType: \"bytes32\"\n  }, {\n    type: \"uint256\",\n    name: \"missingAccountFunds\",\n    internalType: \"uint256\"\n  }],\n  outputs: [{\n    type: \"uint256\",\n    name: \"validationData\",\n    internalType: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  name: \"verifySignerPermissionRequest\",\n  inputs: [{\n    type: \"tuple\",\n    name: \"req\",\n    components: [{\n      type: \"address\",\n      name: \"signer\",\n      internalType: \"address\"\n    }, {\n      type: \"address[]\",\n      name: \"approvedTargets\",\n      internalType: \"address[]\"\n    }, {\n      type: \"uint256\",\n      name: \"nativeTokenLimitPerTransaction\",\n      internalType: \"uint256\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"permissionEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityStartTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"uint128\",\n      name: \"reqValidityEndTimestamp\",\n      internalType: \"uint128\"\n    }, {\n      type: \"bytes32\",\n      name: \"uid\",\n      internalType: \"bytes32\"\n    }],\n    internalType: \"struct IAccountPermissions.SignerPermissionRequest\"\n  }, {\n    type: \"bytes\",\n    name: \"signature\",\n    internalType: \"bytes\"\n  }],\n  outputs: [{\n    type: \"bool\",\n    name: \"success\",\n    internalType: \"bool\"\n  }, {\n    type: \"address\",\n    name: \"signer\",\n    internalType: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  name: \"withdrawDepositTo\",\n  inputs: [{\n    type: \"address\",\n    name: \"withdrawAddress\",\n    internalType: \"address payable\"\n  }, {\n    type: \"uint256\",\n    name: \"amount\",\n    internalType: \"uint256\"\n  }],\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"receive\",\n  name: \"\",\n  inputs: [],\n  outputs: [],\n  stateMutability: \"payable\"\n}];\n\n/**\n * Base class for all Smart Wallet ERC-4337 Clients to implement.\n * Subclass should inherit 5 methods to support a specific wallet contract:\n *\n * - getAccountInitCode - return the value to put into the \"initCode\" field, if the account is not yet deployed. should create the account instance using a factory contract.\n * - getNonce - return current account's nonce value\n * - encodeExecute - encode the call from entryPoint through our account to the target contract.\n * - signUserOpHash - sign the hash of a UserOp.\n *\n * The user can use the following APIs:\n * - createUnsignedUserOp - given \"target\" and \"calldata\", fill userOp to perform that operation from the account.\n * - createSignedUserOp - helper to call the above createUnsignedUserOp, and then extract the userOpHash and sign it\n */\nclass BaseAccountAPI {\n  // entryPoint connected to \"zero\" address. allowed to make static calls (e.g. to getSenderAddress)\n\n  /**\n   * base constructor.\n   * subclass SHOULD add parameters that define the owner (signer) of this wallet\n   */\n  constructor(params) {\n    _defineProperty(this, \"isPhantom\", true);\n    this.provider = params.provider;\n    this.overheads = params.overheads;\n    this.entryPointAddress = params.entryPointAddress;\n    this.accountAddress = params.accountAddress;\n    this.paymasterAPI = params.paymasterAPI;\n\n    // factory \"connect\" define the contract address. the contract \"connect\" defines the \"from\" address.\n    this.entryPointView = EntryPoint__factory.connect(params.entryPointAddress, params.provider).connect(ethers.constants.AddressZero);\n  }\n  async init() {\n    if ((await this.provider.getCode(this.entryPointAddress)) === \"0x\") {\n      throw new Error(`entryPoint not deployed at ${this.entryPointAddress}`);\n    }\n    await this.getAccountAddress();\n    return this;\n  }\n\n  /**\n   * return the value to put into the \"initCode\" field, if the contract is not yet deployed.\n   * this value holds the \"factory\" address, followed by this account's information\n   */\n\n  /**\n   * return current account's nonce.\n   */\n\n  /**\n   * encode the call from entryPoint through our account to the target contract.\n   * @param target\n   * @param value\n   * @param data\n   */\n\n  /**\n   * sign a userOp's hash (userOpHash).\n   * @param userOpHash\n   */\n\n  /**\n   * check if the contract is already deployed.\n   */\n  async checkAccountPhantom() {\n    if (!this.isPhantom) {\n      // already deployed. no need to check anymore.\n      return this.isPhantom;\n    }\n    const senderAddressCode = await this.provider.getCode(this.getAccountAddress());\n    if (senderAddressCode.length > 2) {\n      this.isPhantom = false;\n    }\n    return this.isPhantom;\n  }\n\n  /**\n   * calculate the account address even before it is deployed\n   */\n  async getCounterFactualAddress() {\n    const initCode = this.getAccountInitCode();\n    // use entryPoint to query account address (factory can provide a helper method to do the same, but\n    // this method attempts to be generic\n    try {\n      await this.entryPointView.callStatic.getSenderAddress(initCode);\n    } catch (e) {\n      return e.errorArgs.sender;\n    }\n    throw new Error(\"must handle revert\");\n  }\n\n  /**\n   * return initCode value to into the UserOp.\n   * (either deployment code, or empty hex if contract already deployed)\n   */\n  async getInitCode() {\n    if (await this.checkAccountPhantom()) {\n      return await this.getAccountInitCode();\n    }\n    return \"0x\";\n  }\n\n  /**\n   * return maximum gas used for verification.\n   * NOTE: createUnsignedUserOp will add to this value the cost of creation, if the contract is not yet created.\n   */\n  async getVerificationGasLimit() {\n    return 100000;\n  }\n\n  /**\n   * should cover cost of putting calldata on-chain, and some overhead.\n   * actual overhead depends on the expected bundle size\n   */\n  async getPreVerificationGas(userOp) {\n    const p = await utils.resolveProperties(userOp);\n    return calcPreVerificationGas(p, this.overheads);\n  }\n\n  /**\n   * ABI-encode a user operation. used for calldata cost estimation\n   */\n  packUserOp(userOp) {\n    return packUserOp(userOp, false);\n  }\n  async encodeUserOpCallDataAndGasLimit(detailsForUserOp, batched) {\n    function parseNumber(a) {\n      if (!a || a === \"\") {\n        return null;\n      }\n      return BigNumber.from(a.toString());\n    }\n    const value = parseNumber(detailsForUserOp.value) ?? BigNumber.from(0);\n    const callData = batched ? detailsForUserOp.data : await this.encodeExecute(detailsForUserOp.target, value, detailsForUserOp.data);\n    let callGasLimit;\n    const isPhantom = await this.checkAccountPhantom();\n    if (isPhantom) {\n      // when the account is not deployed yet, we simulate the call to the target contract directly\n      callGasLimit = await this.provider.estimateGas({\n        from: this.getAccountAddress(),\n        to: detailsForUserOp.target,\n        data: detailsForUserOp.data\n      });\n      // add 20% overhead for entrypoint checks\n      callGasLimit = callGasLimit.mul(120).div(100);\n      // if the estimation is too low, we use a fixed value of 500k\n      if (callGasLimit.lt(30000)) {\n        callGasLimit = BigNumber.from(500000);\n      }\n    } else {\n      callGasLimit = parseNumber(detailsForUserOp.gasLimit) ?? (await this.provider.estimateGas({\n        from: this.entryPointAddress,\n        to: this.getAccountAddress(),\n        data: callData\n      }));\n    }\n    return {\n      callData,\n      callGasLimit\n    };\n  }\n\n  /**\n   * return userOpHash for signing.\n   * This value matches entryPoint.getUserOpHash (calculated off-chain, to avoid a view call)\n   * @param userOp userOperation, (signature field ignored)\n   */\n  async getUserOpHash(userOp) {\n    const chainId = await this.provider.getNetwork().then(net => net.chainId);\n    return getUserOpHashV06(userOp, this.entryPointAddress, chainId);\n  }\n\n  /**\n   * return the account's address.\n   * this value is valid even before deploying the contract.\n   */\n  async getAccountAddress() {\n    if (!this.senderAddress) {\n      if (this.accountAddress) {\n        this.senderAddress = this.accountAddress;\n      } else {\n        this.senderAddress = await this.getCounterFactualAddress();\n      }\n    }\n    return this.senderAddress;\n  }\n  async estimateCreationGas(initCode) {\n    if (!initCode || initCode === \"0x\") {\n      return 0;\n    }\n    const deployerAddress = initCode.substring(0, 42);\n    const deployerCallData = \"0x\" + initCode.substring(42);\n    return await this.provider.estimateGas({\n      to: deployerAddress,\n      data: deployerCallData\n    });\n  }\n\n  /**\n   * create a UserOperation, filling all details (except signature)\n   * - if account is not yet created, add initCode to deploy it.\n   * - if gas or nonce are missing, read them from the chain (note that we can't fill gaslimit before the account is created)\n   * @param info\n   */\n  async createUnsignedUserOp(info, batched) {\n    const {\n      callData,\n      callGasLimit\n    } = await this.encodeUserOpCallDataAndGasLimit(info, batched);\n    const initCode = await this.getInitCode();\n    const initGas = await this.estimateCreationGas(initCode);\n    const verificationGasLimit = BigNumber.from(await this.getVerificationGasLimit()).add(initGas);\n    let {\n      maxFeePerGas,\n      maxPriorityFeePerGas\n    } = info;\n    if (!maxFeePerGas || !maxPriorityFeePerGas) {\n      const feeData = await getDynamicFeeData(this.provider);\n      if (!maxPriorityFeePerGas) {\n        maxPriorityFeePerGas = feeData.maxPriorityFeePerGas ?? undefined;\n      }\n      if (!maxFeePerGas) {\n        maxFeePerGas = feeData.maxFeePerGas ?? undefined;\n        const network = await this.provider.getNetwork();\n        const chainId = network.chainId;\n        if (chainId === Celo.chainId || chainId === CeloAlfajoresTestnet.chainId || chainId === CeloBaklavaTestnet.chainId) {\n          maxPriorityFeePerGas = maxFeePerGas;\n        }\n      }\n    }\n    const partialUserOp = {\n      sender: this.getAccountAddress(),\n      nonce: info.nonce ?? this.getNonce(),\n      initCode,\n      callData,\n      callGasLimit,\n      verificationGasLimit,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      paymasterAndData: \"0x\"\n    };\n    let paymasterAndData;\n    let userOp = partialUserOp;\n    if (this.paymasterAPI) {\n      // fill (partial) preVerificationGas (all except the cost of the generated paymasterAndData)\n      try {\n        // userOp.preVerificationGas contains a promise that will resolve to an error.\n        await ethers.utils.resolveProperties(userOp);\n        // eslint-disable-next-line no-empty\n      } catch (_) {}\n      const pmOp = {\n        sender: userOp.sender,\n        nonce: userOp.nonce,\n        initCode: userOp.initCode,\n        callData: userOp.callData,\n        callGasLimit: userOp.callGasLimit,\n        verificationGasLimit: userOp.verificationGasLimit,\n        maxFeePerGas: userOp.maxFeePerGas,\n        maxPriorityFeePerGas: userOp.maxPriorityFeePerGas,\n        // A dummy value here is required in order to calculate a correct preVerificationGas value.\n        paymasterAndData: DUMMY_PAYMASTER_AND_DATA,\n        signature: ethers.utils.hexlify(Buffer.alloc(SIG_SIZE, 1))\n      };\n      userOp = await ethers.utils.resolveProperties(pmOp);\n      const preVerificationGas = calcPreVerificationGas(userOp);\n      userOp.preVerificationGas = preVerificationGas;\n      paymasterAndData = await this.paymasterAPI.getPaymasterAndData(userOp);\n      if (paymasterAndData === \"0x\") {\n        paymasterAndData = undefined;\n      }\n    }\n    if (paymasterAndData) {\n      userOp.paymasterAndData = paymasterAndData;\n      return {\n        ...userOp,\n        signature: \"\"\n      };\n    } else {\n      const modifiedOp = {\n        ...userOp,\n        paymasterAndData: \"0x\"\n      };\n      modifiedOp.preVerificationGas = await this.getPreVerificationGas(modifiedOp);\n      return {\n        ...modifiedOp,\n        signature: \"\"\n      };\n    }\n  }\n\n  /**\n   * Sign the filled userOp.\n   * @param userOp the UserOperation to sign (with signature field ignored)\n   */\n  async signUserOp(userOp) {\n    const userOpHash = await this.getUserOpHash(userOp);\n    const signature = this.signUserOpHash(userOpHash);\n    return {\n      ...userOp,\n      signature\n    };\n  }\n\n  /**\n   * helper method: create and sign a user operation.\n   * @param info transaction details for the userOp\n   */\n  async createSignedUserOp(info, batched) {\n    return await this.signUserOp(await this.createUnsignedUserOp(info, batched));\n  }\n\n  /**\n   * get the transaction that has this userOpHash mined, or null if not found\n   * @param userOpHash returned by sendUserOpToBundler (or by getUserOpHash..)\n   * @param timeout stop waiting after this timeout\n   * @param interval time to wait between polls.\n   * @return the transactionHash this userOp was mined, or null if not found.\n   */\n  async getUserOpReceipt(userOpHash) {\n    let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30000;\n    let interval = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5000;\n    const endtime = Date.now() + timeout;\n    while (Date.now() < endtime) {\n      const events = await this.entryPointView.queryFilter(this.entryPointView.filters.UserOperationEvent(userOpHash));\n      if (events[0]) {\n        return events[0].transactionHash;\n      }\n      await new Promise(resolve => setTimeout(resolve, interval));\n    }\n    return null;\n  }\n}\n\nclass AccountAPI extends BaseAccountAPI {\n  constructor(params, originalProvider) {\n    super({\n      ...params,\n      provider: originalProvider\n    });\n    this.params = params;\n    // Technically dont need the signer here, but we need to encode/estimate gas with it so a signer is required\n    // We don't want to use the localSigner directly since it might be connected to another chain\n    // so we just use the public hardhat pkey instead\n    this.sdk = ThirdwebSDK.fromPrivateKey(LOCAL_NODE_PKEY, params.chain, {\n      clientId: params.clientId,\n      secretKey: params.secretKey\n    });\n  }\n  async getChainId() {\n    return await this.provider.getNetwork().then(n => n.chainId);\n  }\n  async getAccountContract() {\n    if (!this.accountContract) {\n      if (this.params.accountInfo?.abi) {\n        this.accountContract = await this.sdk.getContract(await this.getAccountAddress(), this.params.accountInfo.abi);\n      } else {\n        this.accountContract = await this.sdk.getContract(await this.getAccountAddress(), ACCOUNT_CORE_ABI);\n      }\n    }\n    return this.accountContract;\n  }\n  async getAccountInitCode() {\n    const factory = await this.getFactoryContract();\n    console.log(\"Deploying smart wallet via factory\");\n    const localSigner = await this.params.localSigner.getAddress();\n    const tx = await this.params.factoryInfo.createAccount(factory, localSigner);\n    try {\n      console.log(\"Cost to deploy smart wallet: \", (await tx.estimateGasCost()).ether, \"ETH\");\n    } catch (e) {\n      console.error(\"Cost to deploy smart wallet: unknown\", e);\n    }\n    return utils.hexConcat([factory.getAddress(), tx.encode()]);\n  }\n  async getFactoryContract() {\n    if (this.factoryContract) {\n      return this.factoryContract;\n    }\n    if (this.params.factoryInfo?.abi) {\n      this.factoryContract = await this.sdk.getContract(this.params.factoryAddress, this.params.factoryInfo.abi);\n    } else {\n      this.factoryContract = await this.sdk.getContract(this.params.factoryAddress);\n    }\n    return this.factoryContract;\n  }\n  async getCounterFactualAddress() {\n    if (this.params.accountAddress) {\n      return this.params.accountAddress;\n    }\n    const factory = await this.getFactoryContract();\n    const localSigner = await this.params.localSigner.getAddress();\n    return this.params.factoryInfo.getAccountAddress(factory, localSigner);\n  }\n  async getNonce() {\n    if (await this.checkAccountPhantom()) {\n      return BigNumber.from(0);\n    }\n    const accountContract = await this.getAccountContract();\n    return this.params.accountInfo.getNonce(accountContract);\n  }\n  async encodeExecute(target, value, data) {\n    const accountContract = await this.getAccountContract();\n    const tx = await this.params.accountInfo.execute(accountContract, target, value, data);\n    return tx.encode();\n  }\n  async encodeExecuteBatch(targets, values, datas) {\n    const accountContract = await this.getAccountContract();\n    const tx = await accountContract.prepare(\"executeBatch\", [targets, values, datas]);\n    return tx.encode();\n  }\n  async signUserOpHash(userOpHash) {\n    return await this.params.localSigner.signMessage(utils.arrayify(userOpHash));\n  }\n  async isAcountDeployed() {\n    return !(await this.checkAccountPhantom());\n  }\n}\n\nclass SmartWalletConnector extends Connector {\n  constructor(config) {\n    super();\n    this.config = config;\n  }\n  async initialize(params) {\n    const config = this.config;\n    const originalProvider = getChainProvider(config.chain, {\n      clientId: config.clientId,\n      secretKey: config.secretKey\n    });\n    const chainSlug = await this.getChainSlug(config.chain, originalProvider);\n    const bundlerUrl = this.config.bundlerUrl || `https://${chainSlug}.bundler.thirdweb.com`;\n    const paymasterUrl = this.config.paymasterUrl || `https://${chainSlug}.bundler.thirdweb.com`;\n    const entryPointAddress = config.entryPointAddress || ENTRYPOINT_ADDRESS;\n    const localSigner = await params.personalWallet.getSigner();\n    const providerConfig = {\n      chain: config.chain,\n      localSigner,\n      entryPointAddress,\n      bundlerUrl,\n      paymasterAPI: this.config.gasless ? this.config.paymasterAPI ? this.config.paymasterAPI : getVerifyingPaymaster(paymasterUrl, entryPointAddress, this.config.clientId, this.config.secretKey) : undefined,\n      factoryAddress: config.factoryAddress,\n      accountAddress: params.accountAddress,\n      factoryInfo: config.factoryInfo || this.defaultFactoryInfo(),\n      accountInfo: config.accountInfo || this.defaultAccountInfo(),\n      clientId: config.clientId,\n      secretKey: config.secretKey\n    };\n    this.personalWallet = params.personalWallet;\n    const accountApi = new AccountAPI(providerConfig, originalProvider);\n    this.aaProvider = await create4337Provider(providerConfig, accountApi, originalProvider);\n    this.accountApi = accountApi;\n  }\n  async connect(connectionArgs) {\n    await this.initialize(connectionArgs);\n    return await this.getAddress();\n  }\n  getProvider() {\n    if (!this.aaProvider) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    return Promise.resolve(this.aaProvider);\n  }\n  async getSigner() {\n    if (!this.aaProvider) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    return Promise.resolve(this.aaProvider.getSigner());\n  }\n  async getAddress() {\n    const signer = await this.getSigner();\n    return signer.getAddress();\n  }\n  async isConnected() {\n    try {\n      const address = await this.getAddress();\n      return !!address;\n    } catch (e) {\n      return false;\n    }\n  }\n  async disconnect() {\n    this.personalWallet = undefined;\n    this.aaProvider = undefined;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  async switchChain(chainId) {\n    // TODO implement chain switching\n    const provider = await this.getProvider();\n    const currentChainId = (await provider.getNetwork()).chainId;\n    if (currentChainId !== chainId) {\n      // only throw if actually trying to switch chains\n      throw new Error(\"Not supported.\");\n    }\n  }\n  setupListeners() {\n    return Promise.resolve();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateChains(chains) {}\n\n  /**\n   * Check whether the connected signer can execute a given transaction using the smart wallet.\n   * @param transaction the transaction to execute using the smart wallet.\n   * @returns whether the connected signer can execute the transaction using the smart wallet.\n   */\n  async hasPermissionToExecute(transaction) {\n    const accountContract = await this.getAccountContract();\n    const signer = await this.getSigner();\n    const signerAddress = await signer.getAddress();\n    const restrictions = (await accountContract.account.getAllSigners()).filter(item => ethers.utils.getAddress(item.signer) === ethers.utils.getAddress(signerAddress))[0]?.permissions;\n    if (!restrictions) {\n      return false;\n    }\n    return restrictions.approvedCallTargets.includes(transaction.getTarget());\n  }\n\n  /**\n   * Execute a single transaction\n   * @param transactions\n   * @returns the transaction receipt\n   */\n  async execute(transaction) {\n    const signer = await this.getSigner();\n    const tx = await signer.sendTransaction({\n      to: transaction.getTarget(),\n      data: transaction.encode(),\n      value: await transaction.getValue()\n    });\n    const receipt = await tx.wait();\n    return {\n      receipt\n    };\n  }\n\n  /**\n   * Execute multiple transactions in a single batch\n   * @param transactions\n   * @returns the transaction receipt\n   */\n  async executeBatch(transactions) {\n    if (!this.accountApi) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    const signer = await this.getSigner();\n    const targets = transactions.map(tx => tx.getTarget());\n    const data = transactions.map(tx => tx.encode());\n    const values = transactions.map(() => BigNumber.from(0)); // TODO check if we can handle multiple values\n    const callData = await this.accountApi.encodeExecuteBatch(targets, values, data);\n    const tx = await signer.sendTransaction({\n      to: await signer.getAddress(),\n      data: callData,\n      value: 0\n    }, true // batched tx flag\n    );\n\n    const receipt = await tx.wait();\n    return {\n      receipt\n    };\n  }\n\n  /**\n   * Manually deploy the smart wallet contract. If already deployed this will throw an error.\n   * Note that this is not necessary as the smart wallet will be deployed automatically on the first transaction the user makes.\n   * @returns the transaction receipt\n   */\n  async deploy() {\n    if (!this.accountApi) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    if (await this.accountApi.isAcountDeployed()) {\n      throw new Error(\"Smart wallet already deployed\");\n    }\n    const signer = await this.getSigner();\n    const tx = await signer.sendTransaction({\n      to: await signer.getAddress(),\n      data: \"0x\"\n    }, true // batched tx flag to avoid hitting the Router fallback method\n    );\n\n    const receipt = await tx.wait();\n    return {\n      receipt\n    };\n  }\n\n  /**\n   * Check if the smart wallet contract is deployed\n   * @returns true if the smart wallet contract is deployed\n   */\n  async isDeployed() {\n    if (!this.accountApi) {\n      throw new Error(\"Personal wallet not connected\");\n    }\n    return await this.accountApi.isAcountDeployed();\n  }\n  async deployIfNeeded() {\n    const isDeployed = await this.isDeployed();\n    if (!isDeployed) {\n      await this.deploy();\n    }\n  }\n  async grantPermissions(target, permissions) {\n    await this.deployIfNeeded();\n    const accountContract = await this.getAccountContract();\n    return accountContract.account.grantPermissions(target, permissions);\n  }\n  async revokePermissions(target) {\n    await this.deployIfNeeded();\n    const accountContract = await this.getAccountContract();\n    return accountContract.account.revokeAccess(target);\n  }\n  async addAdmin(target) {\n    await this.deployIfNeeded();\n    const accountContract = await this.getAccountContract();\n    return accountContract.account.grantAdminPermissions(target);\n  }\n  async removeAdmin(target) {\n    await this.deployIfNeeded();\n    const accountContract = await this.getAccountContract();\n    return accountContract.account.revokeAdminPermissions(target);\n  }\n  async getAllActiveSigners() {\n    const isDeployed = await this.isDeployed();\n    if (isDeployed) {\n      const accountContract = await this.getAccountContract();\n      return accountContract.account.getAllAdminsAndSigners();\n    } else {\n      const personalWallet = await this.personalWallet?.getSigner();\n      if (!personalWallet) {\n        throw new Error(\"Personal wallet not connected\");\n      }\n      return [{\n        isAdmin: true,\n        signer: await personalWallet.getAddress(),\n        permissions: {\n          startDate: new Date(0),\n          expirationDate: new Date(0),\n          nativeTokenLimitPerTransaction: BigNumber.from(0),\n          approvedCallTargets: []\n        }\n      }];\n    }\n  }\n\n  /**\n   * Get the underlying account contract of the smart wallet.\n   * @returns the account contract of the smart wallet.\n   */\n  async getAccountContract() {\n    const isDeployed = await this.isDeployed();\n    if (!isDeployed) {\n      throw new Error(\"Account contract is not deployed yet. You can deploy it manually using SmartWallet.deploy(), or by executing a transaction from this wallet.\");\n    }\n    // getting a new instance everytime\n    // to avoid caching issues pre/post deployment\n    const sdk = ThirdwebSDK.fromSigner(await this.getSigner(), this.config.chain, {\n      clientId: this.config.clientId,\n      secretKey: this.config.secretKey\n    });\n    if (this.config.accountInfo?.abi) {\n      return sdk.getContract(await this.getAddress(), this.config.accountInfo.abi);\n    } else {\n      return sdk.getContract(await this.getAddress());\n    }\n  }\n\n  /**\n   * Get the underlying account factory contract of the smart wallet.\n   * @returns the account factory contract.\n   */\n  async getFactoryContract() {\n    const sdk = ThirdwebSDK.fromSigner(await this.getSigner(), this.config.chain, {\n      clientId: this.config.clientId,\n      secretKey: this.config.secretKey\n    });\n    if (this.config.factoryInfo?.abi) {\n      return sdk.getContract(this.config.factoryAddress, this.config.factoryInfo.abi);\n    }\n    return sdk.getContract(this.config.factoryAddress);\n  }\n  defaultFactoryInfo() {\n    return {\n      createAccount: async (factory, owner) => {\n        return factory.prepare(\"createAccount\", [owner, ethers.utils.toUtf8Bytes(\"\")]);\n      },\n      getAccountAddress: async (factory, owner) => {\n        try {\n          return await factory.call(\"getAddress\", [owner, ethers.utils.toUtf8Bytes(\"\")]);\n        } catch (e) {\n          console.log(\"Falling back to old factory\");\n          // TODO remove after a few versions\n          return factory.call(\"getAddress\", [owner]);\n        }\n      }\n    };\n  }\n  defaultAccountInfo() {\n    return {\n      execute: async (account, target, value, data) => {\n        return account.prepare(\"execute\", [target, value, data]);\n      },\n      getNonce: async account => {\n        return account.call(\"getNonce\", []);\n      }\n    };\n  }\n  async getChainSlug(chainOrRpc, provider) {\n    if (typeof chainOrRpc === \"object\") {\n      return chainOrRpc.slug;\n    }\n    if (typeof chainOrRpc === \"number\") {\n      const chain = getChainByChainId(chainOrRpc);\n      return chain.slug;\n    }\n    if (typeof chainOrRpc === \"string\") {\n      if (chainOrRpc.startsWith(\"http\") || chainOrRpc.startsWith(\"ws\")) {\n        // if it's a url, try to get the chain id from the provider\n        const chainId = (await provider.getNetwork()).chainId;\n        const chain = getChainByChainId(chainId);\n        return chain.slug;\n      }\n      // otherwise its the network name\n      return chainOrRpc;\n    } else {\n      throw new Error(`Invalid network: ${chainOrRpc}`);\n    }\n  }\n}\n\nexport { SmartWalletConnector };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}