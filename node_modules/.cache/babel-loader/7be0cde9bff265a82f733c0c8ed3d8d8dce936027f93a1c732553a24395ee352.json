{"ast":null,"code":"import { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-a64268ca.browser.esm.js';\nimport { a as AbstractClientWallet } from '../../../../dist/base-402f7b12.browser.esm.js';\nimport '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport '../../abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js';\nimport 'ethers';\nimport 'eventemitter3';\nimport '@thirdweb-dev/sdk';\nclass PaperWallet extends AbstractClientWallet {\n  get walletName() {\n    return \"Paper Wallet\";\n  }\n  constructor(options) {\n    super(PaperWallet.id, {\n      ...options\n    });\n    if (options.paperClientId && options.paperClientId === \"uninitialized\") {\n      this.paperClientId = \"00000000-0000-0000-0000-000000000000\";\n      this.chain = options.chain;\n      return;\n    }\n    if (options.advancedOptions && options.advancedOptions?.recoveryShareManagement === \"USER_MANAGED\") {\n      // checks to see if we are trying to use USER_MANAGED with thirdweb client ID. If so, we throw an error.\n      if (options.paperClientId && !this.isClientIdLegacyPaper(options.paperClientId) || !options.paperClientId && options.clientId && !this.isClientIdLegacyPaper(options.clientId)) {\n        throw new Error('RecoveryShareManagement option \"USER_MANAGED\" is not supported with thirdweb client ID');\n      }\n    }\n    if (!options.clientId && !options.paperClientId) {\n      throw new Error(\"clientId or paperClientId is required\");\n    }\n    if (options.paperClientId && !this.isClientIdLegacyPaper(options.paperClientId)) {\n      throw new Error(\"paperClientId must be a legacy paper client ID\");\n    }\n    if (options.clientId && this.isClientIdLegacyPaper(options.clientId)) {\n      throw new Error(\"clientId must be a thirdweb client ID\");\n    }\n\n    // cast is okay because we assert that either clientId or paperClientId is defined above\n    this.paperClientId = options.paperClientId ?? options.clientId;\n    this.chain = options.chain;\n  }\n  isClientIdLegacyPaper(clientId) {\n    return clientId.indexOf(\"-\") > 0 && clientId.length === 36;\n  }\n  async getConnector() {\n    if (!this.connector) {\n      const {\n        PaperWalletConnector\n      } = await import('../../../connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.browser.esm.js');\n      this.connector = new PaperWalletConnector({\n        clientId: this.paperClientId,\n        chain: this.chain,\n        chains: this.chains,\n        advancedOptions: {\n          recoveryShareManagement: this.options?.advancedOptions?.recoveryShareManagement\n        },\n        styles: this.options?.styles\n      });\n    }\n    return this.connector;\n  }\n  getConnectParams() {\n    const connectParams = super.getConnectParams();\n    if (!connectParams) {\n      return undefined;\n    }\n\n    // do not return non-serializable params to make auto-connect work\n    if (typeof connectParams.googleLogin === \"object\") {\n      return {\n        ...connectParams,\n        googleLogin: true\n      };\n    }\n    return connectParams;\n  }\n  async getEmail() {\n    const connector = await this.getConnector();\n    return connector.getEmail();\n  }\n  async getPaperSDK() {\n    const connector = await this.getConnector();\n    return connector.getPaperSDK();\n  }\n}\n_defineProperty(PaperWallet, \"id\", walletIds.paper);\n_defineProperty(PaperWallet, \"meta\", {\n  name: \"Paper Wallet\",\n  iconURL: \"ipfs://QmNrLXtPoFrh4yjZbXui39zUMozS1oetpgU8dvZhFAxfRa/paper-logo-icon.svg\"\n});\nexport { PaperWallet };","map":{"version":3,"names":["_","_defineProperty","w","walletIds","a","AbstractClientWallet","PaperWallet","walletName","constructor","options","id","paperClientId","chain","advancedOptions","recoveryShareManagement","isClientIdLegacyPaper","clientId","Error","indexOf","length","getConnector","connector","PaperWalletConnector","chains","styles","getConnectParams","connectParams","undefined","googleLogin","getEmail","getPaperSDK","paper","name","iconURL"],"sources":["C:/Misc/Documents/Career/FinTech/BlockChain/FrontEnd/buildspace-dao-starter/node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/evm/wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-a64268ca.browser.esm.js';\nimport { a as AbstractClientWallet } from '../../../../dist/base-402f7b12.browser.esm.js';\nimport '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport '../../abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js';\nimport 'ethers';\nimport 'eventemitter3';\nimport '@thirdweb-dev/sdk';\n\nclass PaperWallet extends AbstractClientWallet {\n  get walletName() {\n    return \"Paper Wallet\";\n  }\n  constructor(options) {\n    super(PaperWallet.id, {\n      ...options\n    });\n    if (options.paperClientId && options.paperClientId === \"uninitialized\") {\n      this.paperClientId = \"00000000-0000-0000-0000-000000000000\";\n      this.chain = options.chain;\n      return;\n    }\n    if (options.advancedOptions && options.advancedOptions?.recoveryShareManagement === \"USER_MANAGED\") {\n      // checks to see if we are trying to use USER_MANAGED with thirdweb client ID. If so, we throw an error.\n      if (options.paperClientId && !this.isClientIdLegacyPaper(options.paperClientId) || !options.paperClientId && options.clientId && !this.isClientIdLegacyPaper(options.clientId)) {\n        throw new Error('RecoveryShareManagement option \"USER_MANAGED\" is not supported with thirdweb client ID');\n      }\n    }\n    if (!options.clientId && !options.paperClientId) {\n      throw new Error(\"clientId or paperClientId is required\");\n    }\n    if (options.paperClientId && !this.isClientIdLegacyPaper(options.paperClientId)) {\n      throw new Error(\"paperClientId must be a legacy paper client ID\");\n    }\n    if (options.clientId && this.isClientIdLegacyPaper(options.clientId)) {\n      throw new Error(\"clientId must be a thirdweb client ID\");\n    }\n\n    // cast is okay because we assert that either clientId or paperClientId is defined above\n    this.paperClientId = options.paperClientId ?? options.clientId;\n    this.chain = options.chain;\n  }\n  isClientIdLegacyPaper(clientId) {\n    return clientId.indexOf(\"-\") > 0 && clientId.length === 36;\n  }\n  async getConnector() {\n    if (!this.connector) {\n      const {\n        PaperWalletConnector\n      } = await import('../../../connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.browser.esm.js');\n      this.connector = new PaperWalletConnector({\n        clientId: this.paperClientId,\n        chain: this.chain,\n        chains: this.chains,\n        advancedOptions: {\n          recoveryShareManagement: this.options?.advancedOptions?.recoveryShareManagement\n        },\n        styles: this.options?.styles\n      });\n    }\n    return this.connector;\n  }\n  getConnectParams() {\n    const connectParams = super.getConnectParams();\n    if (!connectParams) {\n      return undefined;\n    }\n\n    // do not return non-serializable params to make auto-connect work\n    if (typeof connectParams.googleLogin === \"object\") {\n      return {\n        ...connectParams,\n        googleLogin: true\n      };\n    }\n    return connectParams;\n  }\n  async getEmail() {\n    const connector = await this.getConnector();\n    return connector.getEmail();\n  }\n  async getPaperSDK() {\n    const connector = await this.getConnector();\n    return connector.getPaperSDK();\n  }\n}\n_defineProperty(PaperWallet, \"id\", walletIds.paper);\n_defineProperty(PaperWallet, \"meta\", {\n  name: \"Paper Wallet\",\n  iconURL: \"ipfs://QmNrLXtPoFrh4yjZbXui39zUMozS1oetpgU8dvZhFAxfRa/paper-logo-icon.svg\"\n});\n\nexport { PaperWallet };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}