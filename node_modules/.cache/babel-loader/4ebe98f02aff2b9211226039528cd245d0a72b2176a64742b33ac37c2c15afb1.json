{"ast":null,"code":"var _jsxFileName = \"C:\\\\Misc\\\\Documents\\\\Career\\\\FinTech\\\\BlockChain\\\\FrontEnd\\\\buildspace-dao-starter\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useAddress, useNetwork, useContract, ConnectWallet, Web3Button, useNFTBalance } from '@thirdweb-dev/react';\nimport { ChainId } from '@thirdweb-dev/sdk';\nimport { useState, useEffect, useMemo } from 'react';\nimport { AddressZero } from '@ethersproject/constants';\nimport dotenv from 'dotenv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndotenv.config();\nconst App = () => {\n  _s();\n  const address = useAddress();\n  const network = useNetwork();\n  console.log('👋 Address:', address);\n  const editionDropAddress = process.env.EDITION_DROP_ADDRESS;\n  const {\n    contract: editionDrop\n  } = useContract(editionDropAddress, 'edition-drop');\n  const {\n    contract: token\n  } = useContract(process.env.TOKEN_ADDRESS, 'token');\n  const {\n    contract: vote\n  } = useContract(process.env.VOTE_ADDRESS, 'vote');\n  const {\n    data: nftBalance\n  } = useNFTBalance(editionDrop, address, '0');\n  const hasClaimedNFT = useMemo(() => {\n    return nftBalance && nftBalance.gt(0);\n  }, [nftBalance]);\n  const [memberTokenAmounts, setMemberTokenAmounts] = useState([]);\n  const [memberAddresses, setMemberAddresses] = useState([]);\n  const shortenAddress = str => {\n    return str.substring(0, 6) + '...' + str.substring(str.length - 4);\n  };\n  const [proposals, setProposals] = useState([]);\n  const [isVoting, setIsVoting] = useState(false);\n  const [hasVoted, setHasVoted] = useState(false);\n  useEffect(() => {\n    if (!hasClaimedNFT) {\n      return;\n    }\n    const getAllProposals = async () => {\n      try {\n        const proposals = await vote.getAll();\n        setProposals(proposals);\n        console.log('🌈 Proposals:', proposals);\n      } catch (error) {\n        console.log('failed to get proposals', error);\n      }\n    };\n    getAllProposals();\n  }, [hasClaimedNFT, vote]);\n  useEffect(() => {\n    if (!hasClaimedNFT) {\n      return;\n    }\n    if (!proposals.length) {\n      return;\n    }\n    const checkIfUserHasVoted = async () => {\n      try {\n        const hasVoted = await vote.hasVoted(proposals[0].proposalId, address);\n        setHasVoted(hasVoted);\n        if (hasVoted) {\n          console.log('🥵 User has already voted');\n        } else {\n          console.log('🙂 User has not voted yet');\n        }\n      } catch (error) {\n        console.error('Failed to check if wallet has voted', error);\n      }\n    };\n    checkIfUserHasVoted();\n  }, [hasClaimedNFT, proposals, address, vote]);\n  useEffect(() => {\n    if (!hasClaimedNFT) {\n      return;\n    }\n    const getAllAddresses = async () => {\n      try {\n        const memberAddresses = process.env.MEMBERS.split(',');\n        setMemberAddresses(memberAddresses);\n        console.log('🚀 Members addresses', memberAddresses);\n      } catch (error) {\n        console.error('failed to get member list', error);\n      }\n    };\n    getAllAddresses();\n  }, [hasClaimedNFT, editionDrop === null || editionDrop === void 0 ? void 0 : editionDrop.history]);\n  useEffect(() => {\n    if (!hasClaimedNFT) {\n      return;\n    }\n    const getAllBalances = async () => {\n      try {\n        const amounts = await (token === null || token === void 0 ? void 0 : token.history.getAllHolderBalances());\n        setMemberTokenAmounts(amounts);\n        console.log('👜 Amounts', amounts);\n      } catch (error) {\n        console.error('failed to get member balances', error);\n      }\n    };\n    getAllBalances();\n  }, [hasClaimedNFT, token === null || token === void 0 ? void 0 : token.history]);\n  const memberList = useMemo(() => {\n    return memberAddresses.map(address => {\n      const member = memberTokenAmounts === null || memberTokenAmounts === void 0 ? void 0 : memberTokenAmounts.find(({\n        holder\n      }) => holder === address);\n      return {\n        address,\n        tokenAmount: (member === null || member === void 0 ? void 0 : member.balance.displayValue) || '0'\n      };\n    });\n  }, [memberAddresses, memberTokenAmounts]);\n  if (address && (network === null || network === void 0 ? void 0 : network[0].data.chain.id) !== ChainId.Mumbai) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unsupported-network\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Please connect to Mumbai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This dapp only works on the Mumbai network, please switch networks in your connected wallet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n  if (!address) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"landing\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to DemonSlayerDAO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-hero\",\n        children: /*#__PURE__*/_jsxDEV(ConnectWallet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n  if (hasClaimedNFT) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"member-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDF6ADAO Member Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Congratulations on being a member\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Member List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Token Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: memberList.map(member => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: shortenAddress(member.address)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: member.tokenAmount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 23\n                  }, this)]\n                }, member.address, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Active Proposals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: async e => {\n              e.preventDefault();\n              e.stopPropagation();\n              setIsVoting(true);\n              const votes = proposals.map(proposal => {\n                const voteResult = {\n                  proposalId: proposal.proposalId,\n                  vote: 2\n                };\n                proposal.votes.forEach(vote => {\n                  const elem = document.getElementById(proposal.proposalId + '-' + vote.type);\n                  if (elem.checked) {\n                    voteResult.vote = vote.type;\n                    return;\n                  }\n                });\n                return voteResult;\n              });\n              try {\n                const delegation = await token.getDelegationOf(address);\n                if (delegation === AddressZero) {\n                  await token.delegateTo(address);\n                }\n                try {\n                  await Promise.all(votes.map(async ({\n                    proposalId,\n                    vote: _vote\n                  }) => {\n                    const proposal = await vote.get(proposalId);\n                    if (proposal.state === 1) {\n                      return vote.vote(proposalId, _vote);\n                    }\n                    return;\n                  }));\n                  try {\n                    await Promise.all(votes.map(async ({\n                      proposalId\n                    }) => {\n                      const proposal = await vote.get(proposalId);\n                      if (proposal.state === 4) {\n                        return vote.execute(proposalId);\n                      }\n                    }));\n                    setHasVoted(true);\n                    console.log('successfully voted');\n                  } catch (err) {\n                    console.error('failed to execute votes', err);\n                  }\n                } catch (err) {\n                  console.error('failed to vote', err);\n                }\n              } catch (err) {\n                console.error('failed to delegate tokens');\n              } finally {\n                setIsVoting(false);\n              }\n            },\n            children: [proposals.map(proposal => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: proposal.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: proposal.votes.map(({\n                  type,\n                  label\n                }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    id: proposal.proposalId + '-' + type,\n                    name: proposal.proposalId,\n                    value: type,\n                    defaultChecked: type === 2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: proposal.proposalId + '-' + type,\n                    children: label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 25\n                  }, this)]\n                }, type, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)]\n            }, proposal.proposalId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: isVoting || hasVoted,\n              type: \"submit\",\n              children: isVoting ? 'Voting...' : hasVoted ? 'You Already Voted' : 'Submit Votes'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), !hasVoted && /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"This will trigger multiple transactions that you will need to sign.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mint-nft\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mint your free \\uD83C\\uDF6ADAO Membership NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-hero\",\n      children: /*#__PURE__*/_jsxDEV(Web3Button, {\n        contractAddress: editionDropAddress,\n        action: contract => {\n          contract.erc1155.claim(0, 1);\n        },\n        onSuccess: () => {\n          console.log(`🌊 Successfully Minted! Check it out on OpenSea: https://testnets.opensea.io/assets/${editionDrop.getAddress()}/0`);\n        },\n        onError: error => {\n          console.error('Failed to mint NFT', error);\n        },\n        children: \"Mint your NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uYf7W1j1J9NiLtVK4jGcRzZ/SP0=\", false, function () {\n  return [useAddress, useNetwork, useContract, useContract, useContract, useNFTBalance];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useAddress","useNetwork","useContract","ConnectWallet","Web3Button","useNFTBalance","ChainId","useState","useEffect","useMemo","AddressZero","dotenv","jsxDEV","_jsxDEV","config","App","_s","address","network","console","log","editionDropAddress","process","env","EDITION_DROP_ADDRESS","contract","editionDrop","token","TOKEN_ADDRESS","vote","VOTE_ADDRESS","data","nftBalance","hasClaimedNFT","gt","memberTokenAmounts","setMemberTokenAmounts","memberAddresses","setMemberAddresses","shortenAddress","str","substring","length","proposals","setProposals","isVoting","setIsVoting","hasVoted","setHasVoted","getAllProposals","getAll","error","checkIfUserHasVoted","proposalId","getAllAddresses","MEMBERS","split","history","getAllBalances","amounts","getAllHolderBalances","memberList","map","member","find","holder","tokenAmount","balance","displayValue","chain","id","Mumbai","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","stopPropagation","votes","proposal","voteResult","forEach","elem","document","getElementById","type","checked","delegation","getDelegationOf","delegateTo","Promise","all","_vote","get","state","execute","err","description","label","name","value","defaultChecked","htmlFor","disabled","contractAddress","action","erc1155","claim","onSuccess","getAddress","onError","_c","$RefreshReg$"],"sources":["C:/Misc/Documents/Career/FinTech/BlockChain/FrontEnd/buildspace-dao-starter/src/App.jsx"],"sourcesContent":["import {\r\n  useAddress,\r\n  useNetwork,\r\n  useContract,\r\n  ConnectWallet,\r\n  Web3Button,\r\n  useNFTBalance,\r\n} from '@thirdweb-dev/react';\r\nimport { ChainId } from '@thirdweb-dev/sdk';\r\nimport { useState, useEffect, useMemo } from 'react';\r\nimport { AddressZero } from '@ethersproject/constants';\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nconst App = () => {\r\n\r\n  const address = useAddress();\r\n  const network = useNetwork();\r\n  console.log('👋 Address:', address);\r\n\r\n  const editionDropAddress = process.env.EDITION_DROP_ADDRESS;\r\n  const { contract: editionDrop } = useContract(\r\n    editionDropAddress,\r\n    'edition-drop',\r\n  );\r\n\r\n  const { contract: token } = useContract(\r\n    process.env.TOKEN_ADDRESS,\r\n    'token',\r\n  );\r\n  const { contract: vote } = useContract(\r\n    process.env.VOTE_ADDRESS,\r\n    'vote',\r\n  );\r\n\r\n  const { data: nftBalance } = useNFTBalance(editionDrop, address, '0');\r\n\r\n  const hasClaimedNFT = useMemo(() => {\r\n    return nftBalance && nftBalance.gt(0);\r\n  }, [nftBalance]);\r\n\r\n  const [memberTokenAmounts, setMemberTokenAmounts] = useState([]);\r\n  const [memberAddresses, setMemberAddresses] = useState([]);\r\n\r\n  const shortenAddress = (str) => {\r\n    return str.substring(0, 6) + '...' + str.substring(str.length - 4);\r\n  };\r\n\r\n  const [proposals, setProposals] = useState([]);\r\n  const [isVoting, setIsVoting] = useState(false);\r\n  const [hasVoted, setHasVoted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!hasClaimedNFT) {\r\n      return;\r\n    }\r\n\r\n    const getAllProposals = async () => {\r\n      try {\r\n        const proposals = await vote.getAll();\r\n        setProposals(proposals);\r\n        console.log('🌈 Proposals:', proposals);\r\n      } catch (error) {\r\n        console.log('failed to get proposals', error);\r\n      }\r\n    };\r\n    getAllProposals();\r\n  }, [hasClaimedNFT, vote]);\r\n\r\n  useEffect(() => {\r\n    if (!hasClaimedNFT) {\r\n      return;\r\n    }\r\n\r\n    if (!proposals.length) {\r\n      return;\r\n    }\r\n\r\n    const checkIfUserHasVoted = async () => {\r\n      try {\r\n        const hasVoted = await vote.hasVoted(proposals[0].proposalId, address);\r\n        setHasVoted(hasVoted);\r\n        if (hasVoted) {\r\n          console.log('🥵 User has already voted');\r\n        } else {\r\n          console.log('🙂 User has not voted yet');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to check if wallet has voted', error);\r\n      }\r\n    };\r\n    checkIfUserHasVoted();\r\n  }, [hasClaimedNFT, proposals, address, vote]);\r\n\r\n  useEffect(() => {\r\n    if (!hasClaimedNFT) {\r\n      return;\r\n    }\r\n\r\n    const getAllAddresses = async () => {\r\n      try {\r\n        const memberAddresses = process.env.MEMBERS.split(',');\r\n        setMemberAddresses(memberAddresses);\r\n        console.log('🚀 Members addresses', memberAddresses);\r\n      } catch (error) {\r\n        console.error('failed to get member list', error);\r\n      }\r\n    };\r\n    getAllAddresses();\r\n  }, [hasClaimedNFT, editionDrop?.history]);\r\n\r\n  useEffect(() => {\r\n    if (!hasClaimedNFT) {\r\n      return;\r\n    }\r\n\r\n    const getAllBalances = async () => {\r\n      try {\r\n        const amounts = await token?.history.getAllHolderBalances();\r\n        setMemberTokenAmounts(amounts);\r\n        console.log('👜 Amounts', amounts);\r\n      } catch (error) {\r\n        console.error('failed to get member balances', error);\r\n      }\r\n    };\r\n    getAllBalances();\r\n  }, [hasClaimedNFT, token?.history]);\r\n\r\n  const memberList = useMemo(() => {\r\n    return memberAddresses.map((address) => {\r\n      const member = memberTokenAmounts?.find(\r\n        ({ holder }) => holder === address,\r\n      );\r\n\r\n      return {\r\n        address,\r\n        tokenAmount: member?.balance.displayValue || '0',\r\n      };\r\n    });\r\n  }, [memberAddresses, memberTokenAmounts]);\r\n\r\n  if (address && network?.[0].data.chain.id !== ChainId.Mumbai) {\r\n    return (\r\n      <div className=\"unsupported-network\">\r\n        <h2>Please connect to Mumbai</h2>\r\n        <p>\r\n          This dapp only works on the Mumbai network, please switch networks in\r\n          your connected wallet.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!address) {\r\n    return (\r\n      <div className=\"landing\">\r\n        <h1>Welcome to DemonSlayerDAO</h1>\r\n        <div className=\"btn-hero\">\r\n          <ConnectWallet />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (hasClaimedNFT) {\r\n    return (\r\n      <div className=\"member-page\">\r\n        <h1>🍪DAO Member Page</h1>\r\n        <p>Congratulations on being a member</p>\r\n        <div>\r\n          <div>\r\n            <h2>Member List</h2>\r\n            <table className=\"card\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Address</th>\r\n                  <th>Token Amount</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {memberList.map((member) => {\r\n                  return (\r\n                    <tr key={member.address}>\r\n                      <td>{shortenAddress(member.address)}</td>\r\n                      <td>{member.tokenAmount}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div>\r\n            <h2>Active Proposals</h2>\r\n            <form\r\n              onSubmit={async (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n\r\n                setIsVoting(true);\r\n\r\n                const votes = proposals.map((proposal) => {\r\n                  const voteResult = {\r\n                    proposalId: proposal.proposalId,\r\n                    vote: 2,\r\n                  };\r\n                  proposal.votes.forEach((vote) => {\r\n                    const elem = document.getElementById(\r\n                      proposal.proposalId + '-' + vote.type,\r\n                    );\r\n\r\n                    if (elem.checked) {\r\n                      voteResult.vote = vote.type;\r\n                      return;\r\n                    }\r\n                  });\r\n                  return voteResult;\r\n                });\r\n\r\n                try {\r\n                  const delegation = await token.getDelegationOf(address);\r\n\r\n                  if (delegation === AddressZero) {\r\n                    await token.delegateTo(address);\r\n                  }\r\n                  try {\r\n                    await Promise.all(\r\n                      votes.map(async ({ proposalId, vote: _vote }) => {\r\n                        const proposal = await vote.get(proposalId);\r\n                        if (proposal.state === 1) {\r\n                          return vote.vote(proposalId, _vote);\r\n                        }\r\n                        return;\r\n                      }),\r\n                    );\r\n                    try {\r\n                      await Promise.all(\r\n                        votes.map(async ({ proposalId }) => {\r\n                          const proposal = await vote.get(proposalId);\r\n\r\n                          if (proposal.state === 4) {\r\n                            return vote.execute(proposalId);\r\n                          }\r\n                        }),\r\n                      );\r\n                      setHasVoted(true);\r\n                      console.log('successfully voted');\r\n                    } catch (err) {\r\n                      console.error('failed to execute votes', err);\r\n                    }\r\n                  } catch (err) {\r\n                    console.error('failed to vote', err);\r\n                  }\r\n                } catch (err) {\r\n                  console.error('failed to delegate tokens');\r\n                } finally {\r\n                  setIsVoting(false);\r\n                }\r\n              }}\r\n            >\r\n              {proposals.map((proposal) => (\r\n                <div key={proposal.proposalId} className=\"card\">\r\n                  <h5>{proposal.description}</h5>\r\n                  <div>\r\n                    {proposal.votes.map(({ type, label }) => (\r\n                      <div key={type}>\r\n                        <input\r\n                          type=\"radio\"\r\n                          id={proposal.proposalId + '-' + type}\r\n                          name={proposal.proposalId}\r\n                          value={type}\r\n                          defaultChecked={type === 2}\r\n                        />\r\n                        <label htmlFor={proposal.proposalId + '-' + type}>\r\n                          {label}\r\n                        </label>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <button disabled={isVoting || hasVoted} type=\"submit\">\r\n                {isVoting\r\n                  ? 'Voting...'\r\n                  : hasVoted\r\n                  ? 'You Already Voted'\r\n                  : 'Submit Votes'}\r\n              </button>\r\n              {!hasVoted && (\r\n                <small>\r\n                  This will trigger multiple transactions that you will need to\r\n                  sign.\r\n                </small>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"mint-nft\">\r\n      <h1>Mint your free 🍪DAO Membership NFT</h1>\r\n      <div className=\"btn-hero\">\r\n        <Web3Button\r\n          contractAddress={editionDropAddress}\r\n          action={(contract) => {\r\n            contract.erc1155.claim(0, 1);\r\n          }}\r\n          onSuccess={() => {\r\n            console.log(\r\n              `🌊 Successfully Minted! Check it out on OpenSea: https://testnets.opensea.io/assets/${editionDrop.getAddress()}/0`,\r\n            );\r\n          }}\r\n          onError={(error) => {\r\n            console.error('Failed to mint NFT', error);\r\n          }}\r\n        >\r\n          Mint your NFT \r\n        </Web3Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}