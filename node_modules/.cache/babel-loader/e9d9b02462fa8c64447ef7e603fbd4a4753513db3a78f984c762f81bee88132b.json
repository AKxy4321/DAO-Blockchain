{"ast":null,"code":"import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from './classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from './classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { defaultChains, updateChainRPCs } from '@thirdweb-dev/chains';\nimport { AbstractWallet } from '../evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js';\nconst PREFIX = \"__TW__\";\nclass AsyncLocalStorage {\n  constructor(name) {\n    this.name = name;\n  }\n  getItem(key) {\n    return new Promise(res => {\n      res(localStorage.getItem(\"\".concat(PREFIX, \"/\").concat(this.name, \"/\").concat(key)));\n    });\n  }\n  setItem(key, value) {\n    return new Promise((res, rej) => {\n      try {\n        localStorage.setItem(\"\".concat(PREFIX, \"/\").concat(this.name, \"/\").concat(key), value);\n        res();\n      } catch (e) {\n        rej(e);\n      }\n    });\n  }\n  removeItem(key) {\n    return new Promise(res => {\n      localStorage.removeItem(\"\".concat(PREFIX, \"/\").concat(this.name, \"/\").concat(key));\n      res();\n    });\n  }\n}\nfunction createAsyncLocalStorage(name) {\n  return new AsyncLocalStorage(name);\n}\nconst DEFAULT_DAPP_META = {\n  name: \"thirdweb powered dApp\",\n  url: \"https://thirdweb.com\",\n  description: \"thirdweb powered dApp\",\n  logoUrl: \"https://thirdweb.com/favicon.ico\",\n  isDarkMode: true\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nvar _connectParams = /*#__PURE__*/new WeakMap();\nvar _connect = /*#__PURE__*/new WeakSet();\nvar _subscribeToEvents = /*#__PURE__*/new WeakSet();\nclass AbstractClientWallet extends AbstractWallet {\n  getMeta() {\n    return this.constructor.meta;\n  }\n  constructor(walletId, options) {\n    super();\n    _classPrivateMethodInitSpec(this, _subscribeToEvents);\n    _classPrivateMethodInitSpec(this, _connect);\n    _classPrivateFieldInitSpec(this, _connectParams, {\n      writable: true,\n      value: void 0\n    });\n    this.walletId = walletId;\n    this.options = options;\n    this.chains = ((options === null || options === void 0 ? void 0 : options.chains) || defaultChains).map(c => updateChainRPCs(c, options === null || options === void 0 ? void 0 : options.clientId));\n    this.dappMetadata = (options === null || options === void 0 ? void 0 : options.dappMetadata) || DEFAULT_DAPP_META;\n    this.walletStorage = (options === null || options === void 0 ? void 0 : options.walletStorage) || createAsyncLocalStorage(this.walletId);\n  }\n  /**\n   * tries to auto connect to the wallet\n   */\n  async autoConnect(connectOptions) {\n    // remove chainId when autoconnecting to prevent switch-network popup on page load\n    const options = connectOptions ? {\n      ...connectOptions,\n      chainId: undefined\n    } : undefined;\n    return _classPrivateMethodGet(this, _connect, _connect2).call(this, true, options);\n  }\n\n  /**\n   * connect to the wallet\n   */\n  async connect(connectOptions) {\n    _classPrivateFieldSet(this, _connectParams, connectOptions);\n    const address = await _classPrivateMethodGet(this, _connect, _connect2).call(this, false, connectOptions);\n    if (!address) {\n      throw new Error(\"Failed to connect to the wallet.\");\n    }\n    return address;\n  }\n  getConnectParams() {\n    return _classPrivateFieldGet(this, _connectParams);\n  }\n  async getSigner() {\n    const connector = await this.getConnector();\n    if (!connector) {\n      throw new Error(\"Wallet not connected\");\n    }\n    return await connector.getSigner();\n  }\n  async disconnect() {\n    const connector = await this.getConnector();\n    if (connector) {\n      await connector.disconnect();\n      this.emit(\"disconnect\");\n      connector.removeAllListeners();\n    }\n  }\n  async switchChain(chainId) {\n    const connector = await this.getConnector();\n    if (!connector) {\n      throw new Error(\"Wallet not connected\");\n    }\n    if (!connector.switchChain) {\n      throw new Error(\"Wallet does not support switching chains\");\n    }\n    return await connector.switchChain(chainId);\n  }\n  async updateChains(chains) {\n    this.chains = chains.map(c => {\n      var _this$options;\n      return updateChainRPCs(c, (_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.clientId);\n    });\n    const connector = await this.getConnector();\n    connector.updateChains(this.chains);\n  }\n\n  /**\n   * If the wallet uses a personal wallet under the hood, return it\n   */\n  getPersonalWallet() {\n    return undefined;\n  }\n}\nasync function _connect2(isAutoConnect, connectOptions) {\n  const connector = await this.getConnector();\n  _classPrivateMethodGet(this, _subscribeToEvents, _subscribeToEvents2).call(this, connector);\n  const isConnected = await connector.isConnected();\n\n  // if already connected, return the address and setup listeners\n  if (isConnected) {\n    const address = await connector.getAddress();\n    connector.setupListeners();\n\n    // ensure that connector is connected to the correct chain\n    if (connectOptions !== null && connectOptions !== void 0 && connectOptions.chainId) {\n      await connector.switchChain(connectOptions === null || connectOptions === void 0 ? void 0 : connectOptions.chainId);\n    }\n    this.emit(\"connect\", {\n      address,\n      chainId: await this.getChainId()\n    });\n    return address;\n  }\n  if (isAutoConnect) {\n    throw new Error(\"Failed to auto connect to the wallet.\");\n  }\n  try {\n    const address = await connector.connect(connectOptions);\n    return address;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\nasync function _subscribeToEvents2(connector) {\n  // subscribe to connector for events\n  connector.on(\"connect\", data => {\n    var _data$chain;\n    this.emit(\"connect\", {\n      address: data.account,\n      chainId: (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id\n    });\n  });\n  connector.on(\"change\", data => {\n    var _data$chain2;\n    this.emit(\"change\", {\n      address: data.account,\n      chainId: (_data$chain2 = data.chain) === null || _data$chain2 === void 0 ? void 0 : _data$chain2.id\n    });\n  });\n  connector.on(\"message\", data => {\n    this.emit(\"message\", data);\n  });\n  connector.on(\"disconnect\", async () => {\n    this.emit(\"disconnect\");\n  });\n  connector.on(\"error\", error => this.emit(\"error\", error));\n}\nexport { AsyncLocalStorage as A, DEFAULT_DAPP_META as D, AbstractClientWallet as a, createAsyncLocalStorage as c };","map":{"version":3,"names":["_","_classPrivateMethodInitSpec","a","_classPrivateMethodGet","_classPrivateFieldInitSpec","_classPrivateFieldSet","b","_classPrivateFieldGet","defaultChains","updateChainRPCs","AbstractWallet","PREFIX","AsyncLocalStorage","constructor","name","getItem","key","Promise","res","localStorage","concat","setItem","value","rej","e","removeItem","createAsyncLocalStorage","DEFAULT_DAPP_META","url","description","logoUrl","isDarkMode","_connectParams","WeakMap","_connect","WeakSet","_subscribeToEvents","AbstractClientWallet","getMeta","meta","walletId","options","writable","chains","map","c","clientId","dappMetadata","walletStorage","autoConnect","connectOptions","chainId","undefined","_connect2","call","connect","address","Error","getConnectParams","getSigner","connector","getConnector","disconnect","emit","removeAllListeners","switchChain","updateChains","_this$options","getPersonalWallet","isAutoConnect","_subscribeToEvents2","isConnected","getAddress","setupListeners","getChainId","error","message","on","data","_data$chain","account","chain","id","_data$chain2","A","D"],"sources":["C:/Misc/Documents/Career/FinTech/BlockChain/FrontEnd/buildspace-dao-starter/node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/dist/base-402f7b12.browser.esm.js"],"sourcesContent":["import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from './classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from './classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { defaultChains, updateChainRPCs } from '@thirdweb-dev/chains';\nimport { AbstractWallet } from '../evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js';\n\nconst PREFIX = \"__TW__\";\nclass AsyncLocalStorage {\n  constructor(name) {\n    this.name = name;\n  }\n  getItem(key) {\n    return new Promise(res => {\n      res(localStorage.getItem(`${PREFIX}/${this.name}/${key}`));\n    });\n  }\n  setItem(key, value) {\n    return new Promise((res, rej) => {\n      try {\n        localStorage.setItem(`${PREFIX}/${this.name}/${key}`, value);\n        res();\n      } catch (e) {\n        rej(e);\n      }\n    });\n  }\n  removeItem(key) {\n    return new Promise(res => {\n      localStorage.removeItem(`${PREFIX}/${this.name}/${key}`);\n      res();\n    });\n  }\n}\nfunction createAsyncLocalStorage(name) {\n  return new AsyncLocalStorage(name);\n}\n\nconst DEFAULT_DAPP_META = {\n  name: \"thirdweb powered dApp\",\n  url: \"https://thirdweb.com\",\n  description: \"thirdweb powered dApp\",\n  logoUrl: \"https://thirdweb.com/favicon.ico\",\n  isDarkMode: true\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nvar _connectParams = /*#__PURE__*/new WeakMap();\nvar _connect = /*#__PURE__*/new WeakSet();\nvar _subscribeToEvents = /*#__PURE__*/new WeakSet();\nclass AbstractClientWallet extends AbstractWallet {\n  getMeta() {\n    return this.constructor.meta;\n  }\n  constructor(walletId, options) {\n    super();\n    _classPrivateMethodInitSpec(this, _subscribeToEvents);\n    _classPrivateMethodInitSpec(this, _connect);\n    _classPrivateFieldInitSpec(this, _connectParams, {\n      writable: true,\n      value: void 0\n    });\n    this.walletId = walletId;\n    this.options = options;\n    this.chains = (options?.chains || defaultChains).map(c => updateChainRPCs(c, options?.clientId));\n    this.dappMetadata = options?.dappMetadata || DEFAULT_DAPP_META;\n    this.walletStorage = options?.walletStorage || createAsyncLocalStorage(this.walletId);\n  }\n  /**\n   * tries to auto connect to the wallet\n   */\n  async autoConnect(connectOptions) {\n    // remove chainId when autoconnecting to prevent switch-network popup on page load\n    const options = connectOptions ? {\n      ...connectOptions,\n      chainId: undefined\n    } : undefined;\n    return _classPrivateMethodGet(this, _connect, _connect2).call(this, true, options);\n  }\n\n  /**\n   * connect to the wallet\n   */\n  async connect(connectOptions) {\n    _classPrivateFieldSet(this, _connectParams, connectOptions);\n    const address = await _classPrivateMethodGet(this, _connect, _connect2).call(this, false, connectOptions);\n    if (!address) {\n      throw new Error(\"Failed to connect to the wallet.\");\n    }\n    return address;\n  }\n  getConnectParams() {\n    return _classPrivateFieldGet(this, _connectParams);\n  }\n  async getSigner() {\n    const connector = await this.getConnector();\n    if (!connector) {\n      throw new Error(\"Wallet not connected\");\n    }\n    return await connector.getSigner();\n  }\n  async disconnect() {\n    const connector = await this.getConnector();\n    if (connector) {\n      await connector.disconnect();\n      this.emit(\"disconnect\");\n      connector.removeAllListeners();\n    }\n  }\n  async switchChain(chainId) {\n    const connector = await this.getConnector();\n    if (!connector) {\n      throw new Error(\"Wallet not connected\");\n    }\n    if (!connector.switchChain) {\n      throw new Error(\"Wallet does not support switching chains\");\n    }\n    return await connector.switchChain(chainId);\n  }\n  async updateChains(chains) {\n    this.chains = chains.map(c => {\n      return updateChainRPCs(c, this.options?.clientId);\n    });\n    const connector = await this.getConnector();\n    connector.updateChains(this.chains);\n  }\n\n  /**\n   * If the wallet uses a personal wallet under the hood, return it\n   */\n  getPersonalWallet() {\n    return undefined;\n  }\n}\nasync function _connect2(isAutoConnect, connectOptions) {\n  const connector = await this.getConnector();\n  _classPrivateMethodGet(this, _subscribeToEvents, _subscribeToEvents2).call(this, connector);\n  const isConnected = await connector.isConnected();\n\n  // if already connected, return the address and setup listeners\n  if (isConnected) {\n    const address = await connector.getAddress();\n    connector.setupListeners();\n\n    // ensure that connector is connected to the correct chain\n    if (connectOptions?.chainId) {\n      await connector.switchChain(connectOptions?.chainId);\n    }\n    this.emit(\"connect\", {\n      address,\n      chainId: await this.getChainId()\n    });\n    return address;\n  }\n  if (isAutoConnect) {\n    throw new Error(\"Failed to auto connect to the wallet.\");\n  }\n  try {\n    const address = await connector.connect(connectOptions);\n    return address;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\nasync function _subscribeToEvents2(connector) {\n  // subscribe to connector for events\n  connector.on(\"connect\", data => {\n    this.emit(\"connect\", {\n      address: data.account,\n      chainId: data.chain?.id\n    });\n  });\n  connector.on(\"change\", data => {\n    this.emit(\"change\", {\n      address: data.account,\n      chainId: data.chain?.id\n    });\n  });\n  connector.on(\"message\", data => {\n    this.emit(\"message\", data);\n  });\n  connector.on(\"disconnect\", async () => {\n    this.emit(\"disconnect\");\n  });\n  connector.on(\"error\", error => this.emit(\"error\", error));\n}\n\nexport { AsyncLocalStorage as A, DEFAULT_DAPP_META as D, AbstractClientWallet as a, createAsyncLocalStorage as c };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}