{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EthersAdapter_ethers, _EthersAdapter_signer, _EthersAdapter_provider;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst abstract_signer_1 = require(\"@ethersproject/abstract-signer\");\nconst bignumber_1 = require(\"@ethersproject/bignumber\");\nconst safe_core_sdk_utils_1 = require(\"@safe-global/safe-core-sdk-utils\");\nconst contractInstancesEthers_1 = require(\"./contracts/contractInstancesEthers\");\nconst utils_1 = require(\"./utils\");\nclass EthersAdapter {\n  constructor(_ref) {\n    let {\n      ethers,\n      signerOrProvider\n    } = _ref;\n    _EthersAdapter_ethers.set(this, void 0);\n    _EthersAdapter_signer.set(this, void 0);\n    _EthersAdapter_provider.set(this, void 0);\n    if (!ethers) {\n      throw new Error('ethers property missing from options');\n    }\n    __classPrivateFieldSet(this, _EthersAdapter_ethers, ethers, \"f\");\n    const isSigner = signerOrProvider instanceof abstract_signer_1.Signer;\n    if (isSigner) {\n      const signer = signerOrProvider;\n      if (!signer.provider) {\n        throw new Error('Signer must be connected to a provider');\n      }\n      __classPrivateFieldSet(this, _EthersAdapter_provider, signer.provider, \"f\");\n      __classPrivateFieldSet(this, _EthersAdapter_signer, signer, \"f\");\n    } else {\n      __classPrivateFieldSet(this, _EthersAdapter_provider, signerOrProvider, \"f\");\n    }\n  }\n  getProvider() {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n  }\n  getSigner() {\n    return __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\");\n  }\n  isAddress(address) {\n    return __classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.isAddress(address);\n  }\n  async getEip3770Address(fullAddress) {\n    const chainId = await this.getChainId();\n    return (0, safe_core_sdk_utils_1.validateEip3770Address)(fullAddress, chainId);\n  }\n  async getBalance(address, blockTag) {\n    return bignumber_1.BigNumber.from(await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getBalance(address, blockTag));\n  }\n  async getNonce(address, blockTag) {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getTransactionCount(address, blockTag);\n  }\n  async getChainId() {\n    return (await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getNetwork()).chainId;\n  }\n  getChecksummedAddress(address) {\n    return __classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.getAddress(address);\n  }\n  getSafeContract(_ref2) {\n    let {\n      safeVersion,\n      chainId,\n      singletonDeployment,\n      customContractAddress\n    } = _ref2;\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n    if (!contractAddress) {\n      throw new Error('Invalid SafeProxy contract address');\n    }\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    return (0, contractInstancesEthers_1.getSafeContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n  getSafeProxyFactoryContract(_ref3) {\n    let {\n      safeVersion,\n      chainId,\n      singletonDeployment,\n      customContractAddress\n    } = _ref3;\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n    if (!contractAddress) {\n      throw new Error('Invalid SafeProxyFactory contract address');\n    }\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    return (0, contractInstancesEthers_1.getSafeProxyFactoryContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n  getMultiSendContract(_ref4) {\n    let {\n      safeVersion,\n      chainId,\n      singletonDeployment,\n      customContractAddress\n    } = _ref4;\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n    if (!contractAddress) {\n      throw new Error('Invalid MultiSend contract address');\n    }\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    return (0, contractInstancesEthers_1.getMultiSendContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n  getMultiSendCallOnlyContract(_ref5) {\n    let {\n      safeVersion,\n      chainId,\n      singletonDeployment,\n      customContractAddress\n    } = _ref5;\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n    if (!contractAddress) {\n      throw new Error('Invalid MultiSendCallOnly contract address');\n    }\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    return (0, contractInstancesEthers_1.getMultiSendCallOnlyContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n  getCompatibilityFallbackHandlerContract(_ref6) {\n    let {\n      safeVersion,\n      chainId,\n      singletonDeployment,\n      customContractAddress\n    } = _ref6;\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n    if (!contractAddress) {\n      throw new Error('Invalid CompatibilityFallbackHandler contract address');\n    }\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    return (0, contractInstancesEthers_1.getCompatibilityFallbackHandlerContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n  getSignMessageLibContract(_ref7) {\n    let {\n      safeVersion,\n      chainId,\n      singletonDeployment,\n      customContractAddress\n    } = _ref7;\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n    if (!contractAddress) {\n      throw new Error('Invalid SignMessageLib contract address');\n    }\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    return (0, contractInstancesEthers_1.getSignMessageLibContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n  getCreateCallContract(_ref8) {\n    let {\n      safeVersion,\n      chainId,\n      singletonDeployment,\n      customContractAddress\n    } = _ref8;\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n    if (!contractAddress) {\n      throw new Error('Invalid CreateCall contract address');\n    }\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    return (0, contractInstancesEthers_1.getCreateCallContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n  async getContractCode(address, blockTag) {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getCode(address, blockTag);\n  }\n  async isContractDeployed(address, blockTag) {\n    const contractCode = await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getCode(address, blockTag);\n    return contractCode !== '0x';\n  }\n  async getStorageAt(address, position) {\n    const content = await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getStorageAt(address, position);\n    const decodedContent = this.decodeParameters(['address'], content);\n    return decodedContent[0];\n  }\n  async getTransaction(transactionHash) {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getTransaction(transactionHash);\n  }\n  async getSignerAddress() {\n    var _a;\n    return (_a = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")) === null || _a === void 0 ? void 0 : _a.getAddress();\n  }\n  signMessage(message) {\n    if (!__classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")) {\n      throw new Error('EthAdapter must be initialized with a signer to use this method');\n    }\n    const messageArray = __classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.arrayify(message);\n    return __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\").signMessage(messageArray);\n  }\n  async signTypedData(safeTransactionEIP712Args) {\n    if (!__classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")) {\n      throw new Error('EthAdapter must be initialized with a signer to use this method');\n    }\n    if ((0, utils_1.isTypedDataSigner)(__classPrivateFieldGet(this, _EthersAdapter_signer, \"f\"))) {\n      const typedData = (0, safe_core_sdk_utils_1.generateTypedData)(safeTransactionEIP712Args);\n      const signature = await __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")._signTypedData(typedData.domain, {\n        SafeTx: typedData.types.SafeTx\n      }, typedData.message);\n      return signature;\n    }\n    throw new Error('The current signer does not implement EIP-712 to sign typed data');\n  }\n  async estimateGas(transaction) {\n    return (await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").estimateGas(transaction)).toNumber();\n  }\n  call(transaction, blockTag) {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").call(transaction, blockTag);\n  }\n  encodeParameters(types, values) {\n    return new (__classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.AbiCoder)().encode(types, values);\n  }\n  decodeParameters(types, values) {\n    return new (__classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.AbiCoder)().decode(types, values);\n  }\n}\n_EthersAdapter_ethers = new WeakMap(), _EthersAdapter_signer = new WeakMap(), _EthersAdapter_provider = new WeakMap();\nexports.default = EthersAdapter;","map":{"version":3,"names":["abstract_signer_1","require","bignumber_1","safe_core_sdk_utils_1","contractInstancesEthers_1","utils_1","EthersAdapter","constructor","_ref","ethers","signerOrProvider","_EthersAdapter_ethers","set","_EthersAdapter_signer","_EthersAdapter_provider","Error","__classPrivateFieldSet","isSigner","Signer","signer","provider","getProvider","__classPrivateFieldGet","getSigner","isAddress","address","utils","getEip3770Address","fullAddress","chainId","getChainId","validateEip3770Address","getBalance","blockTag","BigNumber","from","getNonce","getTransactionCount","getNetwork","getChecksummedAddress","getAddress","getSafeContract","_ref2","safeVersion","singletonDeployment","customContractAddress","contractAddress","networkAddresses","getSafeContractInstance","getSafeProxyFactoryContract","_ref3","getSafeProxyFactoryContractInstance","getMultiSendContract","_ref4","getMultiSendContractInstance","getMultiSendCallOnlyContract","_ref5","getMultiSendCallOnlyContractInstance","getCompatibilityFallbackHandlerContract","_ref6","getCompatibilityFallbackHandlerContractInstance","getSignMessageLibContract","_ref7","getSignMessageLibContractInstance","getCreateCallContract","_ref8","getCreateCallContractInstance","getContractCode","getCode","isContractDeployed","contractCode","getStorageAt","position","content","decodedContent","decodeParameters","getTransaction","transactionHash","getSignerAddress","_a","signMessage","message","messageArray","arrayify","signTypedData","safeTransactionEIP712Args","isTypedDataSigner","typedData","generateTypedData","signature","_signTypedData","domain","SafeTx","types","estimateGas","transaction","toNumber","call","encodeParameters","values","AbiCoder","encode","decode","exports","default"],"sources":["../../src/EthersAdapter.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}